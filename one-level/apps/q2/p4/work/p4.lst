 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 212
    4                      ; Text size: 4516
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _summation
   81  000010d4          	.global _summation
   82  000010d4          	_summation:
   83                      ;  Function 'summation'; 0 bytes of locals, 1 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  8fc20000	lw	r2,(r30)
   90  000010ec  64410000	snei	r1,r2,#0
   91  000010f0  10200028	beqz	r1,L16_LF0
   92  000010f4  54000000	nop; not filled.
   93  000010f8  23bdfff8	addi	r29,r29,#-8
   94  000010fc  2041ffff	addi	r1,r2,#-1
   95  00001100  afa10000	sw	(r29),r1
   96  00001104  0fffffcc	jal	_summation
   97  00001108  54000000	nop; not filled.
   98  0000110c  00410820	add	r1,r2,r1
   99  00001110  23bd0008	addi	r29,r29,#8
  100  00001114  08000008	j	L15_LF0
  101  00001118  54000000	nop; not filled.
  102  0000111c          	L16_LF0:
  103  0000111c  00020820	add	r1,r0,r2
  104  00001120          	L15_LF0:
  105  00001120  8fa20000	lw	r2,0(r29)
  106  00001124  8fdffff8	lw	r31,-8(r30)
  107  00001128  001ee820	add	r29,r0,r30
  108  0000112c  8fdefffc	lw	r30,-4(r30)
  109  00001130  4be00000	jr	r31
  110  00001134  54000000	nop
  111  00001138          	.endproc _summation
  112  00001138          	.data
  113  00003000          	.align 2
  114  00003000          	LC0_LF0:
  115  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  115  00003004  653a2025	
  115  00003008  73203c68	
  115  0000300c  616e646c	
  115  00003010  655f746f	
  115  00003014  5f70726f	
  115  00003018  63735f63	
  115  0000301c  6f6d706c	
  115  00003020  65746564	
  115  00003024  5f73656d	
  115  00003028  6170686f	
  115  0000302c  72653e0a	
  115  00003030  00      	
  116  00003031          	.align 2
  117  00003034          	LC1_LF0:
  118  00003034  50617274	.ascii "Part 4 (%d): Starting Recursive Test to Increase Call Stack!\n\000"
  118  00003038  20342028	
  118  0000303c  2564293a	
  118  00003040  20537461	
  118  00003044  7274696e	
  118  00003048  67205265	
  118  0000304c  63757273	
  118  00003050  69766520	
  118  00003054  54657374	
  118  00003058  20746f20	
  118  0000305c  496e6372	
  118  00003060  65617365	
  118  00003064  2043616c	
  118  00003068  6c205374	
  118  0000306c  61636b21	
  118  00003070  0a00    	
  119  00003072          	.align 2
  120  00003074          	LC2_LF0:
  121  00003074  53756d6d	.ascii "Summaion of %d is %d\n\000"
  121  00003078  61696f6e	
  121  0000307c  206f6620	
  121  00003080  25642069	
  121  00003084  73202564	
  121  00003088  0a00    	
  122  0000308a          	.align 2
  123  0000308c          	LC3_LF0:
  124  0000308c  50617274	.ascii "Part 4 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  124  00003090  20342028	
  124  00003094  2564293a	
  124  00003098  20426164	
  124  0000309c  2073656d	
  124  000030a0  6170686f	
  124  000030a4  72652073	
  124  000030a8  5f70726f	
  124  000030ac  63735f63	
  124  000030b0  6f6d706c	
  124  000030b4  65746564	
  124  000030b8  20282564	
  124  000030bc  29210a00	
  125  000030c0          	.align 2
  126  000030c0          	LC4_LF0:
  127  000030c0  50617274	.ascii "Part 4 (%d): Done!\n\000"
  127  000030c4  20342028	
  127  000030c8  2564293a	
  127  000030cc  20446f6e	
  127  000030d0  65210a00	
  128  000030d4          	.text
  129  00001138          	.align 2
  130  00001138          	.proc _main
  131  00001138          	.global _main
  132  00001138          	_main:
  133                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  134  00001138  afbefffc	sw	-4(r29),r30; push fp
  135  0000113c  001df020	add	r30,r0,r29; fp = sp
  136  00001140  afbffff8	sw	-8(r29),r31; push ret addr
  137  00001144  2fbd0008	subui	r29,r29,#8; alloc local storage
  138  00001148  8fc20000	lw	r2,(r30)
  139  0000114c  8fc30004	lw	r3,4(r30)
  140  00001150  0c001048	jal	___main
  141  00001154  54000000	nop; not filled.
  142  00001158  64410002	snei	r1,r2,#2
  143  0000115c  10200028	beqz	r1,L18_LF0
  144  00001160  54000000	nop; not filled.
  145  00001164  23bdfff8	addi	r29,r29,#-8
  146  00001168  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  147  0000116c  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  148  00001170  afa40000	sw	(r29),r4
  149  00001174  0c000164	jal	_Printf
  150  00001178  54000000	nop; not filled.
  151  0000117c  0c000264	jal	_Exit
  152  00001180  54000000	nop; not filled.
  153  00001184  23bd0008	addi	r29,r29,#8
  154  00001188          	L18_LF0:
  155  00001188  23bdfff0	addi	r29,r29,#-16
  156  0000118c  8c630004	lw	r3,4(r3)
  157  00001190  afa30000	sw	(r29),r3
  158  00001194  20040000	addi	r4,r0,#0
  159  00001198  afa40004	sw	4(r29),r4
  160  0000119c  2004000a	addi	r4,r0,#10
  161  000011a0  afa40008	sw	8(r29),r4
  162  000011a4  0c000af8	jal	_dstrtol
  163  000011a8  54000000	nop; not filled.
  164  000011ac  00011020	add	r2,r0,r1
  165  000011b0  0c000134	jal	_getpid
  166  000011b4  54000000	nop; not filled.
  167  000011b8  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  168  000011bc  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  169  000011c0  afa40000	sw	(r29),r4
  170  000011c4  afa10004	sw	4(r29),r1
  171  000011c8  0c000110	jal	_Printf
  172  000011cc  54000000	nop; not filled.
  173  000011d0  23bd0010	addi	r29,r29,#16
  174  000011d4  23bdfff8	addi	r29,r29,#-8
  175  000011d8  200403e7	addi	r4,r0,#999
  176  000011dc  afa40000	sw	(r29),r4
  177  000011e0  0ffffef0	jal	_summation
  178  000011e4  54000000	nop; not filled.
  179  000011e8  202103e8	addi	r1,r1,#1000
  180  000011ec  23bd0008	addi	r29,r29,#8
  181  000011f0  23bdfff0	addi	r29,r29,#-16
  182  000011f4  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  183  000011f8  24843074	addui	r4,r4,(LC2_LF0)&0xffff
  184  000011fc  afa40000	sw	(r29),r4
  185  00001200  200403e8	addi	r4,r0,#1000
  186  00001204  afa40004	sw	4(r29),r4
  187  00001208  afa10008	sw	8(r29),r1
  188  0000120c  0c0000cc	jal	_Printf
  189  00001210  54000000	nop; not filled.
  190  00001214  afa20000	sw	(r29),r2
  191  00001218  0c000114	jal	_sem_signal
  192  0000121c  54000000	nop; not filled.
  193  00001220  23bd0010	addi	r29,r29,#16
  194  00001224  64210001	snei	r1,r1,#1
  195  00001228  10200038	beqz	r1,L21_LF0
  196  0000122c  54000000	nop; not filled.
  197  00001230  0c0000b4	jal	_getpid
  198  00001234  54000000	nop; not filled.
  199  00001238  23bdfff0	addi	r29,r29,#-16
  200  0000123c  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  201  00001240  2484308c	addui	r4,r4,(LC3_LF0)&0xffff
  202  00001244  afa40000	sw	(r29),r4
  203  00001248  afa10004	sw	4(r29),r1
  204  0000124c  afa20008	sw	8(r29),r2
  205  00001250  0c000088	jal	_Printf
  206  00001254  54000000	nop; not filled.
  207  00001258  0c000188	jal	_Exit
  208  0000125c  54000000	nop; not filled.
  209  00001260  23bd0010	addi	r29,r29,#16
  210  00001264          	L21_LF0:
  211  00001264  0c000080	jal	_getpid
  212  00001268  54000000	nop; not filled.
  213  0000126c  23bdfff8	addi	r29,r29,#-8
  214  00001270  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  215  00001274  248430c0	addui	r4,r4,(LC4_LF0)&0xffff
  216  00001278  afa40000	sw	(r29),r4
  217  0000127c  afa10004	sw	4(r29),r1
  218  00001280  0c000058	jal	_Printf
  219  00001284  54000000	nop; not filled.
  220  00001288  23bd0008	addi	r29,r29,#8
  221  0000128c  0c000f00	jal	_exit
  222  00001290  54000000	nop
  223  00001294          	.endproc _main
  224                      ;;;
  225                      ;;; Stub functions for DLX traps.
  226                      ;;;
  227                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  228                      ;;;
  229                      ;;; The traps such as Open and Close
  230                      ;;; (note the capital letters) are for use by user programs.  The traps
  231                      ;;; with names such as open and close (lower case) are for use by the OS.
  232                      ;;;
  235  00001294          	.align 2
  237                      ;;; The following are the traps to be used by user-level programs
  238                      ;;;
  240  00001294          	.align 2
  241  00001294          	.proc _Open
  242  00001294          	.global _Open
  243  00001294          	_Open:
  244                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  245                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  246                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  247  00001294  44000213	trap	#0x213
  248  00001298  4be00000	jr	r31
  249  0000129c  54000000	nop
  250  000012a0          	.endproc _Open
  252  000012a0          	.proc _Close
  253  000012a0          	.global _Close
  254  000012a0          	_Close:
  255  000012a0  44000214	trap	#0x214
  256  000012a4  4be00000	jr	r31
  257  000012a8  54000000	nop
  258  000012ac          	.endproc _Close
  260  000012ac          	.proc _Read
  261  000012ac          	.global _Read
  262  000012ac          	_Read:
  263  000012ac  44000210	trap	#0x210
  264  000012b0  4be00000	jr	r31
  265  000012b4  54000000	nop
  266  000012b8          	.endproc _Read
  268  000012b8          	.proc _Write
  269  000012b8          	.global _Write
  270  000012b8          	_Write:
  271  000012b8  44000211	trap	#0x211
  272  000012bc  4be00000	jr	r31
  273  000012c0  54000000	nop
  274  000012c4          	.endproc _Write
  276  000012c4          	.proc _Lseek
  277  000012c4          	.global _Lseek
  278  000012c4          	_Lseek:
  279  000012c4  44000212	trap	#0x212
  280  000012c8  4be00000	jr	r31
  281  000012cc  54000000	nop
  282  000012d0          	.endproc _Lseek
  284  000012d0          	.proc _Putchar
  285  000012d0          	.global _Putchar
  286  000012d0          	_Putchar:
  287  000012d0  44000280	trap	#0x280
  288  000012d4  4be00000	jr	r31
  289  000012d8  54000000	nop
  290  000012dc          	.endproc _Putchar
  292  000012dc          	.proc _Printf
  293  000012dc          	.global _Printf
  294  000012dc          	_Printf:
  295  000012dc  44000201	trap	#0x201
  296  000012e0  4be00000	jr	r31
  297  000012e4  54000000	nop
  298  000012e8          	.endproc _Printf
  300  000012e8          	.proc _getpid
  301  000012e8          	.global _getpid
  302  000012e8          	_getpid:
  303  000012e8  44000431	trap	#0x431
  304  000012ec  4be00000	jr	r31
  305  000012f0  54000000	nop
  306  000012f4          	.endproc _getpid
  308  000012f4          	.proc _process_create
  309  000012f4          	.global _process_create
  310  000012f4          	_process_create:
  311  000012f4  44000432	trap	#0x432
  312  000012f8  4be00000	jr	r31
  313  000012fc  54000000	nop
  314  00001300          	.endproc _process_create
  316  00001300          	.proc _shmget
  317  00001300          	.global _shmget
  318  00001300          	_shmget:
  319  00001300  44000440	trap	#0x440
  320  00001304  4be00000	jr	r31
  321  00001308  54000000	nop
  322  0000130c          	.endproc _shmget
  324  0000130c          	.proc _shmat
  325  0000130c          	.global _shmat
  326  0000130c          	_shmat:
  327  0000130c  44000441	trap	#0x441
  328  00001310  4be00000	jr	r31
  329  00001314  54000000	nop
  330  00001318          	.endproc _shmat
  332  00001318          	.proc _sem_create
  333  00001318          	.global _sem_create
  334  00001318          	_sem_create:
  335  00001318  44000450	trap	#0x450
  336  0000131c  4be00000	jr	r31
  337  00001320  54000000	nop
  338  00001324          	.endproc _sem_create
  340  00001324          	.proc _sem_wait
  341  00001324          	.global _sem_wait
  342  00001324          	_sem_wait:
  343  00001324  44000451	trap	#0x451
  344  00001328  4be00000	jr	r31
  345  0000132c  54000000	nop
  346  00001330          	.endproc _sem_wait
  348  00001330          	.proc _sem_signal
  349  00001330          	.global _sem_signal
  350  00001330          	_sem_signal:
  351  00001330  44000452	trap	#0x452
  352  00001334  4be00000	jr	r31
  353  00001338  54000000	nop
  354  0000133c          	.endproc _sem_signal
  356  0000133c          	.proc _lock_create
  357  0000133c          	.global _lock_create
  358  0000133c          	_lock_create:
  359  0000133c  44000453	trap	#0x453
  360  00001340  4be00000	jr	r31
  361  00001344  54000000	nop
  362  00001348          	.endproc _lock_create
  364  00001348          	.proc _lock_acquire
  365  00001348          	.global _lock_acquire
  366  00001348          	_lock_acquire:
  367  00001348  44000454	trap	#0x454
  368  0000134c  4be00000	jr	r31
  369  00001350  54000000	nop
  370  00001354          	.endproc _lock_acquire
  372  00001354          	.proc _lock_release
  373  00001354          	.global _lock_release
  374  00001354          	_lock_release:
  375  00001354  44000455	trap	#0x455
  376  00001358  4be00000	jr	r31
  377  0000135c  54000000	nop
  378  00001360          	.endproc _lock_release
  380  00001360          	.proc _cond_create
  381  00001360          	.global _cond_create
  382  00001360          	_cond_create:
  383  00001360  44000456	trap	#0x456
  384  00001364  4be00000	jr	r31
  385  00001368  54000000	nop
  386  0000136c          	.endproc _cond_create
  388  0000136c          	.proc _cond_wait
  389  0000136c          	.global _cond_wait
  390  0000136c          	_cond_wait:
  391  0000136c  44000457	trap	#0x457
  392  00001370  4be00000	jr	r31
  393  00001374  54000000	nop
  394  00001378          	.endproc _cond_wait
  396  00001378          	.proc _cond_signal
  397  00001378          	.global _cond_signal
  398  00001378          	_cond_signal:
  399  00001378  44000458	trap	#0x458
  400  0000137c  4be00000	jr	r31
  401  00001380  54000000	nop
  402  00001384          	.endproc _cond_signal
  404  00001384          	.proc _cond_broadcast
  405  00001384          	.global _cond_broadcast
  406  00001384          	_cond_broadcast:
  407  00001384  44000459	trap	#0x459
  408  00001388  4be00000	jr	r31
  409  0000138c  54000000	nop
  410  00001390          	.endproc _cond_broadcast
  412  00001390          	.proc _mbox_create
  413  00001390          	.global _mbox_create
  414  00001390          	_mbox_create:
  415  00001390  44000460	trap	#0x460
  416  00001394  4be00000	jr	r31
  417  00001398  54000000	nop
  418  0000139c          	.endproc _mbox_create
  420  0000139c          	.proc _mbox_open
  421  0000139c          	.global _mbox_open
  422  0000139c          	_mbox_open:
  423  0000139c  44000461	trap	#0x461
  424  000013a0  4be00000	jr	r31
  425  000013a4  54000000	nop
  426  000013a8          	.endproc _mbox_open
  428  000013a8          	.proc _mbox_close
  429  000013a8          	.global _mbox_close
  430  000013a8          	_mbox_close:
  431  000013a8  44000462	trap	#0x462
  432  000013ac  4be00000	jr	r31
  433  000013b0  54000000	nop
  434  000013b4          	.endproc _mbox_close
  436  000013b4          	.proc _mbox_send
  437  000013b4          	.global _mbox_send
  438  000013b4          	_mbox_send:
  439  000013b4  44000463	trap	#0x463
  440  000013b8  4be00000	jr	r31
  441  000013bc  54000000	nop
  442  000013c0          	.endproc _mbox_send
  444  000013c0          	.proc _mbox_recv
  445  000013c0          	.global _mbox_recv
  446  000013c0          	_mbox_recv:
  447  000013c0  44000464	trap	#0x464
  448  000013c4  4be00000	jr	r31
  449  000013c8  54000000	nop
  450  000013cc          	.endproc _mbox_recv
  452  000013cc          	.proc _sleep
  453  000013cc          	.global _sleep
  454  000013cc          	_sleep:
  455  000013cc  44000465	trap	#0x465
  456  000013d0  4be00000	jr	r31
  457  000013d4  54000000	nop
  458  000013d8          	.endproc _sleep
  460  000013d8          	.proc _yield
  461  000013d8          	.global _yield
  462  000013d8          	_yield:
  463  000013d8  44000466	trap	#0x466
  464  000013dc  4be00000	jr	r31
  465  000013e0  54000000	nop
  466  000013e4          	.endproc _yield
  469  000013e4          	.proc _Exit
  470  000013e4          	.global _Exit
  471  000013e4          	_Exit:
  472  000013e4  44000500	trap	#0x500
  473  000013e8  4be00000	jr	r31
  474  000013ec  54000000	nop
  475  000013f0          	.endproc _Exit
  478  000013f0          	.proc _malloc
  479  000013f0          	.global _malloc
  480  000013f0          	_malloc:
  481  000013f0  44000467	trap	#0x467
  482  000013f4  4be00000	jr	r31
  483  000013f8          	.endproc _malloc
  486  000013f8          	.proc _mfree
  487  000013f8          	.global _mfree
  488  000013f8          	_mfree:
  489  000013f8  44000468	trap	#0x468
  490  000013fc  4be00000	jr	r31
  491  00001400          	.endproc _mfree
  492                      ; Compiled by GCC
  494  00001400          	.align 2
  495  00001400          	.proc _isspace
  496  00001400          	.global _isspace
  497  00001400          	_isspace:
  498                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  499  00001400  afbefffc	sw	-4(r29),r30; push fp
  500  00001404  001df020	add	r30,r0,r29; fp = sp
  501  00001408  afbffff8	sw	-8(r29),r31; push ret addr
  502  0000140c  2fbd0018	subui	r29,r29,#24; alloc local storage
  503  00001410  afa20000	sw	0(r29),r2
  504  00001414  afa30004	sw	4(r29),r3
  505  00001418  afa40008	sw	8(r29),r4
  506  0000141c  83c20003	lb	r2,3(r30)
  507  00001420  20010000	addi	r1,r0,#0
  508  00001424  304300ff	andi	r3,r2,#0x00ff
  509  00001428  60640020	seqi	r4,r3,#32
  510  0000142c  1480002c	bnez	r4,L3_LF2
  511  00001430  54000000	nop; delay slot nop
  512  00001434  304300ff	andi	r3,r2,#0x00ff
  513  00001438  60640009	seqi	r4,r3,#9
  514  0000143c  1480001c	bnez	r4,L3_LF2
  515  00001440  54000000	nop; delay slot nop
  516  00001444  304300ff	andi	r3,r2,#0x00ff
  517  00001448  6064000a	seqi	r4,r3,#10
  518  0000144c  1480000c	bnez	r4,L3_LF2
  519  00001450  54000000	nop; delay slot nop
  520  00001454  08000008	j	L2_LF2
  521  00001458  54000000	nop; delay slot nop
  522  0000145c          	L3_LF2:
  523  0000145c  20010001	addi	r1,r0,#1
  524  00001460          	L2_LF2:
  525  00001460  08000004	j	L1_LF2
  526  00001464  54000000	nop; delay slot nop
  527  00001468          	L1_LF2:
  528  00001468  8fa20000	lw	r2,0(r29)
  529  0000146c  8fa30004	lw	r3,4(r29)
  530  00001470  8fa40008	lw	r4,8(r29)
  531  00001474  8fdffff8	lw	r31,-8(r30)
  532  00001478  001ee820	add	r29,r0,r30
  533  0000147c  8fdefffc	lw	r30,-4(r30)
  534  00001480  4be00000	jr	r31
  535  00001484  54000000	nop
  536  00001488          	.endproc _isspace
  537  00001488          	.align 2
  538  00001488          	.proc _isxdigit
  539  00001488          	.global _isxdigit
  540  00001488          	_isxdigit:
  541                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  542  00001488  afbefffc	sw	-4(r29),r30; push fp
  543  0000148c  001df020	add	r30,r0,r29; fp = sp
  544  00001490  afbffff8	sw	-8(r29),r31; push ret addr
  545  00001494  2fbd0018	subui	r29,r29,#24; alloc local storage
  546  00001498  afa20000	sw	0(r29),r2
  547  0000149c  afa30004	sw	4(r29),r3
  548  000014a0  afa40008	sw	8(r29),r4
  549  000014a4  83c20003	lb	r2,3(r30)
  550  000014a8  20010000	addi	r1,r0,#0
  551  000014ac  304300ff	andi	r3,r2,#0x00ff
  552  000014b0  6c64002f	sgtui	r4,r3,#47
  553  000014b4  1080001c	beqz	r4,L7_LF2
  554  000014b8  54000000	nop; delay slot nop
  555  000014bc  304300ff	andi	r3,r2,#0x00ff
  556  000014c0  70640039	sleui	r4,r3,#57
  557  000014c4  1480005c	bnez	r4,L6_LF2
  558  000014c8  54000000	nop; delay slot nop
  559  000014cc  08000004	j	L7_LF2
  560  000014d0  54000000	nop; delay slot nop
  561  000014d4          	L7_LF2:
  562  000014d4  304300ff	andi	r3,r2,#0x00ff
  563  000014d8  6c640060	sgtui	r4,r3,#96
  564  000014dc  1080001c	beqz	r4,L8_LF2
  565  000014e0  54000000	nop; delay slot nop
  566  000014e4  304300ff	andi	r3,r2,#0x00ff
  567  000014e8  70640066	sleui	r4,r3,#102
  568  000014ec  14800034	bnez	r4,L6_LF2
  569  000014f0  54000000	nop; delay slot nop
  570  000014f4  08000004	j	L8_LF2
  571  000014f8  54000000	nop; delay slot nop
  572  000014fc          	L8_LF2:
  573  000014fc  304300ff	andi	r3,r2,#0x00ff
  574  00001500  6c640040	sgtui	r4,r3,#64
  575  00001504  10800020	beqz	r4,L5_LF2
  576  00001508  54000000	nop; delay slot nop
  577  0000150c  304300ff	andi	r3,r2,#0x00ff
  578  00001510  70640041	sleui	r4,r3,#65
  579  00001514  1480000c	bnez	r4,L6_LF2
  580  00001518  54000000	nop; delay slot nop
  581  0000151c  08000008	j	L5_LF2
  582  00001520  54000000	nop; delay slot nop
  583  00001524          	L6_LF2:
  584  00001524  20010001	addi	r1,r0,#1
  585  00001528          	L5_LF2:
  586  00001528  08000004	j	L4_LF2
  587  0000152c  54000000	nop; delay slot nop
  588  00001530          	L4_LF2:
  589  00001530  8fa20000	lw	r2,0(r29)
  590  00001534  8fa30004	lw	r3,4(r29)
  591  00001538  8fa40008	lw	r4,8(r29)
  592  0000153c  8fdffff8	lw	r31,-8(r30)
  593  00001540  001ee820	add	r29,r0,r30
  594  00001544  8fdefffc	lw	r30,-4(r30)
  595  00001548  4be00000	jr	r31
  596  0000154c  54000000	nop
  597  00001550          	.endproc _isxdigit
  598  00001550          	.align 2
  599  00001550          	.proc _dstrcpy
  600  00001550          	.global _dstrcpy
  601  00001550          	_dstrcpy:
  602                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  603  00001550  afbefffc	sw	-4(r29),r30; push fp
  604  00001554  001df020	add	r30,r0,r29; fp = sp
  605  00001558  afbffff8	sw	-8(r29),r31; push ret addr
  606  0000155c  2fbd0018	subui	r29,r29,#24; alloc local storage
  607  00001560  afa20000	sw	0(r29),r2
  608  00001564  afa30004	sw	4(r29),r3
  609  00001568  8fc10000	lw	r1,(r30)
  610  0000156c  afc1fff4	sw	-12(r30),r1
  611  00001570          	L10_LF2:
  612  00001570  8fc10000	lw	r1,(r30)
  613  00001574  20220001	addi	r2,r1,#1
  614  00001578  afc20000	sw	(r30),r2
  615  0000157c  8fc20004	lw	r2,4(r30)
  616  00001580  20430001	addi	r3,r2,#1
  617  00001584  afc30004	sw	4(r30),r3
  618  00001588  80420000	lb	r2,(r2)
  619  0000158c  a0220000	sb	(r1),r2
  620  00001590  a3c2fff3	sb	-13(r30),r2
  621  00001594          	L12_LF2:
  622  00001594  93c1fff3	lbu	r1,-13(r30)
  623  00001598  64220000	snei	r2,r1,#0
  624  0000159c  1440000c	bnez	r2,L13_LF2
  625  000015a0  54000000	nop; delay slot nop
  626  000015a4  0800000c	j	L11_LF2
  627  000015a8  54000000	nop; delay slot nop
  628  000015ac          	L13_LF2:
  629  000015ac  0bffffc0	j	L10_LF2
  630  000015b0  54000000	nop; delay slot nop
  631  000015b4          	L11_LF2:
  632  000015b4  8fc1fff4	lw	r1,-12(r30)
  633  000015b8  08000004	j	L9_LF2
  634  000015bc  54000000	nop; delay slot nop
  635  000015c0          	L9_LF2:
  636  000015c0  8fa20000	lw	r2,0(r29)
  637  000015c4  8fa30004	lw	r3,4(r29)
  638  000015c8  8fdffff8	lw	r31,-8(r30)
  639  000015cc  001ee820	add	r29,r0,r30
  640  000015d0  8fdefffc	lw	r30,-4(r30)
  641  000015d4  4be00000	jr	r31
  642  000015d8  54000000	nop
  643  000015dc          	.endproc _dstrcpy
  644  000015dc          	.align 2
  645  000015dc          	.proc _dstrncpy
  646  000015dc          	.global _dstrncpy
  647  000015dc          	_dstrncpy:
  648                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  649  000015dc  afbefffc	sw	-4(r29),r30; push fp
  650  000015e0  001df020	add	r30,r0,r29; fp = sp
  651  000015e4  afbffff8	sw	-8(r29),r31; push ret addr
  652  000015e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  653  000015ec  afa20000	sw	0(r29),r2
  654  000015f0  afa30004	sw	4(r29),r3
  655  000015f4  8fc10000	lw	r1,(r30)
  656  000015f8  afc1fff4	sw	-12(r30),r1
  657  000015fc          	L15_LF2:
  658  000015fc  8fc10008	lw	r1,8(r30)
  659  00001600  2022ffff	addi	r2,r1,#-1
  660  00001604  afc20008	sw	8(r30),r2
  661  00001608  70210000	slei	r1,r1,#0
  662  0000160c  1020000c	beqz	r1,L18_LF2
  663  00001610  54000000	nop; delay slot nop
  664  00001614  08000048	j	L16_LF2
  665  00001618  54000000	nop; delay slot nop
  666  0000161c          	L18_LF2:
  667  0000161c  8fc10000	lw	r1,(r30)
  668  00001620  20220001	addi	r2,r1,#1
  669  00001624  afc20000	sw	(r30),r2
  670  00001628  8fc20004	lw	r2,4(r30)
  671  0000162c  20430001	addi	r3,r2,#1
  672  00001630  afc30004	sw	4(r30),r3
  673  00001634  80420000	lb	r2,(r2)
  674  00001638  a0220000	sb	(r1),r2
  675  0000163c  a3c2fff3	sb	-13(r30),r2
  676  00001640          	L17_LF2:
  677  00001640  93c1fff3	lbu	r1,-13(r30)
  678  00001644  64220000	snei	r2,r1,#0
  679  00001648  1440000c	bnez	r2,L19_LF2
  680  0000164c  54000000	nop; delay slot nop
  681  00001650  0800000c	j	L16_LF2
  682  00001654  54000000	nop; delay slot nop
  683  00001658          	L19_LF2:
  684  00001658  0bffffa0	j	L15_LF2
  685  0000165c  54000000	nop; delay slot nop
  686  00001660          	L16_LF2:
  687  00001660  8fc1fff4	lw	r1,-12(r30)
  688  00001664  08000004	j	L14_LF2
  689  00001668  54000000	nop; delay slot nop
  690  0000166c          	L14_LF2:
  691  0000166c  8fa20000	lw	r2,0(r29)
  692  00001670  8fa30004	lw	r3,4(r29)
  693  00001674  8fdffff8	lw	r31,-8(r30)
  694  00001678  001ee820	add	r29,r0,r30
  695  0000167c  8fdefffc	lw	r30,-4(r30)
  696  00001680  4be00000	jr	r31
  697  00001684  54000000	nop
  698  00001688          	.endproc _dstrncpy
  699  00001688          	.align 2
  700  00001688          	.proc _dstrcat
  701  00001688          	.global _dstrcat
  702  00001688          	_dstrcat:
  703                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  704  00001688  afbefffc	sw	-4(r29),r30; push fp
  705  0000168c  001df020	add	r30,r0,r29; fp = sp
  706  00001690  afbffff8	sw	-8(r29),r31; push ret addr
  707  00001694  2fbd0018	subui	r29,r29,#24; alloc local storage
  708  00001698  afa20000	sw	0(r29),r2
  709  0000169c  8fc10000	lw	r1,(r30)
  710  000016a0  afc1fff4	sw	-12(r30),r1
  711  000016a4          	L21_LF2:
  712  000016a4  8fc10000	lw	r1,(r30)
  713  000016a8  90220000	lbu	r2,(r1)
  714  000016ac  64410000	snei	r1,r2,#0
  715  000016b0  1420000c	bnez	r1,L23_LF2
  716  000016b4  54000000	nop; delay slot nop
  717  000016b8  0800001c	j	L22_LF2
  718  000016bc  54000000	nop; delay slot nop
  719  000016c0          	L23_LF2:
  720  000016c0  8fc20000	lw	r2,(r30)
  721  000016c4  20410001	addi	r1,r2,#1
  722  000016c8  00011020	add	r2,r0,r1
  723  000016cc  afc20000	sw	(r30),r2
  724  000016d0  0bffffd0	j	L21_LF2
  725  000016d4  54000000	nop; delay slot nop
  726  000016d8          	L22_LF2:
  727  000016d8  23bdfff8	addi	r29,r29,#-8
  728  000016dc  001d0820	add	r1,r0,r29
  729  000016e0  8fc20000	lw	r2,(r30)
  730  000016e4  ac220000	sw	(r1),r2
  731  000016e8  8fc20004	lw	r2,4(r30)
  732  000016ec  ac220004	sw	4(r1),r2
  733  000016f0  0ffffe5c	jal	_dstrcpy
  734  000016f4  54000000	nop; delay slot nop
  735  000016f8  23bd0008	addi	r29,r29,#8
  736  000016fc  8fc1fff4	lw	r1,-12(r30)
  737  00001700  08000004	j	L20_LF2
  738  00001704  54000000	nop; delay slot nop
  739  00001708          	L20_LF2:
  740  00001708  8fa20000	lw	r2,0(r29)
  741  0000170c  8fdffff8	lw	r31,-8(r30)
  742  00001710  001ee820	add	r29,r0,r30
  743  00001714  8fdefffc	lw	r30,-4(r30)
  744  00001718  4be00000	jr	r31
  745  0000171c  54000000	nop
  746  00001720          	.endproc _dstrcat
  747  00001720          	.align 2
  748  00001720          	.proc _dstrncmp
  749  00001720          	.global _dstrncmp
  750  00001720          	_dstrncmp:
  751                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  752  00001720  afbefffc	sw	-4(r29),r30; push fp
  753  00001724  001df020	add	r30,r0,r29; fp = sp
  754  00001728  afbffff8	sw	-8(r29),r31; push ret addr
  755  0000172c  2fbd0018	subui	r29,r29,#24; alloc local storage
  756  00001730  afa20000	sw	0(r29),r2
  757  00001734  afa30004	sw	4(r29),r3
  758  00001738  54000000	nop
  759  0000173c  20010000	addi	r1,r0,#0
  760  00001740  afc1fff4	sw	-12(r30),r1
  761  00001744          	L25_LF2:
  762  00001744  8fc1fff4	lw	r1,-12(r30)
  763  00001748  8fc20008	lw	r2,8(r30)
  764  0000174c  0022082a	slt	r1,r1,r2
  765  00001750  1420000c	bnez	r1,L28_LF2
  766  00001754  54000000	nop; delay slot nop
  767  00001758  08000088	j	L26_LF2
  768  0000175c  54000000	nop; delay slot nop
  769  00001760          	L28_LF2:
  770  00001760  8fc10004	lw	r1,4(r30)
  771  00001764  90220000	lbu	r2,(r1)
  772  00001768  64410000	snei	r1,r2,#0
  773  0000176c  14200018	bnez	r1,L29_LF2
  774  00001770  54000000	nop; delay slot nop
  775  00001774  20010000	addi	r1,r0,#0
  776  00001778  080000d8	j	L24_LF2
  777  0000177c  54000000	nop; delay slot nop
  778  00001780  08000028	j	L30_LF2
  779  00001784  54000000	nop; delay slot nop
  780  00001788          	L29_LF2:
  781  00001788  8fc10000	lw	r1,(r30)
  782  0000178c  8fc20004	lw	r2,4(r30)
  783  00001790  90210000	lbu	r1,(r1)
  784  00001794  90420000	lbu	r2,(r2)
  785  00001798  00220829	sne	r1,r1,r2
  786  0000179c  1020000c	beqz	r1,L30_LF2
  787  000017a0  54000000	nop; delay slot nop
  788  000017a4  0800003c	j	L26_LF2
  789  000017a8  54000000	nop; delay slot nop
  790  000017ac          	L31_LF2:
  791  000017ac          	L30_LF2:
  792  000017ac  8fc20000	lw	r2,(r30)
  793  000017b0  20410001	addi	r1,r2,#1
  794  000017b4  00011020	add	r2,r0,r1
  795  000017b8  afc20000	sw	(r30),r2
  796  000017bc  8fc20004	lw	r2,4(r30)
  797  000017c0  20410001	addi	r1,r2,#1
  798  000017c4  00011020	add	r2,r0,r1
  799  000017c8  afc20004	sw	4(r30),r2
  800  000017cc          	L27_LF2:
  801  000017cc  8fc2fff4	lw	r2,-12(r30)
  802  000017d0  20410001	addi	r1,r2,#1
  803  000017d4  00011020	add	r2,r0,r1
  804  000017d8  afc2fff4	sw	-12(r30),r2
  805  000017dc  0bffff64	j	L25_LF2
  806  000017e0  54000000	nop; delay slot nop
  807  000017e4          	L26_LF2:
  808  000017e4  8fc1fff4	lw	r1,-12(r30)
  809  000017e8  8fc20008	lw	r2,8(r30)
  810  000017ec  00220828	seq	r1,r1,r2
  811  000017f0  10200018	beqz	r1,L32_LF2
  812  000017f4  54000000	nop; delay slot nop
  813  000017f8  20010000	addi	r1,r0,#0
  814  000017fc  08000054	j	L24_LF2
  815  00001800  54000000	nop; delay slot nop
  816  00001804  0800004c	j	L33_LF2
  817  00001808  54000000	nop; delay slot nop
  818  0000180c          	L32_LF2:
  819  0000180c  8fc20000	lw	r2,(r30)
  820  00001810  90410000	lbu	r1,(r2)
  821  00001814  8fc20004	lw	r2,4(r30)
  822  00001818  90430000	lbu	r3,(r2)
  823  0000181c  00230822	sub	r1,r1,r3
  824  00001820  74220000	sgei	r2,r1,#0
  825  00001824  10400020	beqz	r2,L34_LF2
  826  00001828  54000000	nop; delay slot nop
  827  0000182c  8fc10000	lw	r1,(r30)
  828  00001830  8fc20004	lw	r2,4(r30)
  829  00001834  90210000	lbu	r1,(r1)
  830  00001838  90420000	lbu	r2,(r2)
  831  0000183c  00220829	sne	r1,r1,r2
  832  00001840  08000008	j	L35_LF2
  833  00001844  54000000	nop; delay slot nop
  834  00001848          	L34_LF2:
  835  00001848  2001ffff	addi	r1,r0,#-1
  836  0000184c          	L35_LF2:
  837  0000184c  08000004	j	L24_LF2
  838  00001850  54000000	nop; delay slot nop
  839  00001854          	L33_LF2:
  840  00001854          	L24_LF2:
  841  00001854  8fa20000	lw	r2,0(r29)
  842  00001858  8fa30004	lw	r3,4(r29)
  843  0000185c  8fdffff8	lw	r31,-8(r30)
  844  00001860  001ee820	add	r29,r0,r30
  845  00001864  8fdefffc	lw	r30,-4(r30)
  846  00001868  4be00000	jr	r31
  847  0000186c  54000000	nop
  848  00001870          	.endproc _dstrncmp
  849  00001870          	.align 2
  850  00001870          	.proc _dstrlen
  851  00001870          	.global _dstrlen
  852  00001870          	_dstrlen:
  853                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  854  00001870  afbefffc	sw	-4(r29),r30; push fp
  855  00001874  001df020	add	r30,r0,r29; fp = sp
  856  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  857  0000187c  2fbd0018	subui	r29,r29,#24; alloc local storage
  858  00001880  afa20000	sw	0(r29),r2
  859  00001884  20010000	addi	r1,r0,#0
  860  00001888  afc1fff4	sw	-12(r30),r1
  861  0000188c          	L37_LF2:
  862  0000188c  8fc10000	lw	r1,(r30)
  863  00001890  20220001	addi	r2,r1,#1
  864  00001894  afc20000	sw	(r30),r2
  865  00001898  90210000	lbu	r1,(r1)
  866  0000189c  64220000	snei	r2,r1,#0
  867  000018a0  1440000c	bnez	r2,L39_LF2
  868  000018a4  54000000	nop; delay slot nop
  869  000018a8  0800001c	j	L38_LF2
  870  000018ac  54000000	nop; delay slot nop
  871  000018b0          	L39_LF2:
  872  000018b0  8fc2fff4	lw	r2,-12(r30)
  873  000018b4  20410001	addi	r1,r2,#1
  874  000018b8  00011020	add	r2,r0,r1
  875  000018bc  afc2fff4	sw	-12(r30),r2
  876  000018c0  0bffffc8	j	L37_LF2
  877  000018c4  54000000	nop; delay slot nop
  878  000018c8          	L38_LF2:
  879  000018c8  8fc1fff4	lw	r1,-12(r30)
  880  000018cc  08000004	j	L36_LF2
  881  000018d0  54000000	nop; delay slot nop
  882  000018d4          	L36_LF2:
  883  000018d4  8fa20000	lw	r2,0(r29)
  884  000018d8  8fdffff8	lw	r31,-8(r30)
  885  000018dc  001ee820	add	r29,r0,r30
  886  000018e0  8fdefffc	lw	r30,-4(r30)
  887  000018e4  4be00000	jr	r31
  888  000018e8  54000000	nop
  889  000018ec          	.endproc _dstrlen
  890  000018ec          	.align 2
  891  000018ec          	.proc _dstrstr
  892  000018ec          	.global _dstrstr
  893  000018ec          	_dstrstr:
  894                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  895  000018ec  afbefffc	sw	-4(r29),r30; push fp
  896  000018f0  001df020	add	r30,r0,r29; fp = sp
  897  000018f4  afbffff8	sw	-8(r29),r31; push ret addr
  898  000018f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  899  000018fc  afa20000	sw	0(r29),r2
  900  00001900  23bdfff8	addi	r29,r29,#-8
  901  00001904  001d0820	add	r1,r0,r29
  902  00001908  8fc20004	lw	r2,4(r30)
  903  0000190c  ac220000	sw	(r1),r2
  904  00001910  0fffff5c	jal	_dstrlen
  905  00001914  54000000	nop; delay slot nop
  906  00001918  23bd0008	addi	r29,r29,#8
  907  0000191c  afc1fff4	sw	-12(r30),r1
  908  00001920          	L41_LF2:
  909  00001920  8fc10000	lw	r1,(r30)
  910  00001924  90220000	lbu	r2,(r1)
  911  00001928  64410000	snei	r1,r2,#0
  912  0000192c  1420000c	bnez	r1,L43_LF2
  913  00001930  54000000	nop; delay slot nop
  914  00001934  08000060	j	L42_LF2
  915  00001938  54000000	nop; delay slot nop
  916  0000193c          	L43_LF2:
  917  0000193c  23bdfff0	addi	r29,r29,#-16
  918  00001940  001d0820	add	r1,r0,r29
  919  00001944  8fc20000	lw	r2,(r30)
  920  00001948  ac220000	sw	(r1),r2
  921  0000194c  8fc20004	lw	r2,4(r30)
  922  00001950  ac220004	sw	4(r1),r2
  923  00001954  8fc2fff4	lw	r2,-12(r30)
  924  00001958  ac220008	sw	8(r1),r2
  925  0000195c  0ffffdc0	jal	_dstrncmp
  926  00001960  54000000	nop; delay slot nop
  927  00001964  23bd0010	addi	r29,r29,#16
  928  00001968  64220000	snei	r2,r1,#0
  929  0000196c  14400010	bnez	r2,L44_LF2
  930  00001970  54000000	nop; delay slot nop
  931  00001974  8fc10000	lw	r1,(r30)
  932  00001978  08000028	j	L40_LF2
  933  0000197c  54000000	nop; delay slot nop
  934  00001980          	L44_LF2:
  935  00001980  8fc20000	lw	r2,(r30)
  936  00001984  20410001	addi	r1,r2,#1
  937  00001988  00011020	add	r2,r0,r1
  938  0000198c  afc20000	sw	(r30),r2
  939  00001990  0bffff8c	j	L41_LF2
  940  00001994  54000000	nop; delay slot nop
  941  00001998          	L42_LF2:
  942  00001998  20010000	addi	r1,r0,#0
  943  0000199c  08000004	j	L40_LF2
  944  000019a0  54000000	nop; delay slot nop
  945  000019a4          	L40_LF2:
  946  000019a4  8fa20000	lw	r2,0(r29)
  947  000019a8  8fdffff8	lw	r31,-8(r30)
  948  000019ac  001ee820	add	r29,r0,r30
  949  000019b0  8fdefffc	lw	r30,-4(r30)
  950  000019b4  4be00000	jr	r31
  951  000019b8  54000000	nop
  952  000019bc          	.endproc _dstrstr
  953  000019bc          	.align 2
  954  000019bc          	.proc _dmindex
  955  000019bc          	.global _dmindex
  956  000019bc          	_dmindex:
  957                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  958  000019bc  afbefffc	sw	-4(r29),r30; push fp
  959  000019c0  001df020	add	r30,r0,r29; fp = sp
  960  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  961  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  962  000019cc  afa20000	sw	0(r29),r2
  963  000019d0  54000000	nop
  964  000019d4          	L46_LF2:
  965  000019d4  8fc10000	lw	r1,(r30)
  966  000019d8  90220000	lbu	r2,(r1)
  967  000019dc  64410000	snei	r1,r2,#0
  968  000019e0  1420000c	bnez	r1,L48_LF2
  969  000019e4  54000000	nop; delay slot nop
  970  000019e8  08000070	j	L47_LF2
  971  000019ec  54000000	nop; delay slot nop
  972  000019f0          	L48_LF2:
  973  000019f0  8fc10004	lw	r1,4(r30)
  974  000019f4  afc1fff4	sw	-12(r30),r1
  975  000019f8          	L49_LF2:
  976  000019f8  8fc1fff4	lw	r1,-12(r30)
  977  000019fc  90220000	lbu	r2,(r1)
  978  00001a00  64410000	snei	r1,r2,#0
  979  00001a04  1420000c	bnez	r1,L52_LF2
  980  00001a08  54000000	nop; delay slot nop
  981  00001a0c  08000044	j	L50_LF2
  982  00001a10  54000000	nop; delay slot nop
  983  00001a14          	L52_LF2:
  984  00001a14  8fc10000	lw	r1,(r30)
  985  00001a18  8fc2fff4	lw	r2,-12(r30)
  986  00001a1c  90210000	lbu	r1,(r1)
  987  00001a20  90420000	lbu	r2,(r2)
  988  00001a24  00220828	seq	r1,r1,r2
  989  00001a28  10200010	beqz	r1,L51_LF2
  990  00001a2c  54000000	nop; delay slot nop
  991  00001a30  8fc10000	lw	r1,(r30)
  992  00001a34  08000030	j	L45_LF2
  993  00001a38  54000000	nop; delay slot nop
  994  00001a3c          	L53_LF2:
  995  00001a3c          	L51_LF2:
  996  00001a3c  8fc2fff4	lw	r2,-12(r30)
  997  00001a40  20410001	addi	r1,r2,#1
  998  00001a44  00011020	add	r2,r0,r1
  999  00001a48  afc2fff4	sw	-12(r30),r2
 1000  00001a4c  0bffffa8	j	L49_LF2
 1001  00001a50  54000000	nop; delay slot nop
 1002  00001a54          	L50_LF2:
 1003  00001a54  0bffff7c	j	L46_LF2
 1004  00001a58  54000000	nop; delay slot nop
 1005  00001a5c          	L47_LF2:
 1006  00001a5c  20010000	addi	r1,r0,#0
 1007  00001a60  08000004	j	L45_LF2
 1008  00001a64  54000000	nop; delay slot nop
 1009  00001a68          	L45_LF2:
 1010  00001a68  8fa20000	lw	r2,0(r29)
 1011  00001a6c  8fdffff8	lw	r31,-8(r30)
 1012  00001a70  001ee820	add	r29,r0,r30
 1013  00001a74  8fdefffc	lw	r30,-4(r30)
 1014  00001a78  4be00000	jr	r31
 1015  00001a7c  54000000	nop
 1016  00001a80          	.endproc _dmindex
 1017  00001a80          	.align 2
 1018  00001a80          	.proc _dindex
 1019  00001a80          	.global _dindex
 1020  00001a80          	_dindex:
 1021                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1022  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1023  00001a84  001df020	add	r30,r0,r29; fp = sp
 1024  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001a8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1026  00001a90  afa20000	sw	0(r29),r2
 1027  00001a94  54000000	nop
 1028  00001a98          	L55_LF2:
 1029  00001a98  8fc10000	lw	r1,(r30)
 1030  00001a9c  90220000	lbu	r2,(r1)
 1031  00001aa0  64410000	snei	r1,r2,#0
 1032  00001aa4  1420000c	bnez	r1,L57_LF2
 1033  00001aa8  54000000	nop; delay slot nop
 1034  00001aac  08000040	j	L56_LF2
 1035  00001ab0  54000000	nop; delay slot nop
 1036  00001ab4          	L57_LF2:
 1037  00001ab4  8fc10000	lw	r1,(r30)
 1038  00001ab8  90220000	lbu	r2,(r1)
 1039  00001abc  8fc10004	lw	r1,4(r30)
 1040  00001ac0  00411028	seq	r2,r2,r1
 1041  00001ac4  10400010	beqz	r2,L58_LF2
 1042  00001ac8  54000000	nop; delay slot nop
 1043  00001acc  8fc10000	lw	r1,(r30)
 1044  00001ad0  08000028	j	L54_LF2
 1045  00001ad4  54000000	nop; delay slot nop
 1046  00001ad8          	L58_LF2:
 1047  00001ad8  8fc20000	lw	r2,(r30)
 1048  00001adc  20410001	addi	r1,r2,#1
 1049  00001ae0  00011020	add	r2,r0,r1
 1050  00001ae4  afc20000	sw	(r30),r2
 1051  00001ae8  0bffffac	j	L55_LF2
 1052  00001aec  54000000	nop; delay slot nop
 1053  00001af0          	L56_LF2:
 1054  00001af0  20010000	addi	r1,r0,#0
 1055  00001af4  08000004	j	L54_LF2
 1056  00001af8  54000000	nop; delay slot nop
 1057  00001afc          	L54_LF2:
 1058  00001afc  8fa20000	lw	r2,0(r29)
 1059  00001b00  8fdffff8	lw	r31,-8(r30)
 1060  00001b04  001ee820	add	r29,r0,r30
 1061  00001b08  8fdefffc	lw	r30,-4(r30)
 1062  00001b0c  4be00000	jr	r31
 1063  00001b10  54000000	nop
 1064  00001b14          	.endproc _dindex
 1065  00001b14          	.align 2
 1066  00001b14          	.proc _ditoa
 1067  00001b14          	.global _ditoa
 1068  00001b14          	_ditoa:
 1069                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1070  00001b14  afbefffc	sw	-4(r29),r30; push fp
 1071  00001b18  001df020	add	r30,r0,r29; fp = sp
 1072  00001b1c  afbffff8	sw	-8(r29),r31; push ret addr
 1073  00001b20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1074  00001b24  afa20000	sw	0(r29),r2
 1075  00001b28  afa30004	sw	4(r29),r3
 1076  00001b2c  8fc10000	lw	r1,(r30)
 1077  00001b30  68220000	slti	r2,r1,#0
 1078  00001b34  1040002c	beqz	r2,L60_LF2
 1079  00001b38  54000000	nop; delay slot nop
 1080  00001b3c  8fc10004	lw	r1,4(r30)
 1081  00001b40  20220001	addi	r2,r1,#1
 1082  00001b44  afc20004	sw	4(r30),r2
 1083  00001b48  2002002d	addi	r2,r0,(#0x2d)&0xff
 1084  00001b4c  a0220000	sb	(r1),r2
 1085  00001b50  8fc10000	lw	r1,(r30)
 1086  00001b54  00011022	sub	r2,r0,r1
 1087  00001b58  afc20000	sw	(r30),r2
 1088  00001b5c  08000118	j	L61_LF2
 1089  00001b60  54000000	nop; delay slot nop
 1090  00001b64          	L60_LF2:
 1091  00001b64  8fc10000	lw	r1,(r30)
 1092  00001b68  64220000	snei	r2,r1,#0
 1093  00001b6c  14400020	bnez	r2,L62_LF2
 1094  00001b70  54000000	nop; delay slot nop
 1095  00001b74  8fc10004	lw	r1,4(r30)
 1096  00001b78  20220001	addi	r2,r1,#1
 1097  00001b7c  afc20004	sw	4(r30),r2
 1098  00001b80  20020030	addi	r2,r0,(#0x30)&0xff
 1099  00001b84  a0220000	sb	(r1),r2
 1100  00001b88  080000ec	j	L61_LF2
 1101  00001b8c  54000000	nop; delay slot nop
 1102  00001b90          	L62_LF2:
 1103  00001b90  20010001	addi	r1,r0,#1
 1104  00001b94  afc1fff4	sw	-12(r30),r1
 1105  00001b98          	L64_LF2:
 1106  00001b98  8fc1fff4	lw	r1,-12(r30)
 1107  00001b9c  8fc20000	lw	r2,(r30)
 1108  00001ba0  0022082c	sle	r1,r1,r2
 1109  00001ba4  1420000c	bnez	r1,L66_LF2
 1110  00001ba8  54000000	nop; delay slot nop
 1111  00001bac  08000024	j	L65_LF2
 1112  00001bb0  54000000	nop; delay slot nop
 1113  00001bb4          	L67_LF2:
 1114  00001bb4          	L66_LF2:
 1115  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1116  00001bb8  00011820	add	r3,r0,r1
 1117  00001bbc  50620002	slli	r2,r3,#0x2
 1118  00001bc0  00411020	add	r2,r2,r1
 1119  00001bc4  50410001	slli	r1,r2,#0x1
 1120  00001bc8  afc1fff4	sw	-12(r30),r1
 1121  00001bcc  0bffffc8	j	L64_LF2
 1122  00001bd0  54000000	nop; delay slot nop
 1123  00001bd4          	L65_LF2:
 1124  00001bd4  54000000	nop
 1125  00001bd8          	L68_LF2:
 1126  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1127  00001bdc  2002000a	addi	r2,r0,#10
 1128  00001be0  00200035	movi2fp	f0,r1
 1129  00001be4  00400835	movi2fp	f1,r2
 1130  00001be8  0401000f	div	f0,f0,f1
 1131  00001bec  00000834	movfp2i	r1,f0
 1132  00001bf0  afc1fff4	sw	-12(r30),r1
 1133  00001bf4  8fc10004	lw	r1,4(r30)
 1134  00001bf8  20220001	addi	r2,r1,#1
 1135  00001bfc  afc20004	sw	4(r30),r2
 1136  00001c00  8fc20000	lw	r2,(r30)
 1137  00001c04  8fc3fff4	lw	r3,-12(r30)
 1138  00001c08  00400035	movi2fp	f0,r2
 1139  00001c0c  00600835	movi2fp	f1,r3
 1140  00001c10  0401000f	div	f0,f0,f1
 1141  00001c14  00001034	movfp2i	r2,f0
 1142  00001c18  00021820	add	r3,r0,r2
 1143  00001c1c  20620030	addi	r2,r3,#48
 1144  00001c20  a0220000	sb	(r1),r2
 1145  00001c24  8fc10000	lw	r1,(r30)
 1146  00001c28  8fc3fff4	lw	r3,-12(r30)
 1147  00001c2c  00200035	movi2fp	f0,r1
 1148  00001c30  00600835	movi2fp	f1,r3
 1149  00001c34  0401000f	div	f0,f0,f1
 1150  00001c38  00001034	movfp2i	r2,f0
 1151  00001c3c  8fc3fff4	lw	r3,-12(r30)
 1152  00001c40  00400035	movi2fp	f0,r2
 1153  00001c44  00600835	movi2fp	f1,r3
 1154  00001c48  0401000e	mult	f0,f0,f1
 1155  00001c4c  00001034	movfp2i	r2,f0
 1156  00001c50  00220822	sub	r1,r1,r2
 1157  00001c54  afc10000	sw	(r30),r1
 1158  00001c58          	L70_LF2:
 1159  00001c58  8fc1fff4	lw	r1,-12(r30)
 1160  00001c5c  6c220001	sgti	r2,r1,#1
 1161  00001c60  1440000c	bnez	r2,L71_LF2
 1162  00001c64  54000000	nop; delay slot nop
 1163  00001c68  0800000c	j	L61_LF2
 1164  00001c6c  54000000	nop; delay slot nop
 1165  00001c70          	L71_LF2:
 1166  00001c70  0bffff64	j	L68_LF2
 1167  00001c74  54000000	nop; delay slot nop
 1168  00001c78          	L69_LF2:
 1169  00001c78          	L63_LF2:
 1170  00001c78          	L61_LF2:
 1171  00001c78  8fc10004	lw	r1,4(r30)
 1172  00001c7c  20020000	addi	r2,r0,(#0x0)&0xff
 1173  00001c80  a0220000	sb	(r1),r2
 1174  00001c84          	L59_LF2:
 1175  00001c84  8fa20000	lw	r2,0(r29)
 1176  00001c88  8fa30004	lw	r3,4(r29)
 1177  00001c8c  8fdffff8	lw	r31,-8(r30)
 1178  00001c90  001ee820	add	r29,r0,r30
 1179  00001c94  8fdefffc	lw	r30,-4(r30)
 1180  00001c98  4be00000	jr	r31
 1181  00001c9c  54000000	nop
 1182  00001ca0          	.endproc _ditoa
 1183  00001ca0          	.align 2
 1184  00001ca0          	.proc _dstrtol
 1185  00001ca0          	.global _dstrtol
 1186  00001ca0          	_dstrtol:
 1187                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1188  00001ca0  afbefffc	sw	-4(r29),r30; push fp
 1189  00001ca4  001df020	add	r30,r0,r29; fp = sp
 1190  00001ca8  afbffff8	sw	-8(r29),r31; push ret addr
 1191  00001cac  2fbd0020	subui	r29,r29,#32; alloc local storage
 1192  00001cb0  afa20000	sw	0(r29),r2
 1193  00001cb4  20010000	addi	r1,r0,#0
 1194  00001cb8  afc1fff4	sw	-12(r30),r1
 1195  00001cbc          	L73_LF2:
 1196  00001cbc  8fc10000	lw	r1,(r30)
 1197  00001cc0  90220000	lbu	r2,(r1)
 1198  00001cc4  60410020	seqi	r1,r2,#32
 1199  00001cc8  14200034	bnez	r1,L75_LF2
 1200  00001ccc  54000000	nop; delay slot nop
 1201  00001cd0  8fc10000	lw	r1,(r30)
 1202  00001cd4  90220000	lbu	r2,(r1)
 1203  00001cd8  60410009	seqi	r1,r2,#9
 1204  00001cdc  14200020	bnez	r1,L75_LF2
 1205  00001ce0  54000000	nop; delay slot nop
 1206  00001ce4  8fc10000	lw	r1,(r30)
 1207  00001ce8  90220000	lbu	r2,(r1)
 1208  00001cec  6041000a	seqi	r1,r2,#10
 1209  00001cf0  1420000c	bnez	r1,L75_LF2
 1210  00001cf4  54000000	nop; delay slot nop
 1211  00001cf8  0800001c	j	L74_LF2
 1212  00001cfc  54000000	nop; delay slot nop
 1213  00001d00          	L75_LF2:
 1214  00001d00  8fc20000	lw	r2,(r30)
 1215  00001d04  20410001	addi	r1,r2,#1
 1216  00001d08  00011020	add	r2,r0,r1
 1217  00001d0c  afc20000	sw	(r30),r2
 1218  00001d10  0bffffa8	j	L73_LF2
 1219  00001d14  54000000	nop; delay slot nop
 1220  00001d18          	L74_LF2:
 1221  00001d18  8fc10004	lw	r1,4(r30)
 1222  00001d1c  64220000	snei	r2,r1,#0
 1223  00001d20  10400010	beqz	r2,L76_LF2
 1224  00001d24  54000000	nop; delay slot nop
 1225  00001d28  8fc10004	lw	r1,4(r30)
 1226  00001d2c  8fc20000	lw	r2,(r30)
 1227  00001d30  ac220000	sw	(r1),r2
 1228  00001d34          	L76_LF2:
 1229  00001d34  8fc10000	lw	r1,(r30)
 1230  00001d38  90220000	lbu	r2,(r1)
 1231  00001d3c  64410000	snei	r1,r2,#0
 1232  00001d40  14200010	bnez	r1,L77_LF2
 1233  00001d44  54000000	nop; delay slot nop
 1234  00001d48  8fc1fff4	lw	r1,-12(r30)
 1235  00001d4c  08000294	j	L72_LF2
 1236  00001d50  54000000	nop; delay slot nop
 1237  00001d54          	L77_LF2:
 1238  00001d54  8fc10000	lw	r1,(r30)
 1239  00001d58  90220000	lbu	r2,(r1)
 1240  00001d5c  6041002d	seqi	r1,r2,#45
 1241  00001d60  10200024	beqz	r1,L78_LF2
 1242  00001d64  54000000	nop; delay slot nop
 1243  00001d68  2001ffff	addi	r1,r0,#-1
 1244  00001d6c  afc1ffec	sw	-20(r30),r1
 1245  00001d70  8fc20000	lw	r2,(r30)
 1246  00001d74  20410001	addi	r1,r2,#1
 1247  00001d78  00011020	add	r2,r0,r1
 1248  00001d7c  afc20000	sw	(r30),r2
 1249  00001d80  0800000c	j	L79_LF2
 1250  00001d84  54000000	nop; delay slot nop
 1251  00001d88          	L78_LF2:
 1252  00001d88  20010001	addi	r1,r0,#1
 1253  00001d8c  afc1ffec	sw	-20(r30),r1
 1254  00001d90          	L79_LF2:
 1255  00001d90  8fc10008	lw	r1,8(r30)
 1256  00001d94  64220000	snei	r2,r1,#0
 1257  00001d98  14400090	bnez	r2,L80_LF2
 1258  00001d9c  54000000	nop; delay slot nop
 1259  00001da0  8fc10000	lw	r1,(r30)
 1260  00001da4  90220000	lbu	r2,(r1)
 1261  00001da8  60410030	seqi	r1,r2,#48
 1262  00001dac  10200074	beqz	r1,L81_LF2
 1263  00001db0  54000000	nop; delay slot nop
 1264  00001db4  8fc20000	lw	r2,(r30)
 1265  00001db8  20410001	addi	r1,r2,#1
 1266  00001dbc  00011020	add	r2,r0,r1
 1267  00001dc0  afc20000	sw	(r30),r2
 1268  00001dc4  8fc10000	lw	r1,(r30)
 1269  00001dc8  90220000	lbu	r2,(r1)
 1270  00001dcc  60410078	seqi	r1,r2,#120
 1271  00001dd0  14200020	bnez	r1,L83_LF2
 1272  00001dd4  54000000	nop; delay slot nop
 1273  00001dd8  8fc10000	lw	r1,(r30)
 1274  00001ddc  90220000	lbu	r2,(r1)
 1275  00001de0  60410058	seqi	r1,r2,#88
 1276  00001de4  1420000c	bnez	r1,L83_LF2
 1277  00001de8  54000000	nop; delay slot nop
 1278  00001dec  08000024	j	L82_LF2
 1279  00001df0  54000000	nop; delay slot nop
 1280  00001df4          	L83_LF2:
 1281  00001df4  20010010	addi	r1,r0,#16
 1282  00001df8  afc10008	sw	8(r30),r1
 1283  00001dfc  8fc20000	lw	r2,(r30)
 1284  00001e00  20410001	addi	r1,r2,#1
 1285  00001e04  00011020	add	r2,r0,r1
 1286  00001e08  afc20000	sw	(r30),r2
 1287  00001e0c  0800000c	j	L84_LF2
 1288  00001e10  54000000	nop; delay slot nop
 1289  00001e14          	L82_LF2:
 1290  00001e14  20010008	addi	r1,r0,#8
 1291  00001e18  afc10008	sw	8(r30),r1
 1292  00001e1c          	L84_LF2:
 1293  00001e1c  0800000c	j	L80_LF2
 1294  00001e20  54000000	nop; delay slot nop
 1295  00001e24          	L81_LF2:
 1296  00001e24  2001000a	addi	r1,r0,#10
 1297  00001e28  afc10008	sw	8(r30),r1
 1298  00001e2c          	L85_LF2:
 1299  00001e2c          	L80_LF2:
 1300  00001e2c  8fc10008	lw	r1,8(r30)
 1301  00001e30  70220000	slei	r2,r1,#0
 1302  00001e34  1440001c	bnez	r2,L87_LF2
 1303  00001e38  54000000	nop; delay slot nop
 1304  00001e3c  8fc10008	lw	r1,8(r30)
 1305  00001e40  6c220010	sgti	r2,r1,#16
 1306  00001e44  1440000c	bnez	r2,L87_LF2
 1307  00001e48  54000000	nop; delay slot nop
 1308  00001e4c  08000010	j	L86_LF2
 1309  00001e50  54000000	nop; delay slot nop
 1310  00001e54          	L87_LF2:
 1311  00001e54  8fc1fff4	lw	r1,-12(r30)
 1312  00001e58  08000188	j	L72_LF2
 1313  00001e5c  54000000	nop; delay slot nop
 1314  00001e60          	L86_LF2:
 1315  00001e60  54000000	nop
 1316  00001e64          	L88_LF2:
 1317  00001e64  8fc10000	lw	r1,(r30)
 1318  00001e68  90220000	lbu	r2,(r1)
 1319  00001e6c  6c41002f	sgtui	r1,r2,#47
 1320  00001e70  10200030	beqz	r1,L91_LF2
 1321  00001e74  54000000	nop; delay slot nop
 1322  00001e78  8fc10000	lw	r1,(r30)
 1323  00001e7c  90220000	lbu	r2,(r1)
 1324  00001e80  70410039	sleui	r1,r2,#57
 1325  00001e84  1020001c	beqz	r1,L91_LF2
 1326  00001e88  54000000	nop; delay slot nop
 1327  00001e8c  8fc10000	lw	r1,(r30)
 1328  00001e90  90220000	lbu	r2,(r1)
 1329  00001e94  2041ffd0	addi	r1,r2,#-48
 1330  00001e98  afc1fff0	sw	-16(r30),r1
 1331  00001e9c  0800008c	j	L92_LF2
 1332  00001ea0  54000000	nop; delay slot nop
 1333  00001ea4          	L91_LF2:
 1334  00001ea4  8fc10000	lw	r1,(r30)
 1335  00001ea8  90220000	lbu	r2,(r1)
 1336  00001eac  6c410060	sgtui	r1,r2,#96
 1337  00001eb0  10200030	beqz	r1,L93_LF2
 1338  00001eb4  54000000	nop; delay slot nop
 1339  00001eb8  8fc10000	lw	r1,(r30)
 1340  00001ebc  90220000	lbu	r2,(r1)
 1341  00001ec0  7041007a	sleui	r1,r2,#122
 1342  00001ec4  1020001c	beqz	r1,L93_LF2
 1343  00001ec8  54000000	nop; delay slot nop
 1344  00001ecc  8fc10000	lw	r1,(r30)
 1345  00001ed0  90220000	lbu	r2,(r1)
 1346  00001ed4  2041ffa9	addi	r1,r2,#-87
 1347  00001ed8  afc1fff0	sw	-16(r30),r1
 1348  00001edc  0800004c	j	L92_LF2
 1349  00001ee0  54000000	nop; delay slot nop
 1350  00001ee4          	L93_LF2:
 1351  00001ee4  8fc10000	lw	r1,(r30)
 1352  00001ee8  90220000	lbu	r2,(r1)
 1353  00001eec  6c410040	sgtui	r1,r2,#64
 1354  00001ef0  10200030	beqz	r1,L95_LF2
 1355  00001ef4  54000000	nop; delay slot nop
 1356  00001ef8  8fc10000	lw	r1,(r30)
 1357  00001efc  90220000	lbu	r2,(r1)
 1358  00001f00  7041005a	sleui	r1,r2,#90
 1359  00001f04  1020001c	beqz	r1,L95_LF2
 1360  00001f08  54000000	nop; delay slot nop
 1361  00001f0c  8fc10000	lw	r1,(r30)
 1362  00001f10  90220000	lbu	r2,(r1)
 1363  00001f14  2041ffc9	addi	r1,r2,#-55
 1364  00001f18  afc1fff0	sw	-16(r30),r1
 1365  00001f1c  0800000c	j	L92_LF2
 1366  00001f20  54000000	nop; delay slot nop
 1367  00001f24          	L95_LF2:
 1368  00001f24  200103e8	addi	r1,r0,#1000
 1369  00001f28  afc1fff0	sw	-16(r30),r1
 1370  00001f2c          	L96_LF2:
 1371  00001f2c          	L94_LF2:
 1372  00001f2c          	L92_LF2:
 1373  00001f2c  8fc1fff0	lw	r1,-16(r30)
 1374  00001f30  8fc20008	lw	r2,8(r30)
 1375  00001f34  0022082a	slt	r1,r1,r2
 1376  00001f38  10200040	beqz	r1,L90_LF2
 1377  00001f3c  54000000	nop; delay slot nop
 1378  00001f40  8fc1fff4	lw	r1,-12(r30)
 1379  00001f44  8fc20008	lw	r2,8(r30)
 1380  00001f48  00200035	movi2fp	f0,r1
 1381  00001f4c  00400835	movi2fp	f1,r2
 1382  00001f50  0401000e	mult	f0,f0,f1
 1383  00001f54  00000834	movfp2i	r1,f0
 1384  00001f58  afc1fff4	sw	-12(r30),r1
 1385  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1386  00001f60  8fc2fff0	lw	r2,-16(r30)
 1387  00001f64  00220820	add	r1,r1,r2
 1388  00001f68  afc1fff4	sw	-12(r30),r1
 1389  00001f6c  8fc20000	lw	r2,(r30)
 1390  00001f70  20410001	addi	r1,r2,#1
 1391  00001f74  00011020	add	r2,r0,r1
 1392  00001f78  afc20000	sw	(r30),r2
 1393  00001f7c          	L97_LF2:
 1394  00001f7c          	L90_LF2:
 1395  00001f7c  8fc1fff0	lw	r1,-16(r30)
 1396  00001f80  8fc20008	lw	r2,8(r30)
 1397  00001f84  0022082a	slt	r1,r1,r2
 1398  00001f88  1420000c	bnez	r1,L98_LF2
 1399  00001f8c  54000000	nop; delay slot nop
 1400  00001f90  0800000c	j	L89_LF2
 1401  00001f94  54000000	nop; delay slot nop
 1402  00001f98          	L98_LF2:
 1403  00001f98  0bfffec8	j	L88_LF2
 1404  00001f9c  54000000	nop; delay slot nop
 1405  00001fa0          	L89_LF2:
 1406  00001fa0  8fc10004	lw	r1,4(r30)
 1407  00001fa4  64220000	snei	r2,r1,#0
 1408  00001fa8  10400010	beqz	r2,L99_LF2
 1409  00001fac  54000000	nop; delay slot nop
 1410  00001fb0  8fc10004	lw	r1,4(r30)
 1411  00001fb4  8fc20000	lw	r2,(r30)
 1412  00001fb8  ac220000	sw	(r1),r2
 1413  00001fbc          	L99_LF2:
 1414  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1415  00001fc0  8fc2ffec	lw	r2,-20(r30)
 1416  00001fc4  00200035	movi2fp	f0,r1
 1417  00001fc8  00400835	movi2fp	f1,r2
 1418  00001fcc  0401000e	mult	f0,f0,f1
 1419  00001fd0  00000834	movfp2i	r1,f0
 1420  00001fd4  afc1fff4	sw	-12(r30),r1
 1421  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1422  00001fdc  08000004	j	L72_LF2
 1423  00001fe0  54000000	nop; delay slot nop
 1424  00001fe4          	L72_LF2:
 1425  00001fe4  8fa20000	lw	r2,0(r29)
 1426  00001fe8  8fdffff8	lw	r31,-8(r30)
 1427  00001fec  001ee820	add	r29,r0,r30
 1428  00001ff0  8fdefffc	lw	r30,-4(r30)
 1429  00001ff4  4be00000	jr	r31
 1430  00001ff8  54000000	nop
 1431  00001ffc          	.endproc _dstrtol
 1432  00001ffc          	.align 2
 1433  00001ffc          	.proc _bcopy
 1434  00001ffc          	.global _bcopy
 1435  00001ffc          	_bcopy:
 1436                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1437  00001ffc  afbefffc	sw	-4(r29),r30; push fp
 1438  00002000  001df020	add	r30,r0,r29; fp = sp
 1439  00002004  afbffff8	sw	-8(r29),r31; push ret addr
 1440  00002008  2fbd0010	subui	r29,r29,#16; alloc local storage
 1441  0000200c  afa20000	sw	0(r29),r2
 1442  00002010  afa30004	sw	4(r29),r3
 1443  00002014  54000000	nop
 1444  00002018          	L101_LF2:
 1445  00002018  8fc10008	lw	r1,8(r30)
 1446  0000201c  2022ffff	addi	r2,r1,#-1
 1447  00002020  afc20008	sw	8(r30),r2
 1448  00002024  6c210000	sgti	r1,r1,#0
 1449  00002028  1420000c	bnez	r1,L103_LF2
 1450  0000202c  54000000	nop; delay slot nop
 1451  00002030  0800002c	j	L102_LF2
 1452  00002034  54000000	nop; delay slot nop
 1453  00002038          	L103_LF2:
 1454  00002038  8fc10004	lw	r1,4(r30)
 1455  0000203c  20220001	addi	r2,r1,#1
 1456  00002040  afc20004	sw	4(r30),r2
 1457  00002044  8fc20000	lw	r2,(r30)
 1458  00002048  20430001	addi	r3,r2,#1
 1459  0000204c  afc30000	sw	(r30),r3
 1460  00002050  80420000	lb	r2,(r2)
 1461  00002054  a0220000	sb	(r1),r2
 1462  00002058  0bffffbc	j	L101_LF2
 1463  0000205c  54000000	nop; delay slot nop
 1464  00002060          	L102_LF2:
 1465  00002060          	L100_LF2:
 1466  00002060  8fa20000	lw	r2,0(r29)
 1467  00002064  8fa30004	lw	r3,4(r29)
 1468  00002068  8fdffff8	lw	r31,-8(r30)
 1469  0000206c  001ee820	add	r29,r0,r30
 1470  00002070  8fdefffc	lw	r30,-4(r30)
 1471  00002074  4be00000	jr	r31
 1472  00002078  54000000	nop
 1473  0000207c          	.endproc _bcopy
 1474  0000207c          	.align 2
 1475  0000207c          	.proc _bzero
 1476  0000207c          	.global _bzero
 1477  0000207c          	_bzero:
 1478                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1479  0000207c  afbefffc	sw	-4(r29),r30; push fp
 1480  00002080  001df020	add	r30,r0,r29; fp = sp
 1481  00002084  afbffff8	sw	-8(r29),r31; push ret addr
 1482  00002088  2fbd0010	subui	r29,r29,#16; alloc local storage
 1483  0000208c  afa20000	sw	0(r29),r2
 1484  00002090  54000000	nop
 1485  00002094          	L105_LF2:
 1486  00002094  8fc10004	lw	r1,4(r30)
 1487  00002098  2022ffff	addi	r2,r1,#-1
 1488  0000209c  afc20004	sw	4(r30),r2
 1489  000020a0  6c210000	sgti	r1,r1,#0
 1490  000020a4  1420000c	bnez	r1,L107_LF2
 1491  000020a8  54000000	nop; delay slot nop
 1492  000020ac  08000020	j	L106_LF2
 1493  000020b0  54000000	nop; delay slot nop
 1494  000020b4          	L107_LF2:
 1495  000020b4  8fc10000	lw	r1,(r30)
 1496  000020b8  20220001	addi	r2,r1,#1
 1497  000020bc  afc20000	sw	(r30),r2
 1498  000020c0  20020000	addi	r2,r0,(#0x0)&0xff
 1499  000020c4  a0220000	sb	(r1),r2
 1500  000020c8  0bffffc8	j	L105_LF2
 1501  000020cc  54000000	nop; delay slot nop
 1502  000020d0          	L106_LF2:
 1503  000020d0          	L104_LF2:
 1504  000020d0  8fa20000	lw	r2,0(r29)
 1505  000020d4  8fdffff8	lw	r31,-8(r30)
 1506  000020d8  001ee820	add	r29,r0,r30
 1507  000020dc  8fdefffc	lw	r30,-4(r30)
 1508  000020e0  4be00000	jr	r31
 1509  000020e4  54000000	nop
 1510  000020e8          	.endproc _bzero
 1511  000020e8          	.align 2
 1512  000020e8          	.proc _min
 1513  000020e8          	.global _min
 1514  000020e8          	_min:
 1515                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1516  000020e8  afbefffc	sw	-4(r29),r30; push fp
 1517  000020ec  001df020	add	r30,r0,r29; fp = sp
 1518  000020f0  afbffff8	sw	-8(r29),r31; push ret addr
 1519  000020f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1520  000020f8  afa20000	sw	0(r29),r2
 1521  000020fc  afa30004	sw	4(r29),r3
 1522  00002100  8fc10000	lw	r1,(r30)
 1523  00002104  8fc20004	lw	r2,4(r30)
 1524  00002108  0022182c	sle	r3,r1,r2
 1525  0000210c  14600008	bnez	r3,L109_LF2
 1526  00002110  54000000	nop; delay slot nop
 1527  00002114  8fc10004	lw	r1,4(r30)
 1528  00002118          	L109_LF2:
 1529  00002118  08000004	j	L108_LF2
 1530  0000211c  54000000	nop; delay slot nop
 1531  00002120          	L108_LF2:
 1532  00002120  8fa20000	lw	r2,0(r29)
 1533  00002124  8fa30004	lw	r3,4(r29)
 1534  00002128  8fdffff8	lw	r31,-8(r30)
 1535  0000212c  001ee820	add	r29,r0,r30
 1536  00002130  8fdefffc	lw	r30,-4(r30)
 1537  00002134  4be00000	jr	r31
 1538  00002138  54000000	nop
 1539  0000213c          	.endproc _min
 1540  0000213c          	.align 2
 1541  0000213c          	.proc _max
 1542  0000213c          	.global _max
 1543  0000213c          	_max:
 1544                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1545  0000213c  afbefffc	sw	-4(r29),r30; push fp
 1546  00002140  001df020	add	r30,r0,r29; fp = sp
 1547  00002144  afbffff8	sw	-8(r29),r31; push ret addr
 1548  00002148  2fbd0010	subui	r29,r29,#16; alloc local storage
 1549  0000214c  afa20000	sw	0(r29),r2
 1550  00002150  afa30004	sw	4(r29),r3
 1551  00002154  8fc10000	lw	r1,(r30)
 1552  00002158  8fc20004	lw	r2,4(r30)
 1553  0000215c  0022182d	sge	r3,r1,r2
 1554  00002160  14600008	bnez	r3,L111_LF2
 1555  00002164  54000000	nop; delay slot nop
 1556  00002168  8fc10004	lw	r1,4(r30)
 1557  0000216c          	L111_LF2:
 1558  0000216c  08000004	j	L110_LF2
 1559  00002170  54000000	nop; delay slot nop
 1560  00002174          	L110_LF2:
 1561  00002174  8fa20000	lw	r2,0(r29)
 1562  00002178  8fa30004	lw	r3,4(r29)
 1563  0000217c  8fdffff8	lw	r31,-8(r30)
 1564  00002180  001ee820	add	r29,r0,r30
 1565  00002184  8fdefffc	lw	r30,-4(r30)
 1566  00002188  4be00000	jr	r31
 1567  0000218c  54000000	nop
 1568  00002190          	.endproc _max
 1569                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1570                      ;;;
 1571                      ;;; Most of the traps are called in files from libtraps.
 1574  00002190          	.align 2
 1575  00002190          	.proc _exit
 1576  00002190          	.global _exit
 1577  00002190          	_exit:
 1578  00002190  44000300	trap	#0x300
 1579  00002194  4be00000	jr	r31
 1580  00002198  54000000	nop
 1581  0000219c          	.endproc _exit
 1583                      ; for the benefit of gcc.
 1584  0000219c          	.proc ___main
 1585  0000219c          	.global ___main
 1586  0000219c          	___main:
 1587  0000219c  4be00000	jr	r31
 1588  000021a0  54000000	nop
 1589  000021a4          	.endproc ___main
 1590  000021a4          	.text
 1591  000021a4          	.global _etext
 1592  000021a4          	_etext:
 1593  000021a4          	.align 3
 1594  000021a8          	.data
 1595  000030d4          	.global _edata
 1596  000030d4          	_edata:
