 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 184
    4                      ; Text size: 4400
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test 2 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   85  00003038  20322028	
   85  0000303c  2564293a	
   85  00003040  20426164	
   85  00003044  2073656d	
   85  00003048  6170686f	
   85  0000304c  72652073	
   85  00003050  5f70726f	
   85  00003054  63735f63	
   85  00003058  6f6d706c	
   85  0000305c  65746564	
   85  00003060  20282564	
   85  00003064  29210a00	
   86  00003068          	.align 2
   87  00003068          	LC2_LF0:
   88  00003068  54657374	.ascii "Test 2 (%d): Acessing Location: (%d)!\n\000"
   88  0000306c  20322028	
   88  00003070  2564293a	
   88  00003074  20416365	
   88  00003078  7373696e	
   88  0000307c  67204c6f	
   88  00003080  63617469	
   88  00003084  6f6e3a20	
   88  00003088  28256429	
   88  0000308c  210a00  	
   89  0000308f          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  54657374	.ascii "Test 2 (%d): (%d)!\n\000"
   91  00003094  20322028	
   91  00003098  2564293a	
   91  0000309c  20282564	
   91  000030a0  29210a00	
   92  000030a4          	.align 2
   93  000030a4          	LC4_LF0:
   94  000030a4  54657374	.ascii "Test 2 (%d): Done!\n\000"
   94  000030a8  20322028	
   94  000030ac  2564293a	
   94  000030b0  20446f6e	
   94  000030b4  65210a00	
   95  000030b8          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001038	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  3c040010	lhi	r4,#16
  110  000010f8  24840004	addui	r4,r4,#4
  111  000010fc  64410002	snei	r1,r2,#2
  112  00001100  10200028	beqz	r1,L17_LF0
  113  00001104  54000000	nop; not filled.
  114  00001108  23bdfff8	addi	r29,r29,#-8
  115  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  116  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  117  00001114  afa50000	sw	(r29),r5
  118  00001118  0c00014c	jal	_Printf
  119  0000111c  54000000	nop; not filled.
  120  00001120  0c00024c	jal	_Exit
  121  00001124  54000000	nop; not filled.
  122  00001128  23bd0008	addi	r29,r29,#8
  123  0000112c          	L17_LF0:
  124  0000112c  23bdfff0	addi	r29,r29,#-16
  125  00001130  8c630004	lw	r3,4(r3)
  126  00001134  afa30000	sw	(r29),r3
  127  00001138  20050000	addi	r5,r0,#0
  128  0000113c  afa50004	sw	4(r29),r5
  129  00001140  2005000a	addi	r5,r0,#10
  130  00001144  afa50008	sw	8(r29),r5
  131  00001148  0c000ae0	jal	_dstrtol
  132  0000114c  54000000	nop; not filled.
  133  00001150  00011020	add	r2,r0,r1
  134  00001154  afa20000	sw	(r29),r2
  135  00001158  0c000160	jal	_sem_signal
  136  0000115c  54000000	nop; not filled.
  137  00001160  23bd0010	addi	r29,r29,#16
  138  00001164  64210001	snei	r1,r1,#1
  139  00001168  10200038	beqz	r1,L18_LF0
  140  0000116c  54000000	nop; not filled.
  141  00001170  0c000100	jal	_getpid
  142  00001174  54000000	nop; not filled.
  143  00001178  23bdfff0	addi	r29,r29,#-16
  144  0000117c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  145  00001180  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  146  00001184  afa50000	sw	(r29),r5
  147  00001188  afa10004	sw	4(r29),r1
  148  0000118c  afa20008	sw	8(r29),r2
  149  00001190  0c0000d4	jal	_Printf
  150  00001194  54000000	nop; not filled.
  151  00001198  0c0001d4	jal	_Exit
  152  0000119c  54000000	nop; not filled.
  153  000011a0  23bd0010	addi	r29,r29,#16
  154  000011a4          	L18_LF0:
  155  000011a4  0c0000cc	jal	_getpid
  156  000011a8  54000000	nop; not filled.
  157  000011ac  23bdfff0	addi	r29,r29,#-16
  158  000011b0  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  159  000011b4  24a53068	addui	r5,r5,(LC2_LF0)&0xffff
  160  000011b8  afa50000	sw	(r29),r5
  161  000011bc  afa10004	sw	4(r29),r1
  162  000011c0  afa40008	sw	8(r29),r4
  163  000011c4  0c0000a0	jal	_Printf
  164  000011c8  54000000	nop; not filled.
  165  000011cc  0c0000a4	jal	_getpid
  166  000011d0  54000000	nop; not filled.
  167  000011d4  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  168  000011d8  24a53090	addui	r5,r5,(LC3_LF0)&0xffff
  169  000011dc  afa50000	sw	(r29),r5
  170  000011e0  afa10004	sw	4(r29),r1
  171  000011e4  8c840000	lw	r4,(r4)
  172  000011e8  afa40008	sw	8(r29),r4
  173  000011ec  0c000078	jal	_Printf
  174  000011f0  54000000	nop; not filled.
  175  000011f4  0c00007c	jal	_getpid
  176  000011f8  54000000	nop; not filled.
  177  000011fc  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  178  00001200  24a530a4	addui	r5,r5,(LC4_LF0)&0xffff
  179  00001204  afa50000	sw	(r29),r5
  180  00001208  afa10004	sw	4(r29),r1
  181  0000120c  0c000058	jal	_Printf
  182  00001210  54000000	nop; not filled.
  183  00001214  23bd0010	addi	r29,r29,#16
  184  00001218  0c000f00	jal	_exit
  185  0000121c  54000000	nop
  186  00001220          	.endproc _main
  187                      ;;;
  188                      ;;; Stub functions for DLX traps.
  189                      ;;;
  190                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  191                      ;;;
  192                      ;;; The traps such as Open and Close
  193                      ;;; (note the capital letters) are for use by user programs.  The traps
  194                      ;;; with names such as open and close (lower case) are for use by the OS.
  195                      ;;;
  198  00001220          	.align 2
  200                      ;;; The following are the traps to be used by user-level programs
  201                      ;;;
  203  00001220          	.align 2
  204  00001220          	.proc _Open
  205  00001220          	.global _Open
  206  00001220          	_Open:
  207                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  208                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  209                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  210  00001220  44000213	trap	#0x213
  211  00001224  4be00000	jr	r31
  212  00001228  54000000	nop
  213  0000122c          	.endproc _Open
  215  0000122c          	.proc _Close
  216  0000122c          	.global _Close
  217  0000122c          	_Close:
  218  0000122c  44000214	trap	#0x214
  219  00001230  4be00000	jr	r31
  220  00001234  54000000	nop
  221  00001238          	.endproc _Close
  223  00001238          	.proc _Read
  224  00001238          	.global _Read
  225  00001238          	_Read:
  226  00001238  44000210	trap	#0x210
  227  0000123c  4be00000	jr	r31
  228  00001240  54000000	nop
  229  00001244          	.endproc _Read
  231  00001244          	.proc _Write
  232  00001244          	.global _Write
  233  00001244          	_Write:
  234  00001244  44000211	trap	#0x211
  235  00001248  4be00000	jr	r31
  236  0000124c  54000000	nop
  237  00001250          	.endproc _Write
  239  00001250          	.proc _Lseek
  240  00001250          	.global _Lseek
  241  00001250          	_Lseek:
  242  00001250  44000212	trap	#0x212
  243  00001254  4be00000	jr	r31
  244  00001258  54000000	nop
  245  0000125c          	.endproc _Lseek
  247  0000125c          	.proc _Putchar
  248  0000125c          	.global _Putchar
  249  0000125c          	_Putchar:
  250  0000125c  44000280	trap	#0x280
  251  00001260  4be00000	jr	r31
  252  00001264  54000000	nop
  253  00001268          	.endproc _Putchar
  255  00001268          	.proc _Printf
  256  00001268          	.global _Printf
  257  00001268          	_Printf:
  258  00001268  44000201	trap	#0x201
  259  0000126c  4be00000	jr	r31
  260  00001270  54000000	nop
  261  00001274          	.endproc _Printf
  263  00001274          	.proc _getpid
  264  00001274          	.global _getpid
  265  00001274          	_getpid:
  266  00001274  44000431	trap	#0x431
  267  00001278  4be00000	jr	r31
  268  0000127c  54000000	nop
  269  00001280          	.endproc _getpid
  271  00001280          	.proc _process_create
  272  00001280          	.global _process_create
  273  00001280          	_process_create:
  274  00001280  44000432	trap	#0x432
  275  00001284  4be00000	jr	r31
  276  00001288  54000000	nop
  277  0000128c          	.endproc _process_create
  279  0000128c          	.proc _shmget
  280  0000128c          	.global _shmget
  281  0000128c          	_shmget:
  282  0000128c  44000440	trap	#0x440
  283  00001290  4be00000	jr	r31
  284  00001294  54000000	nop
  285  00001298          	.endproc _shmget
  287  00001298          	.proc _shmat
  288  00001298          	.global _shmat
  289  00001298          	_shmat:
  290  00001298  44000441	trap	#0x441
  291  0000129c  4be00000	jr	r31
  292  000012a0  54000000	nop
  293  000012a4          	.endproc _shmat
  295  000012a4          	.proc _sem_create
  296  000012a4          	.global _sem_create
  297  000012a4          	_sem_create:
  298  000012a4  44000450	trap	#0x450
  299  000012a8  4be00000	jr	r31
  300  000012ac  54000000	nop
  301  000012b0          	.endproc _sem_create
  303  000012b0          	.proc _sem_wait
  304  000012b0          	.global _sem_wait
  305  000012b0          	_sem_wait:
  306  000012b0  44000451	trap	#0x451
  307  000012b4  4be00000	jr	r31
  308  000012b8  54000000	nop
  309  000012bc          	.endproc _sem_wait
  311  000012bc          	.proc _sem_signal
  312  000012bc          	.global _sem_signal
  313  000012bc          	_sem_signal:
  314  000012bc  44000452	trap	#0x452
  315  000012c0  4be00000	jr	r31
  316  000012c4  54000000	nop
  317  000012c8          	.endproc _sem_signal
  319  000012c8          	.proc _lock_create
  320  000012c8          	.global _lock_create
  321  000012c8          	_lock_create:
  322  000012c8  44000453	trap	#0x453
  323  000012cc  4be00000	jr	r31
  324  000012d0  54000000	nop
  325  000012d4          	.endproc _lock_create
  327  000012d4          	.proc _lock_acquire
  328  000012d4          	.global _lock_acquire
  329  000012d4          	_lock_acquire:
  330  000012d4  44000454	trap	#0x454
  331  000012d8  4be00000	jr	r31
  332  000012dc  54000000	nop
  333  000012e0          	.endproc _lock_acquire
  335  000012e0          	.proc _lock_release
  336  000012e0          	.global _lock_release
  337  000012e0          	_lock_release:
  338  000012e0  44000455	trap	#0x455
  339  000012e4  4be00000	jr	r31
  340  000012e8  54000000	nop
  341  000012ec          	.endproc _lock_release
  343  000012ec          	.proc _cond_create
  344  000012ec          	.global _cond_create
  345  000012ec          	_cond_create:
  346  000012ec  44000456	trap	#0x456
  347  000012f0  4be00000	jr	r31
  348  000012f4  54000000	nop
  349  000012f8          	.endproc _cond_create
  351  000012f8          	.proc _cond_wait
  352  000012f8          	.global _cond_wait
  353  000012f8          	_cond_wait:
  354  000012f8  44000457	trap	#0x457
  355  000012fc  4be00000	jr	r31
  356  00001300  54000000	nop
  357  00001304          	.endproc _cond_wait
  359  00001304          	.proc _cond_signal
  360  00001304          	.global _cond_signal
  361  00001304          	_cond_signal:
  362  00001304  44000458	trap	#0x458
  363  00001308  4be00000	jr	r31
  364  0000130c  54000000	nop
  365  00001310          	.endproc _cond_signal
  367  00001310          	.proc _cond_broadcast
  368  00001310          	.global _cond_broadcast
  369  00001310          	_cond_broadcast:
  370  00001310  44000459	trap	#0x459
  371  00001314  4be00000	jr	r31
  372  00001318  54000000	nop
  373  0000131c          	.endproc _cond_broadcast
  375  0000131c          	.proc _mbox_create
  376  0000131c          	.global _mbox_create
  377  0000131c          	_mbox_create:
  378  0000131c  44000460	trap	#0x460
  379  00001320  4be00000	jr	r31
  380  00001324  54000000	nop
  381  00001328          	.endproc _mbox_create
  383  00001328          	.proc _mbox_open
  384  00001328          	.global _mbox_open
  385  00001328          	_mbox_open:
  386  00001328  44000461	trap	#0x461
  387  0000132c  4be00000	jr	r31
  388  00001330  54000000	nop
  389  00001334          	.endproc _mbox_open
  391  00001334          	.proc _mbox_close
  392  00001334          	.global _mbox_close
  393  00001334          	_mbox_close:
  394  00001334  44000462	trap	#0x462
  395  00001338  4be00000	jr	r31
  396  0000133c  54000000	nop
  397  00001340          	.endproc _mbox_close
  399  00001340          	.proc _mbox_send
  400  00001340          	.global _mbox_send
  401  00001340          	_mbox_send:
  402  00001340  44000463	trap	#0x463
  403  00001344  4be00000	jr	r31
  404  00001348  54000000	nop
  405  0000134c          	.endproc _mbox_send
  407  0000134c          	.proc _mbox_recv
  408  0000134c          	.global _mbox_recv
  409  0000134c          	_mbox_recv:
  410  0000134c  44000464	trap	#0x464
  411  00001350  4be00000	jr	r31
  412  00001354  54000000	nop
  413  00001358          	.endproc _mbox_recv
  415  00001358          	.proc _sleep
  416  00001358          	.global _sleep
  417  00001358          	_sleep:
  418  00001358  44000465	trap	#0x465
  419  0000135c  4be00000	jr	r31
  420  00001360  54000000	nop
  421  00001364          	.endproc _sleep
  423  00001364          	.proc _yield
  424  00001364          	.global _yield
  425  00001364          	_yield:
  426  00001364  44000466	trap	#0x466
  427  00001368  4be00000	jr	r31
  428  0000136c  54000000	nop
  429  00001370          	.endproc _yield
  432  00001370          	.proc _Exit
  433  00001370          	.global _Exit
  434  00001370          	_Exit:
  435  00001370  44000500	trap	#0x500
  436  00001374  4be00000	jr	r31
  437  00001378  54000000	nop
  438  0000137c          	.endproc _Exit
  441  0000137c          	.proc _malloc
  442  0000137c          	.global _malloc
  443  0000137c          	_malloc:
  444  0000137c  44000467	trap	#0x467
  445  00001380  4be00000	jr	r31
  446  00001384          	.endproc _malloc
  449  00001384          	.proc _mfree
  450  00001384          	.global _mfree
  451  00001384          	_mfree:
  452  00001384  44000468	trap	#0x468
  453  00001388  4be00000	jr	r31
  454  0000138c          	.endproc _mfree
  455                      ; Compiled by GCC
  457  0000138c          	.align 2
  458  0000138c          	.proc _isspace
  459  0000138c          	.global _isspace
  460  0000138c          	_isspace:
  461                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  462  0000138c  afbefffc	sw	-4(r29),r30; push fp
  463  00001390  001df020	add	r30,r0,r29; fp = sp
  464  00001394  afbffff8	sw	-8(r29),r31; push ret addr
  465  00001398  2fbd0018	subui	r29,r29,#24; alloc local storage
  466  0000139c  afa20000	sw	0(r29),r2
  467  000013a0  afa30004	sw	4(r29),r3
  468  000013a4  afa40008	sw	8(r29),r4
  469  000013a8  83c20003	lb	r2,3(r30)
  470  000013ac  20010000	addi	r1,r0,#0
  471  000013b0  304300ff	andi	r3,r2,#0x00ff
  472  000013b4  60640020	seqi	r4,r3,#32
  473  000013b8  1480002c	bnez	r4,L3_LF2
  474  000013bc  54000000	nop; delay slot nop
  475  000013c0  304300ff	andi	r3,r2,#0x00ff
  476  000013c4  60640009	seqi	r4,r3,#9
  477  000013c8  1480001c	bnez	r4,L3_LF2
  478  000013cc  54000000	nop; delay slot nop
  479  000013d0  304300ff	andi	r3,r2,#0x00ff
  480  000013d4  6064000a	seqi	r4,r3,#10
  481  000013d8  1480000c	bnez	r4,L3_LF2
  482  000013dc  54000000	nop; delay slot nop
  483  000013e0  08000008	j	L2_LF2
  484  000013e4  54000000	nop; delay slot nop
  485  000013e8          	L3_LF2:
  486  000013e8  20010001	addi	r1,r0,#1
  487  000013ec          	L2_LF2:
  488  000013ec  08000004	j	L1_LF2
  489  000013f0  54000000	nop; delay slot nop
  490  000013f4          	L1_LF2:
  491  000013f4  8fa20000	lw	r2,0(r29)
  492  000013f8  8fa30004	lw	r3,4(r29)
  493  000013fc  8fa40008	lw	r4,8(r29)
  494  00001400  8fdffff8	lw	r31,-8(r30)
  495  00001404  001ee820	add	r29,r0,r30
  496  00001408  8fdefffc	lw	r30,-4(r30)
  497  0000140c  4be00000	jr	r31
  498  00001410  54000000	nop
  499  00001414          	.endproc _isspace
  500  00001414          	.align 2
  501  00001414          	.proc _isxdigit
  502  00001414          	.global _isxdigit
  503  00001414          	_isxdigit:
  504                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  505  00001414  afbefffc	sw	-4(r29),r30; push fp
  506  00001418  001df020	add	r30,r0,r29; fp = sp
  507  0000141c  afbffff8	sw	-8(r29),r31; push ret addr
  508  00001420  2fbd0018	subui	r29,r29,#24; alloc local storage
  509  00001424  afa20000	sw	0(r29),r2
  510  00001428  afa30004	sw	4(r29),r3
  511  0000142c  afa40008	sw	8(r29),r4
  512  00001430  83c20003	lb	r2,3(r30)
  513  00001434  20010000	addi	r1,r0,#0
  514  00001438  304300ff	andi	r3,r2,#0x00ff
  515  0000143c  6c64002f	sgtui	r4,r3,#47
  516  00001440  1080001c	beqz	r4,L7_LF2
  517  00001444  54000000	nop; delay slot nop
  518  00001448  304300ff	andi	r3,r2,#0x00ff
  519  0000144c  70640039	sleui	r4,r3,#57
  520  00001450  1480005c	bnez	r4,L6_LF2
  521  00001454  54000000	nop; delay slot nop
  522  00001458  08000004	j	L7_LF2
  523  0000145c  54000000	nop; delay slot nop
  524  00001460          	L7_LF2:
  525  00001460  304300ff	andi	r3,r2,#0x00ff
  526  00001464  6c640060	sgtui	r4,r3,#96
  527  00001468  1080001c	beqz	r4,L8_LF2
  528  0000146c  54000000	nop; delay slot nop
  529  00001470  304300ff	andi	r3,r2,#0x00ff
  530  00001474  70640066	sleui	r4,r3,#102
  531  00001478  14800034	bnez	r4,L6_LF2
  532  0000147c  54000000	nop; delay slot nop
  533  00001480  08000004	j	L8_LF2
  534  00001484  54000000	nop; delay slot nop
  535  00001488          	L8_LF2:
  536  00001488  304300ff	andi	r3,r2,#0x00ff
  537  0000148c  6c640040	sgtui	r4,r3,#64
  538  00001490  10800020	beqz	r4,L5_LF2
  539  00001494  54000000	nop; delay slot nop
  540  00001498  304300ff	andi	r3,r2,#0x00ff
  541  0000149c  70640041	sleui	r4,r3,#65
  542  000014a0  1480000c	bnez	r4,L6_LF2
  543  000014a4  54000000	nop; delay slot nop
  544  000014a8  08000008	j	L5_LF2
  545  000014ac  54000000	nop; delay slot nop
  546  000014b0          	L6_LF2:
  547  000014b0  20010001	addi	r1,r0,#1
  548  000014b4          	L5_LF2:
  549  000014b4  08000004	j	L4_LF2
  550  000014b8  54000000	nop; delay slot nop
  551  000014bc          	L4_LF2:
  552  000014bc  8fa20000	lw	r2,0(r29)
  553  000014c0  8fa30004	lw	r3,4(r29)
  554  000014c4  8fa40008	lw	r4,8(r29)
  555  000014c8  8fdffff8	lw	r31,-8(r30)
  556  000014cc  001ee820	add	r29,r0,r30
  557  000014d0  8fdefffc	lw	r30,-4(r30)
  558  000014d4  4be00000	jr	r31
  559  000014d8  54000000	nop
  560  000014dc          	.endproc _isxdigit
  561  000014dc          	.align 2
  562  000014dc          	.proc _dstrcpy
  563  000014dc          	.global _dstrcpy
  564  000014dc          	_dstrcpy:
  565                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  566  000014dc  afbefffc	sw	-4(r29),r30; push fp
  567  000014e0  001df020	add	r30,r0,r29; fp = sp
  568  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  569  000014e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  570  000014ec  afa20000	sw	0(r29),r2
  571  000014f0  afa30004	sw	4(r29),r3
  572  000014f4  8fc10000	lw	r1,(r30)
  573  000014f8  afc1fff4	sw	-12(r30),r1
  574  000014fc          	L10_LF2:
  575  000014fc  8fc10000	lw	r1,(r30)
  576  00001500  20220001	addi	r2,r1,#1
  577  00001504  afc20000	sw	(r30),r2
  578  00001508  8fc20004	lw	r2,4(r30)
  579  0000150c  20430001	addi	r3,r2,#1
  580  00001510  afc30004	sw	4(r30),r3
  581  00001514  80420000	lb	r2,(r2)
  582  00001518  a0220000	sb	(r1),r2
  583  0000151c  a3c2fff3	sb	-13(r30),r2
  584  00001520          	L12_LF2:
  585  00001520  93c1fff3	lbu	r1,-13(r30)
  586  00001524  64220000	snei	r2,r1,#0
  587  00001528  1440000c	bnez	r2,L13_LF2
  588  0000152c  54000000	nop; delay slot nop
  589  00001530  0800000c	j	L11_LF2
  590  00001534  54000000	nop; delay slot nop
  591  00001538          	L13_LF2:
  592  00001538  0bffffc0	j	L10_LF2
  593  0000153c  54000000	nop; delay slot nop
  594  00001540          	L11_LF2:
  595  00001540  8fc1fff4	lw	r1,-12(r30)
  596  00001544  08000004	j	L9_LF2
  597  00001548  54000000	nop; delay slot nop
  598  0000154c          	L9_LF2:
  599  0000154c  8fa20000	lw	r2,0(r29)
  600  00001550  8fa30004	lw	r3,4(r29)
  601  00001554  8fdffff8	lw	r31,-8(r30)
  602  00001558  001ee820	add	r29,r0,r30
  603  0000155c  8fdefffc	lw	r30,-4(r30)
  604  00001560  4be00000	jr	r31
  605  00001564  54000000	nop
  606  00001568          	.endproc _dstrcpy
  607  00001568          	.align 2
  608  00001568          	.proc _dstrncpy
  609  00001568          	.global _dstrncpy
  610  00001568          	_dstrncpy:
  611                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  612  00001568  afbefffc	sw	-4(r29),r30; push fp
  613  0000156c  001df020	add	r30,r0,r29; fp = sp
  614  00001570  afbffff8	sw	-8(r29),r31; push ret addr
  615  00001574  2fbd0018	subui	r29,r29,#24; alloc local storage
  616  00001578  afa20000	sw	0(r29),r2
  617  0000157c  afa30004	sw	4(r29),r3
  618  00001580  8fc10000	lw	r1,(r30)
  619  00001584  afc1fff4	sw	-12(r30),r1
  620  00001588          	L15_LF2:
  621  00001588  8fc10008	lw	r1,8(r30)
  622  0000158c  2022ffff	addi	r2,r1,#-1
  623  00001590  afc20008	sw	8(r30),r2
  624  00001594  70210000	slei	r1,r1,#0
  625  00001598  1020000c	beqz	r1,L18_LF2
  626  0000159c  54000000	nop; delay slot nop
  627  000015a0  08000048	j	L16_LF2
  628  000015a4  54000000	nop; delay slot nop
  629  000015a8          	L18_LF2:
  630  000015a8  8fc10000	lw	r1,(r30)
  631  000015ac  20220001	addi	r2,r1,#1
  632  000015b0  afc20000	sw	(r30),r2
  633  000015b4  8fc20004	lw	r2,4(r30)
  634  000015b8  20430001	addi	r3,r2,#1
  635  000015bc  afc30004	sw	4(r30),r3
  636  000015c0  80420000	lb	r2,(r2)
  637  000015c4  a0220000	sb	(r1),r2
  638  000015c8  a3c2fff3	sb	-13(r30),r2
  639  000015cc          	L17_LF2:
  640  000015cc  93c1fff3	lbu	r1,-13(r30)
  641  000015d0  64220000	snei	r2,r1,#0
  642  000015d4  1440000c	bnez	r2,L19_LF2
  643  000015d8  54000000	nop; delay slot nop
  644  000015dc  0800000c	j	L16_LF2
  645  000015e0  54000000	nop; delay slot nop
  646  000015e4          	L19_LF2:
  647  000015e4  0bffffa0	j	L15_LF2
  648  000015e8  54000000	nop; delay slot nop
  649  000015ec          	L16_LF2:
  650  000015ec  8fc1fff4	lw	r1,-12(r30)
  651  000015f0  08000004	j	L14_LF2
  652  000015f4  54000000	nop; delay slot nop
  653  000015f8          	L14_LF2:
  654  000015f8  8fa20000	lw	r2,0(r29)
  655  000015fc  8fa30004	lw	r3,4(r29)
  656  00001600  8fdffff8	lw	r31,-8(r30)
  657  00001604  001ee820	add	r29,r0,r30
  658  00001608  8fdefffc	lw	r30,-4(r30)
  659  0000160c  4be00000	jr	r31
  660  00001610  54000000	nop
  661  00001614          	.endproc _dstrncpy
  662  00001614          	.align 2
  663  00001614          	.proc _dstrcat
  664  00001614          	.global _dstrcat
  665  00001614          	_dstrcat:
  666                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  667  00001614  afbefffc	sw	-4(r29),r30; push fp
  668  00001618  001df020	add	r30,r0,r29; fp = sp
  669  0000161c  afbffff8	sw	-8(r29),r31; push ret addr
  670  00001620  2fbd0018	subui	r29,r29,#24; alloc local storage
  671  00001624  afa20000	sw	0(r29),r2
  672  00001628  8fc10000	lw	r1,(r30)
  673  0000162c  afc1fff4	sw	-12(r30),r1
  674  00001630          	L21_LF2:
  675  00001630  8fc10000	lw	r1,(r30)
  676  00001634  90220000	lbu	r2,(r1)
  677  00001638  64410000	snei	r1,r2,#0
  678  0000163c  1420000c	bnez	r1,L23_LF2
  679  00001640  54000000	nop; delay slot nop
  680  00001644  0800001c	j	L22_LF2
  681  00001648  54000000	nop; delay slot nop
  682  0000164c          	L23_LF2:
  683  0000164c  8fc20000	lw	r2,(r30)
  684  00001650  20410001	addi	r1,r2,#1
  685  00001654  00011020	add	r2,r0,r1
  686  00001658  afc20000	sw	(r30),r2
  687  0000165c  0bffffd0	j	L21_LF2
  688  00001660  54000000	nop; delay slot nop
  689  00001664          	L22_LF2:
  690  00001664  23bdfff8	addi	r29,r29,#-8
  691  00001668  001d0820	add	r1,r0,r29
  692  0000166c  8fc20000	lw	r2,(r30)
  693  00001670  ac220000	sw	(r1),r2
  694  00001674  8fc20004	lw	r2,4(r30)
  695  00001678  ac220004	sw	4(r1),r2
  696  0000167c  0ffffe5c	jal	_dstrcpy
  697  00001680  54000000	nop; delay slot nop
  698  00001684  23bd0008	addi	r29,r29,#8
  699  00001688  8fc1fff4	lw	r1,-12(r30)
  700  0000168c  08000004	j	L20_LF2
  701  00001690  54000000	nop; delay slot nop
  702  00001694          	L20_LF2:
  703  00001694  8fa20000	lw	r2,0(r29)
  704  00001698  8fdffff8	lw	r31,-8(r30)
  705  0000169c  001ee820	add	r29,r0,r30
  706  000016a0  8fdefffc	lw	r30,-4(r30)
  707  000016a4  4be00000	jr	r31
  708  000016a8  54000000	nop
  709  000016ac          	.endproc _dstrcat
  710  000016ac          	.align 2
  711  000016ac          	.proc _dstrncmp
  712  000016ac          	.global _dstrncmp
  713  000016ac          	_dstrncmp:
  714                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  715  000016ac  afbefffc	sw	-4(r29),r30; push fp
  716  000016b0  001df020	add	r30,r0,r29; fp = sp
  717  000016b4  afbffff8	sw	-8(r29),r31; push ret addr
  718  000016b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  719  000016bc  afa20000	sw	0(r29),r2
  720  000016c0  afa30004	sw	4(r29),r3
  721  000016c4  54000000	nop
  722  000016c8  20010000	addi	r1,r0,#0
  723  000016cc  afc1fff4	sw	-12(r30),r1
  724  000016d0          	L25_LF2:
  725  000016d0  8fc1fff4	lw	r1,-12(r30)
  726  000016d4  8fc20008	lw	r2,8(r30)
  727  000016d8  0022082a	slt	r1,r1,r2
  728  000016dc  1420000c	bnez	r1,L28_LF2
  729  000016e0  54000000	nop; delay slot nop
  730  000016e4  08000088	j	L26_LF2
  731  000016e8  54000000	nop; delay slot nop
  732  000016ec          	L28_LF2:
  733  000016ec  8fc10004	lw	r1,4(r30)
  734  000016f0  90220000	lbu	r2,(r1)
  735  000016f4  64410000	snei	r1,r2,#0
  736  000016f8  14200018	bnez	r1,L29_LF2
  737  000016fc  54000000	nop; delay slot nop
  738  00001700  20010000	addi	r1,r0,#0
  739  00001704  080000d8	j	L24_LF2
  740  00001708  54000000	nop; delay slot nop
  741  0000170c  08000028	j	L30_LF2
  742  00001710  54000000	nop; delay slot nop
  743  00001714          	L29_LF2:
  744  00001714  8fc10000	lw	r1,(r30)
  745  00001718  8fc20004	lw	r2,4(r30)
  746  0000171c  90210000	lbu	r1,(r1)
  747  00001720  90420000	lbu	r2,(r2)
  748  00001724  00220829	sne	r1,r1,r2
  749  00001728  1020000c	beqz	r1,L30_LF2
  750  0000172c  54000000	nop; delay slot nop
  751  00001730  0800003c	j	L26_LF2
  752  00001734  54000000	nop; delay slot nop
  753  00001738          	L31_LF2:
  754  00001738          	L30_LF2:
  755  00001738  8fc20000	lw	r2,(r30)
  756  0000173c  20410001	addi	r1,r2,#1
  757  00001740  00011020	add	r2,r0,r1
  758  00001744  afc20000	sw	(r30),r2
  759  00001748  8fc20004	lw	r2,4(r30)
  760  0000174c  20410001	addi	r1,r2,#1
  761  00001750  00011020	add	r2,r0,r1
  762  00001754  afc20004	sw	4(r30),r2
  763  00001758          	L27_LF2:
  764  00001758  8fc2fff4	lw	r2,-12(r30)
  765  0000175c  20410001	addi	r1,r2,#1
  766  00001760  00011020	add	r2,r0,r1
  767  00001764  afc2fff4	sw	-12(r30),r2
  768  00001768  0bffff64	j	L25_LF2
  769  0000176c  54000000	nop; delay slot nop
  770  00001770          	L26_LF2:
  771  00001770  8fc1fff4	lw	r1,-12(r30)
  772  00001774  8fc20008	lw	r2,8(r30)
  773  00001778  00220828	seq	r1,r1,r2
  774  0000177c  10200018	beqz	r1,L32_LF2
  775  00001780  54000000	nop; delay slot nop
  776  00001784  20010000	addi	r1,r0,#0
  777  00001788  08000054	j	L24_LF2
  778  0000178c  54000000	nop; delay slot nop
  779  00001790  0800004c	j	L33_LF2
  780  00001794  54000000	nop; delay slot nop
  781  00001798          	L32_LF2:
  782  00001798  8fc20000	lw	r2,(r30)
  783  0000179c  90410000	lbu	r1,(r2)
  784  000017a0  8fc20004	lw	r2,4(r30)
  785  000017a4  90430000	lbu	r3,(r2)
  786  000017a8  00230822	sub	r1,r1,r3
  787  000017ac  74220000	sgei	r2,r1,#0
  788  000017b0  10400020	beqz	r2,L34_LF2
  789  000017b4  54000000	nop; delay slot nop
  790  000017b8  8fc10000	lw	r1,(r30)
  791  000017bc  8fc20004	lw	r2,4(r30)
  792  000017c0  90210000	lbu	r1,(r1)
  793  000017c4  90420000	lbu	r2,(r2)
  794  000017c8  00220829	sne	r1,r1,r2
  795  000017cc  08000008	j	L35_LF2
  796  000017d0  54000000	nop; delay slot nop
  797  000017d4          	L34_LF2:
  798  000017d4  2001ffff	addi	r1,r0,#-1
  799  000017d8          	L35_LF2:
  800  000017d8  08000004	j	L24_LF2
  801  000017dc  54000000	nop; delay slot nop
  802  000017e0          	L33_LF2:
  803  000017e0          	L24_LF2:
  804  000017e0  8fa20000	lw	r2,0(r29)
  805  000017e4  8fa30004	lw	r3,4(r29)
  806  000017e8  8fdffff8	lw	r31,-8(r30)
  807  000017ec  001ee820	add	r29,r0,r30
  808  000017f0  8fdefffc	lw	r30,-4(r30)
  809  000017f4  4be00000	jr	r31
  810  000017f8  54000000	nop
  811  000017fc          	.endproc _dstrncmp
  812  000017fc          	.align 2
  813  000017fc          	.proc _dstrlen
  814  000017fc          	.global _dstrlen
  815  000017fc          	_dstrlen:
  816                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  817  000017fc  afbefffc	sw	-4(r29),r30; push fp
  818  00001800  001df020	add	r30,r0,r29; fp = sp
  819  00001804  afbffff8	sw	-8(r29),r31; push ret addr
  820  00001808  2fbd0018	subui	r29,r29,#24; alloc local storage
  821  0000180c  afa20000	sw	0(r29),r2
  822  00001810  20010000	addi	r1,r0,#0
  823  00001814  afc1fff4	sw	-12(r30),r1
  824  00001818          	L37_LF2:
  825  00001818  8fc10000	lw	r1,(r30)
  826  0000181c  20220001	addi	r2,r1,#1
  827  00001820  afc20000	sw	(r30),r2
  828  00001824  90210000	lbu	r1,(r1)
  829  00001828  64220000	snei	r2,r1,#0
  830  0000182c  1440000c	bnez	r2,L39_LF2
  831  00001830  54000000	nop; delay slot nop
  832  00001834  0800001c	j	L38_LF2
  833  00001838  54000000	nop; delay slot nop
  834  0000183c          	L39_LF2:
  835  0000183c  8fc2fff4	lw	r2,-12(r30)
  836  00001840  20410001	addi	r1,r2,#1
  837  00001844  00011020	add	r2,r0,r1
  838  00001848  afc2fff4	sw	-12(r30),r2
  839  0000184c  0bffffc8	j	L37_LF2
  840  00001850  54000000	nop; delay slot nop
  841  00001854          	L38_LF2:
  842  00001854  8fc1fff4	lw	r1,-12(r30)
  843  00001858  08000004	j	L36_LF2
  844  0000185c  54000000	nop; delay slot nop
  845  00001860          	L36_LF2:
  846  00001860  8fa20000	lw	r2,0(r29)
  847  00001864  8fdffff8	lw	r31,-8(r30)
  848  00001868  001ee820	add	r29,r0,r30
  849  0000186c  8fdefffc	lw	r30,-4(r30)
  850  00001870  4be00000	jr	r31
  851  00001874  54000000	nop
  852  00001878          	.endproc _dstrlen
  853  00001878          	.align 2
  854  00001878          	.proc _dstrstr
  855  00001878          	.global _dstrstr
  856  00001878          	_dstrstr:
  857                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  858  00001878  afbefffc	sw	-4(r29),r30; push fp
  859  0000187c  001df020	add	r30,r0,r29; fp = sp
  860  00001880  afbffff8	sw	-8(r29),r31; push ret addr
  861  00001884  2fbd0018	subui	r29,r29,#24; alloc local storage
  862  00001888  afa20000	sw	0(r29),r2
  863  0000188c  23bdfff8	addi	r29,r29,#-8
  864  00001890  001d0820	add	r1,r0,r29
  865  00001894  8fc20004	lw	r2,4(r30)
  866  00001898  ac220000	sw	(r1),r2
  867  0000189c  0fffff5c	jal	_dstrlen
  868  000018a0  54000000	nop; delay slot nop
  869  000018a4  23bd0008	addi	r29,r29,#8
  870  000018a8  afc1fff4	sw	-12(r30),r1
  871  000018ac          	L41_LF2:
  872  000018ac  8fc10000	lw	r1,(r30)
  873  000018b0  90220000	lbu	r2,(r1)
  874  000018b4  64410000	snei	r1,r2,#0
  875  000018b8  1420000c	bnez	r1,L43_LF2
  876  000018bc  54000000	nop; delay slot nop
  877  000018c0  08000060	j	L42_LF2
  878  000018c4  54000000	nop; delay slot nop
  879  000018c8          	L43_LF2:
  880  000018c8  23bdfff0	addi	r29,r29,#-16
  881  000018cc  001d0820	add	r1,r0,r29
  882  000018d0  8fc20000	lw	r2,(r30)
  883  000018d4  ac220000	sw	(r1),r2
  884  000018d8  8fc20004	lw	r2,4(r30)
  885  000018dc  ac220004	sw	4(r1),r2
  886  000018e0  8fc2fff4	lw	r2,-12(r30)
  887  000018e4  ac220008	sw	8(r1),r2
  888  000018e8  0ffffdc0	jal	_dstrncmp
  889  000018ec  54000000	nop; delay slot nop
  890  000018f0  23bd0010	addi	r29,r29,#16
  891  000018f4  64220000	snei	r2,r1,#0
  892  000018f8  14400010	bnez	r2,L44_LF2
  893  000018fc  54000000	nop; delay slot nop
  894  00001900  8fc10000	lw	r1,(r30)
  895  00001904  08000028	j	L40_LF2
  896  00001908  54000000	nop; delay slot nop
  897  0000190c          	L44_LF2:
  898  0000190c  8fc20000	lw	r2,(r30)
  899  00001910  20410001	addi	r1,r2,#1
  900  00001914  00011020	add	r2,r0,r1
  901  00001918  afc20000	sw	(r30),r2
  902  0000191c  0bffff8c	j	L41_LF2
  903  00001920  54000000	nop; delay slot nop
  904  00001924          	L42_LF2:
  905  00001924  20010000	addi	r1,r0,#0
  906  00001928  08000004	j	L40_LF2
  907  0000192c  54000000	nop; delay slot nop
  908  00001930          	L40_LF2:
  909  00001930  8fa20000	lw	r2,0(r29)
  910  00001934  8fdffff8	lw	r31,-8(r30)
  911  00001938  001ee820	add	r29,r0,r30
  912  0000193c  8fdefffc	lw	r30,-4(r30)
  913  00001940  4be00000	jr	r31
  914  00001944  54000000	nop
  915  00001948          	.endproc _dstrstr
  916  00001948          	.align 2
  917  00001948          	.proc _dmindex
  918  00001948          	.global _dmindex
  919  00001948          	_dmindex:
  920                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  921  00001948  afbefffc	sw	-4(r29),r30; push fp
  922  0000194c  001df020	add	r30,r0,r29; fp = sp
  923  00001950  afbffff8	sw	-8(r29),r31; push ret addr
  924  00001954  2fbd0018	subui	r29,r29,#24; alloc local storage
  925  00001958  afa20000	sw	0(r29),r2
  926  0000195c  54000000	nop
  927  00001960          	L46_LF2:
  928  00001960  8fc10000	lw	r1,(r30)
  929  00001964  90220000	lbu	r2,(r1)
  930  00001968  64410000	snei	r1,r2,#0
  931  0000196c  1420000c	bnez	r1,L48_LF2
  932  00001970  54000000	nop; delay slot nop
  933  00001974  08000070	j	L47_LF2
  934  00001978  54000000	nop; delay slot nop
  935  0000197c          	L48_LF2:
  936  0000197c  8fc10004	lw	r1,4(r30)
  937  00001980  afc1fff4	sw	-12(r30),r1
  938  00001984          	L49_LF2:
  939  00001984  8fc1fff4	lw	r1,-12(r30)
  940  00001988  90220000	lbu	r2,(r1)
  941  0000198c  64410000	snei	r1,r2,#0
  942  00001990  1420000c	bnez	r1,L52_LF2
  943  00001994  54000000	nop; delay slot nop
  944  00001998  08000044	j	L50_LF2
  945  0000199c  54000000	nop; delay slot nop
  946  000019a0          	L52_LF2:
  947  000019a0  8fc10000	lw	r1,(r30)
  948  000019a4  8fc2fff4	lw	r2,-12(r30)
  949  000019a8  90210000	lbu	r1,(r1)
  950  000019ac  90420000	lbu	r2,(r2)
  951  000019b0  00220828	seq	r1,r1,r2
  952  000019b4  10200010	beqz	r1,L51_LF2
  953  000019b8  54000000	nop; delay slot nop
  954  000019bc  8fc10000	lw	r1,(r30)
  955  000019c0  08000030	j	L45_LF2
  956  000019c4  54000000	nop; delay slot nop
  957  000019c8          	L53_LF2:
  958  000019c8          	L51_LF2:
  959  000019c8  8fc2fff4	lw	r2,-12(r30)
  960  000019cc  20410001	addi	r1,r2,#1
  961  000019d0  00011020	add	r2,r0,r1
  962  000019d4  afc2fff4	sw	-12(r30),r2
  963  000019d8  0bffffa8	j	L49_LF2
  964  000019dc  54000000	nop; delay slot nop
  965  000019e0          	L50_LF2:
  966  000019e0  0bffff7c	j	L46_LF2
  967  000019e4  54000000	nop; delay slot nop
  968  000019e8          	L47_LF2:
  969  000019e8  20010000	addi	r1,r0,#0
  970  000019ec  08000004	j	L45_LF2
  971  000019f0  54000000	nop; delay slot nop
  972  000019f4          	L45_LF2:
  973  000019f4  8fa20000	lw	r2,0(r29)
  974  000019f8  8fdffff8	lw	r31,-8(r30)
  975  000019fc  001ee820	add	r29,r0,r30
  976  00001a00  8fdefffc	lw	r30,-4(r30)
  977  00001a04  4be00000	jr	r31
  978  00001a08  54000000	nop
  979  00001a0c          	.endproc _dmindex
  980  00001a0c          	.align 2
  981  00001a0c          	.proc _dindex
  982  00001a0c          	.global _dindex
  983  00001a0c          	_dindex:
  984                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  985  00001a0c  afbefffc	sw	-4(r29),r30; push fp
  986  00001a10  001df020	add	r30,r0,r29; fp = sp
  987  00001a14  afbffff8	sw	-8(r29),r31; push ret addr
  988  00001a18  2fbd0010	subui	r29,r29,#16; alloc local storage
  989  00001a1c  afa20000	sw	0(r29),r2
  990  00001a20  54000000	nop
  991  00001a24          	L55_LF2:
  992  00001a24  8fc10000	lw	r1,(r30)
  993  00001a28  90220000	lbu	r2,(r1)
  994  00001a2c  64410000	snei	r1,r2,#0
  995  00001a30  1420000c	bnez	r1,L57_LF2
  996  00001a34  54000000	nop; delay slot nop
  997  00001a38  08000040	j	L56_LF2
  998  00001a3c  54000000	nop; delay slot nop
  999  00001a40          	L57_LF2:
 1000  00001a40  8fc10000	lw	r1,(r30)
 1001  00001a44  90220000	lbu	r2,(r1)
 1002  00001a48  8fc10004	lw	r1,4(r30)
 1003  00001a4c  00411028	seq	r2,r2,r1
 1004  00001a50  10400010	beqz	r2,L58_LF2
 1005  00001a54  54000000	nop; delay slot nop
 1006  00001a58  8fc10000	lw	r1,(r30)
 1007  00001a5c  08000028	j	L54_LF2
 1008  00001a60  54000000	nop; delay slot nop
 1009  00001a64          	L58_LF2:
 1010  00001a64  8fc20000	lw	r2,(r30)
 1011  00001a68  20410001	addi	r1,r2,#1
 1012  00001a6c  00011020	add	r2,r0,r1
 1013  00001a70  afc20000	sw	(r30),r2
 1014  00001a74  0bffffac	j	L55_LF2
 1015  00001a78  54000000	nop; delay slot nop
 1016  00001a7c          	L56_LF2:
 1017  00001a7c  20010000	addi	r1,r0,#0
 1018  00001a80  08000004	j	L54_LF2
 1019  00001a84  54000000	nop; delay slot nop
 1020  00001a88          	L54_LF2:
 1021  00001a88  8fa20000	lw	r2,0(r29)
 1022  00001a8c  8fdffff8	lw	r31,-8(r30)
 1023  00001a90  001ee820	add	r29,r0,r30
 1024  00001a94  8fdefffc	lw	r30,-4(r30)
 1025  00001a98  4be00000	jr	r31
 1026  00001a9c  54000000	nop
 1027  00001aa0          	.endproc _dindex
 1028  00001aa0          	.align 2
 1029  00001aa0          	.proc _ditoa
 1030  00001aa0          	.global _ditoa
 1031  00001aa0          	_ditoa:
 1032                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1033  00001aa0  afbefffc	sw	-4(r29),r30; push fp
 1034  00001aa4  001df020	add	r30,r0,r29; fp = sp
 1035  00001aa8  afbffff8	sw	-8(r29),r31; push ret addr
 1036  00001aac  2fbd0018	subui	r29,r29,#24; alloc local storage
 1037  00001ab0  afa20000	sw	0(r29),r2
 1038  00001ab4  afa30004	sw	4(r29),r3
 1039  00001ab8  8fc10000	lw	r1,(r30)
 1040  00001abc  68220000	slti	r2,r1,#0
 1041  00001ac0  1040002c	beqz	r2,L60_LF2
 1042  00001ac4  54000000	nop; delay slot nop
 1043  00001ac8  8fc10004	lw	r1,4(r30)
 1044  00001acc  20220001	addi	r2,r1,#1
 1045  00001ad0  afc20004	sw	4(r30),r2
 1046  00001ad4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1047  00001ad8  a0220000	sb	(r1),r2
 1048  00001adc  8fc10000	lw	r1,(r30)
 1049  00001ae0  00011022	sub	r2,r0,r1
 1050  00001ae4  afc20000	sw	(r30),r2
 1051  00001ae8  08000118	j	L61_LF2
 1052  00001aec  54000000	nop; delay slot nop
 1053  00001af0          	L60_LF2:
 1054  00001af0  8fc10000	lw	r1,(r30)
 1055  00001af4  64220000	snei	r2,r1,#0
 1056  00001af8  14400020	bnez	r2,L62_LF2
 1057  00001afc  54000000	nop; delay slot nop
 1058  00001b00  8fc10004	lw	r1,4(r30)
 1059  00001b04  20220001	addi	r2,r1,#1
 1060  00001b08  afc20004	sw	4(r30),r2
 1061  00001b0c  20020030	addi	r2,r0,(#0x30)&0xff
 1062  00001b10  a0220000	sb	(r1),r2
 1063  00001b14  080000ec	j	L61_LF2
 1064  00001b18  54000000	nop; delay slot nop
 1065  00001b1c          	L62_LF2:
 1066  00001b1c  20010001	addi	r1,r0,#1
 1067  00001b20  afc1fff4	sw	-12(r30),r1
 1068  00001b24          	L64_LF2:
 1069  00001b24  8fc1fff4	lw	r1,-12(r30)
 1070  00001b28  8fc20000	lw	r2,(r30)
 1071  00001b2c  0022082c	sle	r1,r1,r2
 1072  00001b30  1420000c	bnez	r1,L66_LF2
 1073  00001b34  54000000	nop; delay slot nop
 1074  00001b38  08000024	j	L65_LF2
 1075  00001b3c  54000000	nop; delay slot nop
 1076  00001b40          	L67_LF2:
 1077  00001b40          	L66_LF2:
 1078  00001b40  8fc1fff4	lw	r1,-12(r30)
 1079  00001b44  00011820	add	r3,r0,r1
 1080  00001b48  50620002	slli	r2,r3,#0x2
 1081  00001b4c  00411020	add	r2,r2,r1
 1082  00001b50  50410001	slli	r1,r2,#0x1
 1083  00001b54  afc1fff4	sw	-12(r30),r1
 1084  00001b58  0bffffc8	j	L64_LF2
 1085  00001b5c  54000000	nop; delay slot nop
 1086  00001b60          	L65_LF2:
 1087  00001b60  54000000	nop
 1088  00001b64          	L68_LF2:
 1089  00001b64  8fc1fff4	lw	r1,-12(r30)
 1090  00001b68  2002000a	addi	r2,r0,#10
 1091  00001b6c  00200035	movi2fp	f0,r1
 1092  00001b70  00400835	movi2fp	f1,r2
 1093  00001b74  0401000f	div	f0,f0,f1
 1094  00001b78  00000834	movfp2i	r1,f0
 1095  00001b7c  afc1fff4	sw	-12(r30),r1
 1096  00001b80  8fc10004	lw	r1,4(r30)
 1097  00001b84  20220001	addi	r2,r1,#1
 1098  00001b88  afc20004	sw	4(r30),r2
 1099  00001b8c  8fc20000	lw	r2,(r30)
 1100  00001b90  8fc3fff4	lw	r3,-12(r30)
 1101  00001b94  00400035	movi2fp	f0,r2
 1102  00001b98  00600835	movi2fp	f1,r3
 1103  00001b9c  0401000f	div	f0,f0,f1
 1104  00001ba0  00001034	movfp2i	r2,f0
 1105  00001ba4  00021820	add	r3,r0,r2
 1106  00001ba8  20620030	addi	r2,r3,#48
 1107  00001bac  a0220000	sb	(r1),r2
 1108  00001bb0  8fc10000	lw	r1,(r30)
 1109  00001bb4  8fc3fff4	lw	r3,-12(r30)
 1110  00001bb8  00200035	movi2fp	f0,r1
 1111  00001bbc  00600835	movi2fp	f1,r3
 1112  00001bc0  0401000f	div	f0,f0,f1
 1113  00001bc4  00001034	movfp2i	r2,f0
 1114  00001bc8  8fc3fff4	lw	r3,-12(r30)
 1115  00001bcc  00400035	movi2fp	f0,r2
 1116  00001bd0  00600835	movi2fp	f1,r3
 1117  00001bd4  0401000e	mult	f0,f0,f1
 1118  00001bd8  00001034	movfp2i	r2,f0
 1119  00001bdc  00220822	sub	r1,r1,r2
 1120  00001be0  afc10000	sw	(r30),r1
 1121  00001be4          	L70_LF2:
 1122  00001be4  8fc1fff4	lw	r1,-12(r30)
 1123  00001be8  6c220001	sgti	r2,r1,#1
 1124  00001bec  1440000c	bnez	r2,L71_LF2
 1125  00001bf0  54000000	nop; delay slot nop
 1126  00001bf4  0800000c	j	L61_LF2
 1127  00001bf8  54000000	nop; delay slot nop
 1128  00001bfc          	L71_LF2:
 1129  00001bfc  0bffff64	j	L68_LF2
 1130  00001c00  54000000	nop; delay slot nop
 1131  00001c04          	L69_LF2:
 1132  00001c04          	L63_LF2:
 1133  00001c04          	L61_LF2:
 1134  00001c04  8fc10004	lw	r1,4(r30)
 1135  00001c08  20020000	addi	r2,r0,(#0x0)&0xff
 1136  00001c0c  a0220000	sb	(r1),r2
 1137  00001c10          	L59_LF2:
 1138  00001c10  8fa20000	lw	r2,0(r29)
 1139  00001c14  8fa30004	lw	r3,4(r29)
 1140  00001c18  8fdffff8	lw	r31,-8(r30)
 1141  00001c1c  001ee820	add	r29,r0,r30
 1142  00001c20  8fdefffc	lw	r30,-4(r30)
 1143  00001c24  4be00000	jr	r31
 1144  00001c28  54000000	nop
 1145  00001c2c          	.endproc _ditoa
 1146  00001c2c          	.align 2
 1147  00001c2c          	.proc _dstrtol
 1148  00001c2c          	.global _dstrtol
 1149  00001c2c          	_dstrtol:
 1150                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1151  00001c2c  afbefffc	sw	-4(r29),r30; push fp
 1152  00001c30  001df020	add	r30,r0,r29; fp = sp
 1153  00001c34  afbffff8	sw	-8(r29),r31; push ret addr
 1154  00001c38  2fbd0020	subui	r29,r29,#32; alloc local storage
 1155  00001c3c  afa20000	sw	0(r29),r2
 1156  00001c40  20010000	addi	r1,r0,#0
 1157  00001c44  afc1fff4	sw	-12(r30),r1
 1158  00001c48          	L73_LF2:
 1159  00001c48  8fc10000	lw	r1,(r30)
 1160  00001c4c  90220000	lbu	r2,(r1)
 1161  00001c50  60410020	seqi	r1,r2,#32
 1162  00001c54  14200034	bnez	r1,L75_LF2
 1163  00001c58  54000000	nop; delay slot nop
 1164  00001c5c  8fc10000	lw	r1,(r30)
 1165  00001c60  90220000	lbu	r2,(r1)
 1166  00001c64  60410009	seqi	r1,r2,#9
 1167  00001c68  14200020	bnez	r1,L75_LF2
 1168  00001c6c  54000000	nop; delay slot nop
 1169  00001c70  8fc10000	lw	r1,(r30)
 1170  00001c74  90220000	lbu	r2,(r1)
 1171  00001c78  6041000a	seqi	r1,r2,#10
 1172  00001c7c  1420000c	bnez	r1,L75_LF2
 1173  00001c80  54000000	nop; delay slot nop
 1174  00001c84  0800001c	j	L74_LF2
 1175  00001c88  54000000	nop; delay slot nop
 1176  00001c8c          	L75_LF2:
 1177  00001c8c  8fc20000	lw	r2,(r30)
 1178  00001c90  20410001	addi	r1,r2,#1
 1179  00001c94  00011020	add	r2,r0,r1
 1180  00001c98  afc20000	sw	(r30),r2
 1181  00001c9c  0bffffa8	j	L73_LF2
 1182  00001ca0  54000000	nop; delay slot nop
 1183  00001ca4          	L74_LF2:
 1184  00001ca4  8fc10004	lw	r1,4(r30)
 1185  00001ca8  64220000	snei	r2,r1,#0
 1186  00001cac  10400010	beqz	r2,L76_LF2
 1187  00001cb0  54000000	nop; delay slot nop
 1188  00001cb4  8fc10004	lw	r1,4(r30)
 1189  00001cb8  8fc20000	lw	r2,(r30)
 1190  00001cbc  ac220000	sw	(r1),r2
 1191  00001cc0          	L76_LF2:
 1192  00001cc0  8fc10000	lw	r1,(r30)
 1193  00001cc4  90220000	lbu	r2,(r1)
 1194  00001cc8  64410000	snei	r1,r2,#0
 1195  00001ccc  14200010	bnez	r1,L77_LF2
 1196  00001cd0  54000000	nop; delay slot nop
 1197  00001cd4  8fc1fff4	lw	r1,-12(r30)
 1198  00001cd8  08000294	j	L72_LF2
 1199  00001cdc  54000000	nop; delay slot nop
 1200  00001ce0          	L77_LF2:
 1201  00001ce0  8fc10000	lw	r1,(r30)
 1202  00001ce4  90220000	lbu	r2,(r1)
 1203  00001ce8  6041002d	seqi	r1,r2,#45
 1204  00001cec  10200024	beqz	r1,L78_LF2
 1205  00001cf0  54000000	nop; delay slot nop
 1206  00001cf4  2001ffff	addi	r1,r0,#-1
 1207  00001cf8  afc1ffec	sw	-20(r30),r1
 1208  00001cfc  8fc20000	lw	r2,(r30)
 1209  00001d00  20410001	addi	r1,r2,#1
 1210  00001d04  00011020	add	r2,r0,r1
 1211  00001d08  afc20000	sw	(r30),r2
 1212  00001d0c  0800000c	j	L79_LF2
 1213  00001d10  54000000	nop; delay slot nop
 1214  00001d14          	L78_LF2:
 1215  00001d14  20010001	addi	r1,r0,#1
 1216  00001d18  afc1ffec	sw	-20(r30),r1
 1217  00001d1c          	L79_LF2:
 1218  00001d1c  8fc10008	lw	r1,8(r30)
 1219  00001d20  64220000	snei	r2,r1,#0
 1220  00001d24  14400090	bnez	r2,L80_LF2
 1221  00001d28  54000000	nop; delay slot nop
 1222  00001d2c  8fc10000	lw	r1,(r30)
 1223  00001d30  90220000	lbu	r2,(r1)
 1224  00001d34  60410030	seqi	r1,r2,#48
 1225  00001d38  10200074	beqz	r1,L81_LF2
 1226  00001d3c  54000000	nop; delay slot nop
 1227  00001d40  8fc20000	lw	r2,(r30)
 1228  00001d44  20410001	addi	r1,r2,#1
 1229  00001d48  00011020	add	r2,r0,r1
 1230  00001d4c  afc20000	sw	(r30),r2
 1231  00001d50  8fc10000	lw	r1,(r30)
 1232  00001d54  90220000	lbu	r2,(r1)
 1233  00001d58  60410078	seqi	r1,r2,#120
 1234  00001d5c  14200020	bnez	r1,L83_LF2
 1235  00001d60  54000000	nop; delay slot nop
 1236  00001d64  8fc10000	lw	r1,(r30)
 1237  00001d68  90220000	lbu	r2,(r1)
 1238  00001d6c  60410058	seqi	r1,r2,#88
 1239  00001d70  1420000c	bnez	r1,L83_LF2
 1240  00001d74  54000000	nop; delay slot nop
 1241  00001d78  08000024	j	L82_LF2
 1242  00001d7c  54000000	nop; delay slot nop
 1243  00001d80          	L83_LF2:
 1244  00001d80  20010010	addi	r1,r0,#16
 1245  00001d84  afc10008	sw	8(r30),r1
 1246  00001d88  8fc20000	lw	r2,(r30)
 1247  00001d8c  20410001	addi	r1,r2,#1
 1248  00001d90  00011020	add	r2,r0,r1
 1249  00001d94  afc20000	sw	(r30),r2
 1250  00001d98  0800000c	j	L84_LF2
 1251  00001d9c  54000000	nop; delay slot nop
 1252  00001da0          	L82_LF2:
 1253  00001da0  20010008	addi	r1,r0,#8
 1254  00001da4  afc10008	sw	8(r30),r1
 1255  00001da8          	L84_LF2:
 1256  00001da8  0800000c	j	L80_LF2
 1257  00001dac  54000000	nop; delay slot nop
 1258  00001db0          	L81_LF2:
 1259  00001db0  2001000a	addi	r1,r0,#10
 1260  00001db4  afc10008	sw	8(r30),r1
 1261  00001db8          	L85_LF2:
 1262  00001db8          	L80_LF2:
 1263  00001db8  8fc10008	lw	r1,8(r30)
 1264  00001dbc  70220000	slei	r2,r1,#0
 1265  00001dc0  1440001c	bnez	r2,L87_LF2
 1266  00001dc4  54000000	nop; delay slot nop
 1267  00001dc8  8fc10008	lw	r1,8(r30)
 1268  00001dcc  6c220010	sgti	r2,r1,#16
 1269  00001dd0  1440000c	bnez	r2,L87_LF2
 1270  00001dd4  54000000	nop; delay slot nop
 1271  00001dd8  08000010	j	L86_LF2
 1272  00001ddc  54000000	nop; delay slot nop
 1273  00001de0          	L87_LF2:
 1274  00001de0  8fc1fff4	lw	r1,-12(r30)
 1275  00001de4  08000188	j	L72_LF2
 1276  00001de8  54000000	nop; delay slot nop
 1277  00001dec          	L86_LF2:
 1278  00001dec  54000000	nop
 1279  00001df0          	L88_LF2:
 1280  00001df0  8fc10000	lw	r1,(r30)
 1281  00001df4  90220000	lbu	r2,(r1)
 1282  00001df8  6c41002f	sgtui	r1,r2,#47
 1283  00001dfc  10200030	beqz	r1,L91_LF2
 1284  00001e00  54000000	nop; delay slot nop
 1285  00001e04  8fc10000	lw	r1,(r30)
 1286  00001e08  90220000	lbu	r2,(r1)
 1287  00001e0c  70410039	sleui	r1,r2,#57
 1288  00001e10  1020001c	beqz	r1,L91_LF2
 1289  00001e14  54000000	nop; delay slot nop
 1290  00001e18  8fc10000	lw	r1,(r30)
 1291  00001e1c  90220000	lbu	r2,(r1)
 1292  00001e20  2041ffd0	addi	r1,r2,#-48
 1293  00001e24  afc1fff0	sw	-16(r30),r1
 1294  00001e28  0800008c	j	L92_LF2
 1295  00001e2c  54000000	nop; delay slot nop
 1296  00001e30          	L91_LF2:
 1297  00001e30  8fc10000	lw	r1,(r30)
 1298  00001e34  90220000	lbu	r2,(r1)
 1299  00001e38  6c410060	sgtui	r1,r2,#96
 1300  00001e3c  10200030	beqz	r1,L93_LF2
 1301  00001e40  54000000	nop; delay slot nop
 1302  00001e44  8fc10000	lw	r1,(r30)
 1303  00001e48  90220000	lbu	r2,(r1)
 1304  00001e4c  7041007a	sleui	r1,r2,#122
 1305  00001e50  1020001c	beqz	r1,L93_LF2
 1306  00001e54  54000000	nop; delay slot nop
 1307  00001e58  8fc10000	lw	r1,(r30)
 1308  00001e5c  90220000	lbu	r2,(r1)
 1309  00001e60  2041ffa9	addi	r1,r2,#-87
 1310  00001e64  afc1fff0	sw	-16(r30),r1
 1311  00001e68  0800004c	j	L92_LF2
 1312  00001e6c  54000000	nop; delay slot nop
 1313  00001e70          	L93_LF2:
 1314  00001e70  8fc10000	lw	r1,(r30)
 1315  00001e74  90220000	lbu	r2,(r1)
 1316  00001e78  6c410040	sgtui	r1,r2,#64
 1317  00001e7c  10200030	beqz	r1,L95_LF2
 1318  00001e80  54000000	nop; delay slot nop
 1319  00001e84  8fc10000	lw	r1,(r30)
 1320  00001e88  90220000	lbu	r2,(r1)
 1321  00001e8c  7041005a	sleui	r1,r2,#90
 1322  00001e90  1020001c	beqz	r1,L95_LF2
 1323  00001e94  54000000	nop; delay slot nop
 1324  00001e98  8fc10000	lw	r1,(r30)
 1325  00001e9c  90220000	lbu	r2,(r1)
 1326  00001ea0  2041ffc9	addi	r1,r2,#-55
 1327  00001ea4  afc1fff0	sw	-16(r30),r1
 1328  00001ea8  0800000c	j	L92_LF2
 1329  00001eac  54000000	nop; delay slot nop
 1330  00001eb0          	L95_LF2:
 1331  00001eb0  200103e8	addi	r1,r0,#1000
 1332  00001eb4  afc1fff0	sw	-16(r30),r1
 1333  00001eb8          	L96_LF2:
 1334  00001eb8          	L94_LF2:
 1335  00001eb8          	L92_LF2:
 1336  00001eb8  8fc1fff0	lw	r1,-16(r30)
 1337  00001ebc  8fc20008	lw	r2,8(r30)
 1338  00001ec0  0022082a	slt	r1,r1,r2
 1339  00001ec4  10200040	beqz	r1,L90_LF2
 1340  00001ec8  54000000	nop; delay slot nop
 1341  00001ecc  8fc1fff4	lw	r1,-12(r30)
 1342  00001ed0  8fc20008	lw	r2,8(r30)
 1343  00001ed4  00200035	movi2fp	f0,r1
 1344  00001ed8  00400835	movi2fp	f1,r2
 1345  00001edc  0401000e	mult	f0,f0,f1
 1346  00001ee0  00000834	movfp2i	r1,f0
 1347  00001ee4  afc1fff4	sw	-12(r30),r1
 1348  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1349  00001eec  8fc2fff0	lw	r2,-16(r30)
 1350  00001ef0  00220820	add	r1,r1,r2
 1351  00001ef4  afc1fff4	sw	-12(r30),r1
 1352  00001ef8  8fc20000	lw	r2,(r30)
 1353  00001efc  20410001	addi	r1,r2,#1
 1354  00001f00  00011020	add	r2,r0,r1
 1355  00001f04  afc20000	sw	(r30),r2
 1356  00001f08          	L97_LF2:
 1357  00001f08          	L90_LF2:
 1358  00001f08  8fc1fff0	lw	r1,-16(r30)
 1359  00001f0c  8fc20008	lw	r2,8(r30)
 1360  00001f10  0022082a	slt	r1,r1,r2
 1361  00001f14  1420000c	bnez	r1,L98_LF2
 1362  00001f18  54000000	nop; delay slot nop
 1363  00001f1c  0800000c	j	L89_LF2
 1364  00001f20  54000000	nop; delay slot nop
 1365  00001f24          	L98_LF2:
 1366  00001f24  0bfffec8	j	L88_LF2
 1367  00001f28  54000000	nop; delay slot nop
 1368  00001f2c          	L89_LF2:
 1369  00001f2c  8fc10004	lw	r1,4(r30)
 1370  00001f30  64220000	snei	r2,r1,#0
 1371  00001f34  10400010	beqz	r2,L99_LF2
 1372  00001f38  54000000	nop; delay slot nop
 1373  00001f3c  8fc10004	lw	r1,4(r30)
 1374  00001f40  8fc20000	lw	r2,(r30)
 1375  00001f44  ac220000	sw	(r1),r2
 1376  00001f48          	L99_LF2:
 1377  00001f48  8fc1fff4	lw	r1,-12(r30)
 1378  00001f4c  8fc2ffec	lw	r2,-20(r30)
 1379  00001f50  00200035	movi2fp	f0,r1
 1380  00001f54  00400835	movi2fp	f1,r2
 1381  00001f58  0401000e	mult	f0,f0,f1
 1382  00001f5c  00000834	movfp2i	r1,f0
 1383  00001f60  afc1fff4	sw	-12(r30),r1
 1384  00001f64  8fc1fff4	lw	r1,-12(r30)
 1385  00001f68  08000004	j	L72_LF2
 1386  00001f6c  54000000	nop; delay slot nop
 1387  00001f70          	L72_LF2:
 1388  00001f70  8fa20000	lw	r2,0(r29)
 1389  00001f74  8fdffff8	lw	r31,-8(r30)
 1390  00001f78  001ee820	add	r29,r0,r30
 1391  00001f7c  8fdefffc	lw	r30,-4(r30)
 1392  00001f80  4be00000	jr	r31
 1393  00001f84  54000000	nop
 1394  00001f88          	.endproc _dstrtol
 1395  00001f88          	.align 2
 1396  00001f88          	.proc _bcopy
 1397  00001f88          	.global _bcopy
 1398  00001f88          	_bcopy:
 1399                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1400  00001f88  afbefffc	sw	-4(r29),r30; push fp
 1401  00001f8c  001df020	add	r30,r0,r29; fp = sp
 1402  00001f90  afbffff8	sw	-8(r29),r31; push ret addr
 1403  00001f94  2fbd0010	subui	r29,r29,#16; alloc local storage
 1404  00001f98  afa20000	sw	0(r29),r2
 1405  00001f9c  afa30004	sw	4(r29),r3
 1406  00001fa0  54000000	nop
 1407  00001fa4          	L101_LF2:
 1408  00001fa4  8fc10008	lw	r1,8(r30)
 1409  00001fa8  2022ffff	addi	r2,r1,#-1
 1410  00001fac  afc20008	sw	8(r30),r2
 1411  00001fb0  6c210000	sgti	r1,r1,#0
 1412  00001fb4  1420000c	bnez	r1,L103_LF2
 1413  00001fb8  54000000	nop; delay slot nop
 1414  00001fbc  0800002c	j	L102_LF2
 1415  00001fc0  54000000	nop; delay slot nop
 1416  00001fc4          	L103_LF2:
 1417  00001fc4  8fc10004	lw	r1,4(r30)
 1418  00001fc8  20220001	addi	r2,r1,#1
 1419  00001fcc  afc20004	sw	4(r30),r2
 1420  00001fd0  8fc20000	lw	r2,(r30)
 1421  00001fd4  20430001	addi	r3,r2,#1
 1422  00001fd8  afc30000	sw	(r30),r3
 1423  00001fdc  80420000	lb	r2,(r2)
 1424  00001fe0  a0220000	sb	(r1),r2
 1425  00001fe4  0bffffbc	j	L101_LF2
 1426  00001fe8  54000000	nop; delay slot nop
 1427  00001fec          	L102_LF2:
 1428  00001fec          	L100_LF2:
 1429  00001fec  8fa20000	lw	r2,0(r29)
 1430  00001ff0  8fa30004	lw	r3,4(r29)
 1431  00001ff4  8fdffff8	lw	r31,-8(r30)
 1432  00001ff8  001ee820	add	r29,r0,r30
 1433  00001ffc  8fdefffc	lw	r30,-4(r30)
 1434  00002000  4be00000	jr	r31
 1435  00002004  54000000	nop
 1436  00002008          	.endproc _bcopy
 1437  00002008          	.align 2
 1438  00002008          	.proc _bzero
 1439  00002008          	.global _bzero
 1440  00002008          	_bzero:
 1441                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1442  00002008  afbefffc	sw	-4(r29),r30; push fp
 1443  0000200c  001df020	add	r30,r0,r29; fp = sp
 1444  00002010  afbffff8	sw	-8(r29),r31; push ret addr
 1445  00002014  2fbd0010	subui	r29,r29,#16; alloc local storage
 1446  00002018  afa20000	sw	0(r29),r2
 1447  0000201c  54000000	nop
 1448  00002020          	L105_LF2:
 1449  00002020  8fc10004	lw	r1,4(r30)
 1450  00002024  2022ffff	addi	r2,r1,#-1
 1451  00002028  afc20004	sw	4(r30),r2
 1452  0000202c  6c210000	sgti	r1,r1,#0
 1453  00002030  1420000c	bnez	r1,L107_LF2
 1454  00002034  54000000	nop; delay slot nop
 1455  00002038  08000020	j	L106_LF2
 1456  0000203c  54000000	nop; delay slot nop
 1457  00002040          	L107_LF2:
 1458  00002040  8fc10000	lw	r1,(r30)
 1459  00002044  20220001	addi	r2,r1,#1
 1460  00002048  afc20000	sw	(r30),r2
 1461  0000204c  20020000	addi	r2,r0,(#0x0)&0xff
 1462  00002050  a0220000	sb	(r1),r2
 1463  00002054  0bffffc8	j	L105_LF2
 1464  00002058  54000000	nop; delay slot nop
 1465  0000205c          	L106_LF2:
 1466  0000205c          	L104_LF2:
 1467  0000205c  8fa20000	lw	r2,0(r29)
 1468  00002060  8fdffff8	lw	r31,-8(r30)
 1469  00002064  001ee820	add	r29,r0,r30
 1470  00002068  8fdefffc	lw	r30,-4(r30)
 1471  0000206c  4be00000	jr	r31
 1472  00002070  54000000	nop
 1473  00002074          	.endproc _bzero
 1474  00002074          	.align 2
 1475  00002074          	.proc _min
 1476  00002074          	.global _min
 1477  00002074          	_min:
 1478                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1479  00002074  afbefffc	sw	-4(r29),r30; push fp
 1480  00002078  001df020	add	r30,r0,r29; fp = sp
 1481  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1482  00002080  2fbd0010	subui	r29,r29,#16; alloc local storage
 1483  00002084  afa20000	sw	0(r29),r2
 1484  00002088  afa30004	sw	4(r29),r3
 1485  0000208c  8fc10000	lw	r1,(r30)
 1486  00002090  8fc20004	lw	r2,4(r30)
 1487  00002094  0022182c	sle	r3,r1,r2
 1488  00002098  14600008	bnez	r3,L109_LF2
 1489  0000209c  54000000	nop; delay slot nop
 1490  000020a0  8fc10004	lw	r1,4(r30)
 1491  000020a4          	L109_LF2:
 1492  000020a4  08000004	j	L108_LF2
 1493  000020a8  54000000	nop; delay slot nop
 1494  000020ac          	L108_LF2:
 1495  000020ac  8fa20000	lw	r2,0(r29)
 1496  000020b0  8fa30004	lw	r3,4(r29)
 1497  000020b4  8fdffff8	lw	r31,-8(r30)
 1498  000020b8  001ee820	add	r29,r0,r30
 1499  000020bc  8fdefffc	lw	r30,-4(r30)
 1500  000020c0  4be00000	jr	r31
 1501  000020c4  54000000	nop
 1502  000020c8          	.endproc _min
 1503  000020c8          	.align 2
 1504  000020c8          	.proc _max
 1505  000020c8          	.global _max
 1506  000020c8          	_max:
 1507                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1508  000020c8  afbefffc	sw	-4(r29),r30; push fp
 1509  000020cc  001df020	add	r30,r0,r29; fp = sp
 1510  000020d0  afbffff8	sw	-8(r29),r31; push ret addr
 1511  000020d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1512  000020d8  afa20000	sw	0(r29),r2
 1513  000020dc  afa30004	sw	4(r29),r3
 1514  000020e0  8fc10000	lw	r1,(r30)
 1515  000020e4  8fc20004	lw	r2,4(r30)
 1516  000020e8  0022182d	sge	r3,r1,r2
 1517  000020ec  14600008	bnez	r3,L111_LF2
 1518  000020f0  54000000	nop; delay slot nop
 1519  000020f4  8fc10004	lw	r1,4(r30)
 1520  000020f8          	L111_LF2:
 1521  000020f8  08000004	j	L110_LF2
 1522  000020fc  54000000	nop; delay slot nop
 1523  00002100          	L110_LF2:
 1524  00002100  8fa20000	lw	r2,0(r29)
 1525  00002104  8fa30004	lw	r3,4(r29)
 1526  00002108  8fdffff8	lw	r31,-8(r30)
 1527  0000210c  001ee820	add	r29,r0,r30
 1528  00002110  8fdefffc	lw	r30,-4(r30)
 1529  00002114  4be00000	jr	r31
 1530  00002118  54000000	nop
 1531  0000211c          	.endproc _max
 1532                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1533                      ;;;
 1534                      ;;; Most of the traps are called in files from libtraps.
 1537  0000211c          	.align 2
 1538  0000211c          	.proc _exit
 1539  0000211c          	.global _exit
 1540  0000211c          	_exit:
 1541  0000211c  44000300	trap	#0x300
 1542  00002120  4be00000	jr	r31
 1543  00002124  54000000	nop
 1544  00002128          	.endproc _exit
 1546                      ; for the benefit of gcc.
 1547  00002128          	.proc ___main
 1548  00002128          	.global ___main
 1549  00002128          	___main:
 1550  00002128  4be00000	jr	r31
 1551  0000212c  54000000	nop
 1552  00002130          	.endproc ___main
 1553  00002130          	.text
 1554  00002130          	.global _etext
 1555  00002130          	_etext:
 1556  00002130          	.align 3
 1557  00002130          	.data
 1558  000030b8          	.global _edata
 1559  000030b8          	_edata:
