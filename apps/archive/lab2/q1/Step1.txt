There are 32 semaphores in DLXOS.

There are 64 locks in DLXOS.

Upon initialization of the operating system, a static list of semaphores is generated. When a process requests a semaphore, one is grabbed from the static list and the count value is initialized. The unique handle for the semaphore is returned. This is done using sem_create(int count) and returns a sem, this function can be found in os/sync.c.

sem_wait(sem) decrements the count of the semaphore, and if it's negative before it decrements, it waits. Can be found in os/sync.c

sem_signal(sem) increments the count of the semaphore and awakens the next process to run in the queue, if the queue isn't empty. Can be found in os/sync.c

The handle is a unique identifier for each semaphore. It is supplied by the kernel upon semaphore creation, and used by the process to reference that semaphore thereafter.
