 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 130
    4                      ; Text size: 4348
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  256400  	.ascii "%d\000"
   83  00003003          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_mailbox> <handle_to_page_mapped_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f6d6169	
   85  0000301c  6c626f78	
   85  00003020  3e203c68	
   85  00003024  616e646c	
   85  00003028  655f746f	
   85  0000302c  5f706167	
   85  00003030  655f6d61	
   85  00003034  70706564	
   85  00003038  5f73656d	
   85  0000303c  6170686f	
   85  00003040  72653e0a	
   85  00003044  00      	
   86  00003045          	.align 2
   87  00003048          	LC2_LF0:
   88  00003048  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   88  0000304c  73656d61	
   88  00003050  70686f72	
   88  00003054  6520735f	
   88  00003058  70726f63	
   88  0000305c  735f636f	
   88  00003060  6d706c65	
   88  00003064  74656420	
   88  00003068  28256429	
   88  0000306c  20696e20	
   88  00003070  00      	
   89  00003071          	.align 2
   90  00003074          	LC3_LF0:
   91  00003074  2c206578	.ascii ", exiting...\n\000"
   91  00003078  6974696e	
   91  0000307c  672e2e2e	
   91  00003080  0a00    	
   92  00003082          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001004	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  23bdfff8	addi	r29,r29,#-8
  107  000010f8  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  108  000010fc  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  109  00001100  afa40000	sw	(r29),r4
  110  00001104  afa20004	sw	4(r29),r2
  111  00001108  0c000138	jal	_Printf
  112  0000110c  54000000	nop; not filled.
  113  00001110  23bd0008	addi	r29,r29,#8
  114  00001114  64410003	snei	r1,r2,#3
  115  00001118  10200028	beqz	r1,L17_LF0
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bdfff8	addi	r29,r29,#-8
  118  00001124  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  119  00001128  24843004	addui	r4,r4,(LC1_LF0)&0xffff
  120  0000112c  afa40000	sw	(r29),r4
  121  00001130  0c000110	jal	_Printf
  122  00001134  54000000	nop; not filled.
  123  00001138  0c000210	jal	_Exit
  124  0000113c  54000000	nop; not filled.
  125  00001140  23bd0008	addi	r29,r29,#8
  126  00001144          	L17_LF0:
  127  00001144  23bdfff0	addi	r29,r29,#-16
  128  00001148  8c640004	lw	r4,4(r3)
  129  0000114c  afa40000	sw	(r29),r4
  130  00001150  20040000	addi	r4,r0,#0
  131  00001154  afa40004	sw	4(r29),r4
  132  00001158  2004000a	addi	r4,r0,#10
  133  0000115c  afa40008	sw	8(r29),r4
  134  00001160  0c000a94	jal	_dstrtol
  135  00001164  54000000	nop; not filled.
  136  00001168  8c640008	lw	r4,8(r3)
  137  0000116c  afa40000	sw	(r29),r4
  138  00001170  20040000	addi	r4,r0,#0
  139  00001174  afa40004	sw	4(r29),r4
  140  00001178  2004000a	addi	r4,r0,#10
  141  0000117c  afa40008	sw	8(r29),r4
  142  00001180  0c000a74	jal	_dstrtol
  143  00001184  54000000	nop; not filled.
  144  00001188  00011020	add	r2,r0,r1
  145  0000118c  afa20000	sw	(r29),r2
  146  00001190  0c000104	jal	_sem_signal
  147  00001194  54000000	nop; not filled.
  148  00001198  23bd0010	addi	r29,r29,#16
  149  0000119c  64210001	snei	r1,r1,#1
  150  000011a0  10200050	beqz	r1,L18_LF0
  151  000011a4  54000000	nop; not filled.
  152  000011a8  23bdfff8	addi	r29,r29,#-8
  153  000011ac  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  154  000011b0  24843048	addui	r4,r4,(LC2_LF0)&0xffff
  155  000011b4  afa40000	sw	(r29),r4
  156  000011b8  afa20004	sw	4(r29),r2
  157  000011bc  0c000084	jal	_Printf
  158  000011c0  54000000	nop; not filled.
  159  000011c4  8c630000	lw	r3,(r3)
  160  000011c8  afa30000	sw	(r29),r3
  161  000011cc  0c000074	jal	_Printf
  162  000011d0  54000000	nop; not filled.
  163  000011d4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  164  000011d8  24843074	addui	r4,r4,(LC3_LF0)&0xffff
  165  000011dc  afa40000	sw	(r29),r4
  166  000011e0  0c000060	jal	_Printf
  167  000011e4  54000000	nop; not filled.
  168  000011e8  0c000160	jal	_Exit
  169  000011ec  54000000	nop; not filled.
  170  000011f0  23bd0008	addi	r29,r29,#8
  171  000011f4          	L18_LF0:
  172  000011f4  0c000ef0	jal	_exit
  173  000011f8  54000000	nop
  174  000011fc          	.endproc _main
  175                      ;;;
  176                      ;;; Stub functions for DLX traps.
  177                      ;;;
  178                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  179                      ;;;
  180                      ;;; The traps such as Open and Close
  181                      ;;; (note the capital letters) are for use by user programs.  The traps
  182                      ;;; with names such as open and close (lower case) are for use by the OS.
  183                      ;;;
  186  000011fc          	.align 2
  188                      ;;; The following are the traps to be used by user-level programs
  189                      ;;;
  191  000011fc          	.align 2
  192  000011fc          	.proc _Open
  193  000011fc          	.global _Open
  194  000011fc          	_Open:
  195                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  196                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  197                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  198  000011fc  44000213	trap	#0x213
  199  00001200  4be00000	jr	r31
  200  00001204  54000000	nop
  201  00001208          	.endproc _Open
  203  00001208          	.proc _Close
  204  00001208          	.global _Close
  205  00001208          	_Close:
  206  00001208  44000214	trap	#0x214
  207  0000120c  4be00000	jr	r31
  208  00001210  54000000	nop
  209  00001214          	.endproc _Close
  211  00001214          	.proc _Read
  212  00001214          	.global _Read
  213  00001214          	_Read:
  214  00001214  44000210	trap	#0x210
  215  00001218  4be00000	jr	r31
  216  0000121c  54000000	nop
  217  00001220          	.endproc _Read
  219  00001220          	.proc _Write
  220  00001220          	.global _Write
  221  00001220          	_Write:
  222  00001220  44000211	trap	#0x211
  223  00001224  4be00000	jr	r31
  224  00001228  54000000	nop
  225  0000122c          	.endproc _Write
  227  0000122c          	.proc _Lseek
  228  0000122c          	.global _Lseek
  229  0000122c          	_Lseek:
  230  0000122c  44000212	trap	#0x212
  231  00001230  4be00000	jr	r31
  232  00001234  54000000	nop
  233  00001238          	.endproc _Lseek
  235  00001238          	.proc _Putchar
  236  00001238          	.global _Putchar
  237  00001238          	_Putchar:
  238  00001238  44000280	trap	#0x280
  239  0000123c  4be00000	jr	r31
  240  00001240  54000000	nop
  241  00001244          	.endproc _Putchar
  243  00001244          	.proc _Printf
  244  00001244          	.global _Printf
  245  00001244          	_Printf:
  246  00001244  44000201	trap	#0x201
  247  00001248  4be00000	jr	r31
  248  0000124c  54000000	nop
  249  00001250          	.endproc _Printf
  251  00001250          	.proc _getpid
  252  00001250          	.global _getpid
  253  00001250          	_getpid:
  254  00001250  44000431	trap	#0x431
  255  00001254  4be00000	jr	r31
  256  00001258  54000000	nop
  257  0000125c          	.endproc _getpid
  259  0000125c          	.proc _process_create
  260  0000125c          	.global _process_create
  261  0000125c          	_process_create:
  262  0000125c  44000432	trap	#0x432
  263  00001260  4be00000	jr	r31
  264  00001264  54000000	nop
  265  00001268          	.endproc _process_create
  267  00001268          	.proc _shmget
  268  00001268          	.global _shmget
  269  00001268          	_shmget:
  270  00001268  44000440	trap	#0x440
  271  0000126c  4be00000	jr	r31
  272  00001270  54000000	nop
  273  00001274          	.endproc _shmget
  275  00001274          	.proc _shmat
  276  00001274          	.global _shmat
  277  00001274          	_shmat:
  278  00001274  44000441	trap	#0x441
  279  00001278  4be00000	jr	r31
  280  0000127c  54000000	nop
  281  00001280          	.endproc _shmat
  283  00001280          	.proc _sem_create
  284  00001280          	.global _sem_create
  285  00001280          	_sem_create:
  286  00001280  44000450	trap	#0x450
  287  00001284  4be00000	jr	r31
  288  00001288  54000000	nop
  289  0000128c          	.endproc _sem_create
  291  0000128c          	.proc _sem_wait
  292  0000128c          	.global _sem_wait
  293  0000128c          	_sem_wait:
  294  0000128c  44000451	trap	#0x451
  295  00001290  4be00000	jr	r31
  296  00001294  54000000	nop
  297  00001298          	.endproc _sem_wait
  299  00001298          	.proc _sem_signal
  300  00001298          	.global _sem_signal
  301  00001298          	_sem_signal:
  302  00001298  44000452	trap	#0x452
  303  0000129c  4be00000	jr	r31
  304  000012a0  54000000	nop
  305  000012a4          	.endproc _sem_signal
  307  000012a4          	.proc _lock_create
  308  000012a4          	.global _lock_create
  309  000012a4          	_lock_create:
  310  000012a4  44000453	trap	#0x453
  311  000012a8  4be00000	jr	r31
  312  000012ac  54000000	nop
  313  000012b0          	.endproc _lock_create
  315  000012b0          	.proc _lock_acquire
  316  000012b0          	.global _lock_acquire
  317  000012b0          	_lock_acquire:
  318  000012b0  44000454	trap	#0x454
  319  000012b4  4be00000	jr	r31
  320  000012b8  54000000	nop
  321  000012bc          	.endproc _lock_acquire
  323  000012bc          	.proc _lock_release
  324  000012bc          	.global _lock_release
  325  000012bc          	_lock_release:
  326  000012bc  44000455	trap	#0x455
  327  000012c0  4be00000	jr	r31
  328  000012c4  54000000	nop
  329  000012c8          	.endproc _lock_release
  331  000012c8          	.proc _cond_create
  332  000012c8          	.global _cond_create
  333  000012c8          	_cond_create:
  334  000012c8  44000456	trap	#0x456
  335  000012cc  4be00000	jr	r31
  336  000012d0  54000000	nop
  337  000012d4          	.endproc _cond_create
  339  000012d4          	.proc _cond_wait
  340  000012d4          	.global _cond_wait
  341  000012d4          	_cond_wait:
  342  000012d4  44000457	trap	#0x457
  343  000012d8  4be00000	jr	r31
  344  000012dc  54000000	nop
  345  000012e0          	.endproc _cond_wait
  347  000012e0          	.proc _cond_signal
  348  000012e0          	.global _cond_signal
  349  000012e0          	_cond_signal:
  350  000012e0  44000458	trap	#0x458
  351  000012e4  4be00000	jr	r31
  352  000012e8  54000000	nop
  353  000012ec          	.endproc _cond_signal
  355  000012ec          	.proc _cond_broadcast
  356  000012ec          	.global _cond_broadcast
  357  000012ec          	_cond_broadcast:
  358  000012ec  44000459	trap	#0x459
  359  000012f0  4be00000	jr	r31
  360  000012f4  54000000	nop
  361  000012f8          	.endproc _cond_broadcast
  363  000012f8          	.proc _mbox_create
  364  000012f8          	.global _mbox_create
  365  000012f8          	_mbox_create:
  366  000012f8  44000460	trap	#0x460
  367  000012fc  4be00000	jr	r31
  368  00001300  54000000	nop
  369  00001304          	.endproc _mbox_create
  371  00001304          	.proc _mbox_open
  372  00001304          	.global _mbox_open
  373  00001304          	_mbox_open:
  374  00001304  44000461	trap	#0x461
  375  00001308  4be00000	jr	r31
  376  0000130c  54000000	nop
  377  00001310          	.endproc _mbox_open
  379  00001310          	.proc _mbox_close
  380  00001310          	.global _mbox_close
  381  00001310          	_mbox_close:
  382  00001310  44000462	trap	#0x462
  383  00001314  4be00000	jr	r31
  384  00001318  54000000	nop
  385  0000131c          	.endproc _mbox_close
  387  0000131c          	.proc _mbox_send
  388  0000131c          	.global _mbox_send
  389  0000131c          	_mbox_send:
  390  0000131c  44000463	trap	#0x463
  391  00001320  4be00000	jr	r31
  392  00001324  54000000	nop
  393  00001328          	.endproc _mbox_send
  395  00001328          	.proc _mbox_recv
  396  00001328          	.global _mbox_recv
  397  00001328          	_mbox_recv:
  398  00001328  44000464	trap	#0x464
  399  0000132c  4be00000	jr	r31
  400  00001330  54000000	nop
  401  00001334          	.endproc _mbox_recv
  403  00001334          	.proc _sleep
  404  00001334          	.global _sleep
  405  00001334          	_sleep:
  406  00001334  44000465	trap	#0x465
  407  00001338  4be00000	jr	r31
  408  0000133c  54000000	nop
  409  00001340          	.endproc _sleep
  411  00001340          	.proc _yield
  412  00001340          	.global _yield
  413  00001340          	_yield:
  414  00001340  44000466	trap	#0x466
  415  00001344  4be00000	jr	r31
  416  00001348  54000000	nop
  417  0000134c          	.endproc _yield
  420  0000134c          	.proc _Exit
  421  0000134c          	.global _Exit
  422  0000134c          	_Exit:
  423  0000134c  44000500	trap	#0x500
  424  00001350  4be00000	jr	r31
  425  00001354  54000000	nop
  426  00001358          	.endproc _Exit
  427                      ; Compiled by GCC
  429  00001358          	.align 2
  430  00001358          	.proc _isspace
  431  00001358          	.global _isspace
  432  00001358          	_isspace:
  433                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  434  00001358  afbefffc	sw	-4(r29),r30; push fp
  435  0000135c  001df020	add	r30,r0,r29; fp = sp
  436  00001360  afbffff8	sw	-8(r29),r31; push ret addr
  437  00001364  2fbd0018	subui	r29,r29,#24; alloc local storage
  438  00001368  afa20000	sw	0(r29),r2
  439  0000136c  afa30004	sw	4(r29),r3
  440  00001370  afa40008	sw	8(r29),r4
  441  00001374  83c20003	lb	r2,3(r30)
  442  00001378  20010000	addi	r1,r0,#0
  443  0000137c  304300ff	andi	r3,r2,#0x00ff
  444  00001380  60640020	seqi	r4,r3,#32
  445  00001384  1480002c	bnez	r4,L3_LF2
  446  00001388  54000000	nop; delay slot nop
  447  0000138c  304300ff	andi	r3,r2,#0x00ff
  448  00001390  60640009	seqi	r4,r3,#9
  449  00001394  1480001c	bnez	r4,L3_LF2
  450  00001398  54000000	nop; delay slot nop
  451  0000139c  304300ff	andi	r3,r2,#0x00ff
  452  000013a0  6064000a	seqi	r4,r3,#10
  453  000013a4  1480000c	bnez	r4,L3_LF2
  454  000013a8  54000000	nop; delay slot nop
  455  000013ac  08000008	j	L2_LF2
  456  000013b0  54000000	nop; delay slot nop
  457  000013b4          	L3_LF2:
  458  000013b4  20010001	addi	r1,r0,#1
  459  000013b8          	L2_LF2:
  460  000013b8  08000004	j	L1_LF2
  461  000013bc  54000000	nop; delay slot nop
  462  000013c0          	L1_LF2:
  463  000013c0  8fa20000	lw	r2,0(r29)
  464  000013c4  8fa30004	lw	r3,4(r29)
  465  000013c8  8fa40008	lw	r4,8(r29)
  466  000013cc  8fdffff8	lw	r31,-8(r30)
  467  000013d0  001ee820	add	r29,r0,r30
  468  000013d4  8fdefffc	lw	r30,-4(r30)
  469  000013d8  4be00000	jr	r31
  470  000013dc  54000000	nop
  471  000013e0          	.endproc _isspace
  472  000013e0          	.align 2
  473  000013e0          	.proc _isxdigit
  474  000013e0          	.global _isxdigit
  475  000013e0          	_isxdigit:
  476                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  477  000013e0  afbefffc	sw	-4(r29),r30; push fp
  478  000013e4  001df020	add	r30,r0,r29; fp = sp
  479  000013e8  afbffff8	sw	-8(r29),r31; push ret addr
  480  000013ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  481  000013f0  afa20000	sw	0(r29),r2
  482  000013f4  afa30004	sw	4(r29),r3
  483  000013f8  afa40008	sw	8(r29),r4
  484  000013fc  83c20003	lb	r2,3(r30)
  485  00001400  20010000	addi	r1,r0,#0
  486  00001404  304300ff	andi	r3,r2,#0x00ff
  487  00001408  6c64002f	sgtui	r4,r3,#47
  488  0000140c  1080001c	beqz	r4,L7_LF2
  489  00001410  54000000	nop; delay slot nop
  490  00001414  304300ff	andi	r3,r2,#0x00ff
  491  00001418  70640039	sleui	r4,r3,#57
  492  0000141c  1480005c	bnez	r4,L6_LF2
  493  00001420  54000000	nop; delay slot nop
  494  00001424  08000004	j	L7_LF2
  495  00001428  54000000	nop; delay slot nop
  496  0000142c          	L7_LF2:
  497  0000142c  304300ff	andi	r3,r2,#0x00ff
  498  00001430  6c640060	sgtui	r4,r3,#96
  499  00001434  1080001c	beqz	r4,L8_LF2
  500  00001438  54000000	nop; delay slot nop
  501  0000143c  304300ff	andi	r3,r2,#0x00ff
  502  00001440  70640066	sleui	r4,r3,#102
  503  00001444  14800034	bnez	r4,L6_LF2
  504  00001448  54000000	nop; delay slot nop
  505  0000144c  08000004	j	L8_LF2
  506  00001450  54000000	nop; delay slot nop
  507  00001454          	L8_LF2:
  508  00001454  304300ff	andi	r3,r2,#0x00ff
  509  00001458  6c640040	sgtui	r4,r3,#64
  510  0000145c  10800020	beqz	r4,L5_LF2
  511  00001460  54000000	nop; delay slot nop
  512  00001464  304300ff	andi	r3,r2,#0x00ff
  513  00001468  70640041	sleui	r4,r3,#65
  514  0000146c  1480000c	bnez	r4,L6_LF2
  515  00001470  54000000	nop; delay slot nop
  516  00001474  08000008	j	L5_LF2
  517  00001478  54000000	nop; delay slot nop
  518  0000147c          	L6_LF2:
  519  0000147c  20010001	addi	r1,r0,#1
  520  00001480          	L5_LF2:
  521  00001480  08000004	j	L4_LF2
  522  00001484  54000000	nop; delay slot nop
  523  00001488          	L4_LF2:
  524  00001488  8fa20000	lw	r2,0(r29)
  525  0000148c  8fa30004	lw	r3,4(r29)
  526  00001490  8fa40008	lw	r4,8(r29)
  527  00001494  8fdffff8	lw	r31,-8(r30)
  528  00001498  001ee820	add	r29,r0,r30
  529  0000149c  8fdefffc	lw	r30,-4(r30)
  530  000014a0  4be00000	jr	r31
  531  000014a4  54000000	nop
  532  000014a8          	.endproc _isxdigit
  533  000014a8          	.align 2
  534  000014a8          	.proc _dstrcpy
  535  000014a8          	.global _dstrcpy
  536  000014a8          	_dstrcpy:
  537                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  538  000014a8  afbefffc	sw	-4(r29),r30; push fp
  539  000014ac  001df020	add	r30,r0,r29; fp = sp
  540  000014b0  afbffff8	sw	-8(r29),r31; push ret addr
  541  000014b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  542  000014b8  afa20000	sw	0(r29),r2
  543  000014bc  afa30004	sw	4(r29),r3
  544  000014c0  8fc10000	lw	r1,(r30)
  545  000014c4  afc1fff4	sw	-12(r30),r1
  546  000014c8          	L10_LF2:
  547  000014c8  8fc10000	lw	r1,(r30)
  548  000014cc  20220001	addi	r2,r1,#1
  549  000014d0  afc20000	sw	(r30),r2
  550  000014d4  8fc20004	lw	r2,4(r30)
  551  000014d8  20430001	addi	r3,r2,#1
  552  000014dc  afc30004	sw	4(r30),r3
  553  000014e0  80420000	lb	r2,(r2)
  554  000014e4  a0220000	sb	(r1),r2
  555  000014e8  a3c2fff3	sb	-13(r30),r2
  556  000014ec          	L12_LF2:
  557  000014ec  93c1fff3	lbu	r1,-13(r30)
  558  000014f0  64220000	snei	r2,r1,#0
  559  000014f4  1440000c	bnez	r2,L13_LF2
  560  000014f8  54000000	nop; delay slot nop
  561  000014fc  0800000c	j	L11_LF2
  562  00001500  54000000	nop; delay slot nop
  563  00001504          	L13_LF2:
  564  00001504  0bffffc0	j	L10_LF2
  565  00001508  54000000	nop; delay slot nop
  566  0000150c          	L11_LF2:
  567  0000150c  8fc1fff4	lw	r1,-12(r30)
  568  00001510  08000004	j	L9_LF2
  569  00001514  54000000	nop; delay slot nop
  570  00001518          	L9_LF2:
  571  00001518  8fa20000	lw	r2,0(r29)
  572  0000151c  8fa30004	lw	r3,4(r29)
  573  00001520  8fdffff8	lw	r31,-8(r30)
  574  00001524  001ee820	add	r29,r0,r30
  575  00001528  8fdefffc	lw	r30,-4(r30)
  576  0000152c  4be00000	jr	r31
  577  00001530  54000000	nop
  578  00001534          	.endproc _dstrcpy
  579  00001534          	.align 2
  580  00001534          	.proc _dstrncpy
  581  00001534          	.global _dstrncpy
  582  00001534          	_dstrncpy:
  583                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  584  00001534  afbefffc	sw	-4(r29),r30; push fp
  585  00001538  001df020	add	r30,r0,r29; fp = sp
  586  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  587  00001540  2fbd0018	subui	r29,r29,#24; alloc local storage
  588  00001544  afa20000	sw	0(r29),r2
  589  00001548  afa30004	sw	4(r29),r3
  590  0000154c  8fc10000	lw	r1,(r30)
  591  00001550  afc1fff4	sw	-12(r30),r1
  592  00001554          	L15_LF2:
  593  00001554  8fc10008	lw	r1,8(r30)
  594  00001558  2022ffff	addi	r2,r1,#-1
  595  0000155c  afc20008	sw	8(r30),r2
  596  00001560  70210000	slei	r1,r1,#0
  597  00001564  1020000c	beqz	r1,L18_LF2
  598  00001568  54000000	nop; delay slot nop
  599  0000156c  08000048	j	L16_LF2
  600  00001570  54000000	nop; delay slot nop
  601  00001574          	L18_LF2:
  602  00001574  8fc10000	lw	r1,(r30)
  603  00001578  20220001	addi	r2,r1,#1
  604  0000157c  afc20000	sw	(r30),r2
  605  00001580  8fc20004	lw	r2,4(r30)
  606  00001584  20430001	addi	r3,r2,#1
  607  00001588  afc30004	sw	4(r30),r3
  608  0000158c  80420000	lb	r2,(r2)
  609  00001590  a0220000	sb	(r1),r2
  610  00001594  a3c2fff3	sb	-13(r30),r2
  611  00001598          	L17_LF2:
  612  00001598  93c1fff3	lbu	r1,-13(r30)
  613  0000159c  64220000	snei	r2,r1,#0
  614  000015a0  1440000c	bnez	r2,L19_LF2
  615  000015a4  54000000	nop; delay slot nop
  616  000015a8  0800000c	j	L16_LF2
  617  000015ac  54000000	nop; delay slot nop
  618  000015b0          	L19_LF2:
  619  000015b0  0bffffa0	j	L15_LF2
  620  000015b4  54000000	nop; delay slot nop
  621  000015b8          	L16_LF2:
  622  000015b8  8fc1fff4	lw	r1,-12(r30)
  623  000015bc  08000004	j	L14_LF2
  624  000015c0  54000000	nop; delay slot nop
  625  000015c4          	L14_LF2:
  626  000015c4  8fa20000	lw	r2,0(r29)
  627  000015c8  8fa30004	lw	r3,4(r29)
  628  000015cc  8fdffff8	lw	r31,-8(r30)
  629  000015d0  001ee820	add	r29,r0,r30
  630  000015d4  8fdefffc	lw	r30,-4(r30)
  631  000015d8  4be00000	jr	r31
  632  000015dc  54000000	nop
  633  000015e0          	.endproc _dstrncpy
  634  000015e0          	.align 2
  635  000015e0          	.proc _dstrcat
  636  000015e0          	.global _dstrcat
  637  000015e0          	_dstrcat:
  638                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  639  000015e0  afbefffc	sw	-4(r29),r30; push fp
  640  000015e4  001df020	add	r30,r0,r29; fp = sp
  641  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  642  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  643  000015f0  afa20000	sw	0(r29),r2
  644  000015f4  8fc10000	lw	r1,(r30)
  645  000015f8  afc1fff4	sw	-12(r30),r1
  646  000015fc          	L21_LF2:
  647  000015fc  8fc10000	lw	r1,(r30)
  648  00001600  90220000	lbu	r2,(r1)
  649  00001604  64410000	snei	r1,r2,#0
  650  00001608  1420000c	bnez	r1,L23_LF2
  651  0000160c  54000000	nop; delay slot nop
  652  00001610  0800001c	j	L22_LF2
  653  00001614  54000000	nop; delay slot nop
  654  00001618          	L23_LF2:
  655  00001618  8fc20000	lw	r2,(r30)
  656  0000161c  20410001	addi	r1,r2,#1
  657  00001620  00011020	add	r2,r0,r1
  658  00001624  afc20000	sw	(r30),r2
  659  00001628  0bffffd0	j	L21_LF2
  660  0000162c  54000000	nop; delay slot nop
  661  00001630          	L22_LF2:
  662  00001630  23bdfff8	addi	r29,r29,#-8
  663  00001634  001d0820	add	r1,r0,r29
  664  00001638  8fc20000	lw	r2,(r30)
  665  0000163c  ac220000	sw	(r1),r2
  666  00001640  8fc20004	lw	r2,4(r30)
  667  00001644  ac220004	sw	4(r1),r2
  668  00001648  0ffffe5c	jal	_dstrcpy
  669  0000164c  54000000	nop; delay slot nop
  670  00001650  23bd0008	addi	r29,r29,#8
  671  00001654  8fc1fff4	lw	r1,-12(r30)
  672  00001658  08000004	j	L20_LF2
  673  0000165c  54000000	nop; delay slot nop
  674  00001660          	L20_LF2:
  675  00001660  8fa20000	lw	r2,0(r29)
  676  00001664  8fdffff8	lw	r31,-8(r30)
  677  00001668  001ee820	add	r29,r0,r30
  678  0000166c  8fdefffc	lw	r30,-4(r30)
  679  00001670  4be00000	jr	r31
  680  00001674  54000000	nop
  681  00001678          	.endproc _dstrcat
  682  00001678          	.align 2
  683  00001678          	.proc _dstrncmp
  684  00001678          	.global _dstrncmp
  685  00001678          	_dstrncmp:
  686                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  687  00001678  afbefffc	sw	-4(r29),r30; push fp
  688  0000167c  001df020	add	r30,r0,r29; fp = sp
  689  00001680  afbffff8	sw	-8(r29),r31; push ret addr
  690  00001684  2fbd0018	subui	r29,r29,#24; alloc local storage
  691  00001688  afa20000	sw	0(r29),r2
  692  0000168c  afa30004	sw	4(r29),r3
  693  00001690  54000000	nop
  694  00001694  20010000	addi	r1,r0,#0
  695  00001698  afc1fff4	sw	-12(r30),r1
  696  0000169c          	L25_LF2:
  697  0000169c  8fc1fff4	lw	r1,-12(r30)
  698  000016a0  8fc20008	lw	r2,8(r30)
  699  000016a4  0022082a	slt	r1,r1,r2
  700  000016a8  1420000c	bnez	r1,L28_LF2
  701  000016ac  54000000	nop; delay slot nop
  702  000016b0  08000088	j	L26_LF2
  703  000016b4  54000000	nop; delay slot nop
  704  000016b8          	L28_LF2:
  705  000016b8  8fc10004	lw	r1,4(r30)
  706  000016bc  90220000	lbu	r2,(r1)
  707  000016c0  64410000	snei	r1,r2,#0
  708  000016c4  14200018	bnez	r1,L29_LF2
  709  000016c8  54000000	nop; delay slot nop
  710  000016cc  20010000	addi	r1,r0,#0
  711  000016d0  080000d8	j	L24_LF2
  712  000016d4  54000000	nop; delay slot nop
  713  000016d8  08000028	j	L30_LF2
  714  000016dc  54000000	nop; delay slot nop
  715  000016e0          	L29_LF2:
  716  000016e0  8fc10000	lw	r1,(r30)
  717  000016e4  8fc20004	lw	r2,4(r30)
  718  000016e8  90210000	lbu	r1,(r1)
  719  000016ec  90420000	lbu	r2,(r2)
  720  000016f0  00220829	sne	r1,r1,r2
  721  000016f4  1020000c	beqz	r1,L30_LF2
  722  000016f8  54000000	nop; delay slot nop
  723  000016fc  0800003c	j	L26_LF2
  724  00001700  54000000	nop; delay slot nop
  725  00001704          	L31_LF2:
  726  00001704          	L30_LF2:
  727  00001704  8fc20000	lw	r2,(r30)
  728  00001708  20410001	addi	r1,r2,#1
  729  0000170c  00011020	add	r2,r0,r1
  730  00001710  afc20000	sw	(r30),r2
  731  00001714  8fc20004	lw	r2,4(r30)
  732  00001718  20410001	addi	r1,r2,#1
  733  0000171c  00011020	add	r2,r0,r1
  734  00001720  afc20004	sw	4(r30),r2
  735  00001724          	L27_LF2:
  736  00001724  8fc2fff4	lw	r2,-12(r30)
  737  00001728  20410001	addi	r1,r2,#1
  738  0000172c  00011020	add	r2,r0,r1
  739  00001730  afc2fff4	sw	-12(r30),r2
  740  00001734  0bffff64	j	L25_LF2
  741  00001738  54000000	nop; delay slot nop
  742  0000173c          	L26_LF2:
  743  0000173c  8fc1fff4	lw	r1,-12(r30)
  744  00001740  8fc20008	lw	r2,8(r30)
  745  00001744  00220828	seq	r1,r1,r2
  746  00001748  10200018	beqz	r1,L32_LF2
  747  0000174c  54000000	nop; delay slot nop
  748  00001750  20010000	addi	r1,r0,#0
  749  00001754  08000054	j	L24_LF2
  750  00001758  54000000	nop; delay slot nop
  751  0000175c  0800004c	j	L33_LF2
  752  00001760  54000000	nop; delay slot nop
  753  00001764          	L32_LF2:
  754  00001764  8fc20000	lw	r2,(r30)
  755  00001768  90410000	lbu	r1,(r2)
  756  0000176c  8fc20004	lw	r2,4(r30)
  757  00001770  90430000	lbu	r3,(r2)
  758  00001774  00230822	sub	r1,r1,r3
  759  00001778  74220000	sgei	r2,r1,#0
  760  0000177c  10400020	beqz	r2,L34_LF2
  761  00001780  54000000	nop; delay slot nop
  762  00001784  8fc10000	lw	r1,(r30)
  763  00001788  8fc20004	lw	r2,4(r30)
  764  0000178c  90210000	lbu	r1,(r1)
  765  00001790  90420000	lbu	r2,(r2)
  766  00001794  00220829	sne	r1,r1,r2
  767  00001798  08000008	j	L35_LF2
  768  0000179c  54000000	nop; delay slot nop
  769  000017a0          	L34_LF2:
  770  000017a0  2001ffff	addi	r1,r0,#-1
  771  000017a4          	L35_LF2:
  772  000017a4  08000004	j	L24_LF2
  773  000017a8  54000000	nop; delay slot nop
  774  000017ac          	L33_LF2:
  775  000017ac          	L24_LF2:
  776  000017ac  8fa20000	lw	r2,0(r29)
  777  000017b0  8fa30004	lw	r3,4(r29)
  778  000017b4  8fdffff8	lw	r31,-8(r30)
  779  000017b8  001ee820	add	r29,r0,r30
  780  000017bc  8fdefffc	lw	r30,-4(r30)
  781  000017c0  4be00000	jr	r31
  782  000017c4  54000000	nop
  783  000017c8          	.endproc _dstrncmp
  784  000017c8          	.align 2
  785  000017c8          	.proc _dstrlen
  786  000017c8          	.global _dstrlen
  787  000017c8          	_dstrlen:
  788                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  789  000017c8  afbefffc	sw	-4(r29),r30; push fp
  790  000017cc  001df020	add	r30,r0,r29; fp = sp
  791  000017d0  afbffff8	sw	-8(r29),r31; push ret addr
  792  000017d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  793  000017d8  afa20000	sw	0(r29),r2
  794  000017dc  20010000	addi	r1,r0,#0
  795  000017e0  afc1fff4	sw	-12(r30),r1
  796  000017e4          	L37_LF2:
  797  000017e4  8fc10000	lw	r1,(r30)
  798  000017e8  20220001	addi	r2,r1,#1
  799  000017ec  afc20000	sw	(r30),r2
  800  000017f0  90210000	lbu	r1,(r1)
  801  000017f4  64220000	snei	r2,r1,#0
  802  000017f8  1440000c	bnez	r2,L39_LF2
  803  000017fc  54000000	nop; delay slot nop
  804  00001800  0800001c	j	L38_LF2
  805  00001804  54000000	nop; delay slot nop
  806  00001808          	L39_LF2:
  807  00001808  8fc2fff4	lw	r2,-12(r30)
  808  0000180c  20410001	addi	r1,r2,#1
  809  00001810  00011020	add	r2,r0,r1
  810  00001814  afc2fff4	sw	-12(r30),r2
  811  00001818  0bffffc8	j	L37_LF2
  812  0000181c  54000000	nop; delay slot nop
  813  00001820          	L38_LF2:
  814  00001820  8fc1fff4	lw	r1,-12(r30)
  815  00001824  08000004	j	L36_LF2
  816  00001828  54000000	nop; delay slot nop
  817  0000182c          	L36_LF2:
  818  0000182c  8fa20000	lw	r2,0(r29)
  819  00001830  8fdffff8	lw	r31,-8(r30)
  820  00001834  001ee820	add	r29,r0,r30
  821  00001838  8fdefffc	lw	r30,-4(r30)
  822  0000183c  4be00000	jr	r31
  823  00001840  54000000	nop
  824  00001844          	.endproc _dstrlen
  825  00001844          	.align 2
  826  00001844          	.proc _dstrstr
  827  00001844          	.global _dstrstr
  828  00001844          	_dstrstr:
  829                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  830  00001844  afbefffc	sw	-4(r29),r30; push fp
  831  00001848  001df020	add	r30,r0,r29; fp = sp
  832  0000184c  afbffff8	sw	-8(r29),r31; push ret addr
  833  00001850  2fbd0018	subui	r29,r29,#24; alloc local storage
  834  00001854  afa20000	sw	0(r29),r2
  835  00001858  23bdfff8	addi	r29,r29,#-8
  836  0000185c  001d0820	add	r1,r0,r29
  837  00001860  8fc20004	lw	r2,4(r30)
  838  00001864  ac220000	sw	(r1),r2
  839  00001868  0fffff5c	jal	_dstrlen
  840  0000186c  54000000	nop; delay slot nop
  841  00001870  23bd0008	addi	r29,r29,#8
  842  00001874  afc1fff4	sw	-12(r30),r1
  843  00001878          	L41_LF2:
  844  00001878  8fc10000	lw	r1,(r30)
  845  0000187c  90220000	lbu	r2,(r1)
  846  00001880  64410000	snei	r1,r2,#0
  847  00001884  1420000c	bnez	r1,L43_LF2
  848  00001888  54000000	nop; delay slot nop
  849  0000188c  08000060	j	L42_LF2
  850  00001890  54000000	nop; delay slot nop
  851  00001894          	L43_LF2:
  852  00001894  23bdfff0	addi	r29,r29,#-16
  853  00001898  001d0820	add	r1,r0,r29
  854  0000189c  8fc20000	lw	r2,(r30)
  855  000018a0  ac220000	sw	(r1),r2
  856  000018a4  8fc20004	lw	r2,4(r30)
  857  000018a8  ac220004	sw	4(r1),r2
  858  000018ac  8fc2fff4	lw	r2,-12(r30)
  859  000018b0  ac220008	sw	8(r1),r2
  860  000018b4  0ffffdc0	jal	_dstrncmp
  861  000018b8  54000000	nop; delay slot nop
  862  000018bc  23bd0010	addi	r29,r29,#16
  863  000018c0  64220000	snei	r2,r1,#0
  864  000018c4  14400010	bnez	r2,L44_LF2
  865  000018c8  54000000	nop; delay slot nop
  866  000018cc  8fc10000	lw	r1,(r30)
  867  000018d0  08000028	j	L40_LF2
  868  000018d4  54000000	nop; delay slot nop
  869  000018d8          	L44_LF2:
  870  000018d8  8fc20000	lw	r2,(r30)
  871  000018dc  20410001	addi	r1,r2,#1
  872  000018e0  00011020	add	r2,r0,r1
  873  000018e4  afc20000	sw	(r30),r2
  874  000018e8  0bffff8c	j	L41_LF2
  875  000018ec  54000000	nop; delay slot nop
  876  000018f0          	L42_LF2:
  877  000018f0  20010000	addi	r1,r0,#0
  878  000018f4  08000004	j	L40_LF2
  879  000018f8  54000000	nop; delay slot nop
  880  000018fc          	L40_LF2:
  881  000018fc  8fa20000	lw	r2,0(r29)
  882  00001900  8fdffff8	lw	r31,-8(r30)
  883  00001904  001ee820	add	r29,r0,r30
  884  00001908  8fdefffc	lw	r30,-4(r30)
  885  0000190c  4be00000	jr	r31
  886  00001910  54000000	nop
  887  00001914          	.endproc _dstrstr
  888  00001914          	.align 2
  889  00001914          	.proc _dmindex
  890  00001914          	.global _dmindex
  891  00001914          	_dmindex:
  892                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  893  00001914  afbefffc	sw	-4(r29),r30; push fp
  894  00001918  001df020	add	r30,r0,r29; fp = sp
  895  0000191c  afbffff8	sw	-8(r29),r31; push ret addr
  896  00001920  2fbd0018	subui	r29,r29,#24; alloc local storage
  897  00001924  afa20000	sw	0(r29),r2
  898  00001928  54000000	nop
  899  0000192c          	L46_LF2:
  900  0000192c  8fc10000	lw	r1,(r30)
  901  00001930  90220000	lbu	r2,(r1)
  902  00001934  64410000	snei	r1,r2,#0
  903  00001938  1420000c	bnez	r1,L48_LF2
  904  0000193c  54000000	nop; delay slot nop
  905  00001940  08000070	j	L47_LF2
  906  00001944  54000000	nop; delay slot nop
  907  00001948          	L48_LF2:
  908  00001948  8fc10004	lw	r1,4(r30)
  909  0000194c  afc1fff4	sw	-12(r30),r1
  910  00001950          	L49_LF2:
  911  00001950  8fc1fff4	lw	r1,-12(r30)
  912  00001954  90220000	lbu	r2,(r1)
  913  00001958  64410000	snei	r1,r2,#0
  914  0000195c  1420000c	bnez	r1,L52_LF2
  915  00001960  54000000	nop; delay slot nop
  916  00001964  08000044	j	L50_LF2
  917  00001968  54000000	nop; delay slot nop
  918  0000196c          	L52_LF2:
  919  0000196c  8fc10000	lw	r1,(r30)
  920  00001970  8fc2fff4	lw	r2,-12(r30)
  921  00001974  90210000	lbu	r1,(r1)
  922  00001978  90420000	lbu	r2,(r2)
  923  0000197c  00220828	seq	r1,r1,r2
  924  00001980  10200010	beqz	r1,L51_LF2
  925  00001984  54000000	nop; delay slot nop
  926  00001988  8fc10000	lw	r1,(r30)
  927  0000198c  08000030	j	L45_LF2
  928  00001990  54000000	nop; delay slot nop
  929  00001994          	L53_LF2:
  930  00001994          	L51_LF2:
  931  00001994  8fc2fff4	lw	r2,-12(r30)
  932  00001998  20410001	addi	r1,r2,#1
  933  0000199c  00011020	add	r2,r0,r1
  934  000019a0  afc2fff4	sw	-12(r30),r2
  935  000019a4  0bffffa8	j	L49_LF2
  936  000019a8  54000000	nop; delay slot nop
  937  000019ac          	L50_LF2:
  938  000019ac  0bffff7c	j	L46_LF2
  939  000019b0  54000000	nop; delay slot nop
  940  000019b4          	L47_LF2:
  941  000019b4  20010000	addi	r1,r0,#0
  942  000019b8  08000004	j	L45_LF2
  943  000019bc  54000000	nop; delay slot nop
  944  000019c0          	L45_LF2:
  945  000019c0  8fa20000	lw	r2,0(r29)
  946  000019c4  8fdffff8	lw	r31,-8(r30)
  947  000019c8  001ee820	add	r29,r0,r30
  948  000019cc  8fdefffc	lw	r30,-4(r30)
  949  000019d0  4be00000	jr	r31
  950  000019d4  54000000	nop
  951  000019d8          	.endproc _dmindex
  952  000019d8          	.align 2
  953  000019d8          	.proc _dindex
  954  000019d8          	.global _dindex
  955  000019d8          	_dindex:
  956                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  957  000019d8  afbefffc	sw	-4(r29),r30; push fp
  958  000019dc  001df020	add	r30,r0,r29; fp = sp
  959  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  960  000019e4  2fbd0010	subui	r29,r29,#16; alloc local storage
  961  000019e8  afa20000	sw	0(r29),r2
  962  000019ec  54000000	nop
  963  000019f0          	L55_LF2:
  964  000019f0  8fc10000	lw	r1,(r30)
  965  000019f4  90220000	lbu	r2,(r1)
  966  000019f8  64410000	snei	r1,r2,#0
  967  000019fc  1420000c	bnez	r1,L57_LF2
  968  00001a00  54000000	nop; delay slot nop
  969  00001a04  08000040	j	L56_LF2
  970  00001a08  54000000	nop; delay slot nop
  971  00001a0c          	L57_LF2:
  972  00001a0c  8fc10000	lw	r1,(r30)
  973  00001a10  90220000	lbu	r2,(r1)
  974  00001a14  8fc10004	lw	r1,4(r30)
  975  00001a18  00411028	seq	r2,r2,r1
  976  00001a1c  10400010	beqz	r2,L58_LF2
  977  00001a20  54000000	nop; delay slot nop
  978  00001a24  8fc10000	lw	r1,(r30)
  979  00001a28  08000028	j	L54_LF2
  980  00001a2c  54000000	nop; delay slot nop
  981  00001a30          	L58_LF2:
  982  00001a30  8fc20000	lw	r2,(r30)
  983  00001a34  20410001	addi	r1,r2,#1
  984  00001a38  00011020	add	r2,r0,r1
  985  00001a3c  afc20000	sw	(r30),r2
  986  00001a40  0bffffac	j	L55_LF2
  987  00001a44  54000000	nop; delay slot nop
  988  00001a48          	L56_LF2:
  989  00001a48  20010000	addi	r1,r0,#0
  990  00001a4c  08000004	j	L54_LF2
  991  00001a50  54000000	nop; delay slot nop
  992  00001a54          	L54_LF2:
  993  00001a54  8fa20000	lw	r2,0(r29)
  994  00001a58  8fdffff8	lw	r31,-8(r30)
  995  00001a5c  001ee820	add	r29,r0,r30
  996  00001a60  8fdefffc	lw	r30,-4(r30)
  997  00001a64  4be00000	jr	r31
  998  00001a68  54000000	nop
  999  00001a6c          	.endproc _dindex
 1000  00001a6c          	.align 2
 1001  00001a6c          	.proc _ditoa
 1002  00001a6c          	.global _ditoa
 1003  00001a6c          	_ditoa:
 1004                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1005  00001a6c  afbefffc	sw	-4(r29),r30; push fp
 1006  00001a70  001df020	add	r30,r0,r29; fp = sp
 1007  00001a74  afbffff8	sw	-8(r29),r31; push ret addr
 1008  00001a78  2fbd0018	subui	r29,r29,#24; alloc local storage
 1009  00001a7c  afa20000	sw	0(r29),r2
 1010  00001a80  afa30004	sw	4(r29),r3
 1011  00001a84  8fc10000	lw	r1,(r30)
 1012  00001a88  68220000	slti	r2,r1,#0
 1013  00001a8c  1040002c	beqz	r2,L60_LF2
 1014  00001a90  54000000	nop; delay slot nop
 1015  00001a94  8fc10004	lw	r1,4(r30)
 1016  00001a98  20220001	addi	r2,r1,#1
 1017  00001a9c  afc20004	sw	4(r30),r2
 1018  00001aa0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1019  00001aa4  a0220000	sb	(r1),r2
 1020  00001aa8  8fc10000	lw	r1,(r30)
 1021  00001aac  00011022	sub	r2,r0,r1
 1022  00001ab0  afc20000	sw	(r30),r2
 1023  00001ab4  08000118	j	L61_LF2
 1024  00001ab8  54000000	nop; delay slot nop
 1025  00001abc          	L60_LF2:
 1026  00001abc  8fc10000	lw	r1,(r30)
 1027  00001ac0  64220000	snei	r2,r1,#0
 1028  00001ac4  14400020	bnez	r2,L62_LF2
 1029  00001ac8  54000000	nop; delay slot nop
 1030  00001acc  8fc10004	lw	r1,4(r30)
 1031  00001ad0  20220001	addi	r2,r1,#1
 1032  00001ad4  afc20004	sw	4(r30),r2
 1033  00001ad8  20020030	addi	r2,r0,(#0x30)&0xff
 1034  00001adc  a0220000	sb	(r1),r2
 1035  00001ae0  080000ec	j	L61_LF2
 1036  00001ae4  54000000	nop; delay slot nop
 1037  00001ae8          	L62_LF2:
 1038  00001ae8  20010001	addi	r1,r0,#1
 1039  00001aec  afc1fff4	sw	-12(r30),r1
 1040  00001af0          	L64_LF2:
 1041  00001af0  8fc1fff4	lw	r1,-12(r30)
 1042  00001af4  8fc20000	lw	r2,(r30)
 1043  00001af8  0022082c	sle	r1,r1,r2
 1044  00001afc  1420000c	bnez	r1,L66_LF2
 1045  00001b00  54000000	nop; delay slot nop
 1046  00001b04  08000024	j	L65_LF2
 1047  00001b08  54000000	nop; delay slot nop
 1048  00001b0c          	L67_LF2:
 1049  00001b0c          	L66_LF2:
 1050  00001b0c  8fc1fff4	lw	r1,-12(r30)
 1051  00001b10  00011820	add	r3,r0,r1
 1052  00001b14  50620002	slli	r2,r3,#0x2
 1053  00001b18  00411020	add	r2,r2,r1
 1054  00001b1c  50410001	slli	r1,r2,#0x1
 1055  00001b20  afc1fff4	sw	-12(r30),r1
 1056  00001b24  0bffffc8	j	L64_LF2
 1057  00001b28  54000000	nop; delay slot nop
 1058  00001b2c          	L65_LF2:
 1059  00001b2c  54000000	nop
 1060  00001b30          	L68_LF2:
 1061  00001b30  8fc1fff4	lw	r1,-12(r30)
 1062  00001b34  2002000a	addi	r2,r0,#10
 1063  00001b38  00200035	movi2fp	f0,r1
 1064  00001b3c  00400835	movi2fp	f1,r2
 1065  00001b40  0401000f	div	f0,f0,f1
 1066  00001b44  00000834	movfp2i	r1,f0
 1067  00001b48  afc1fff4	sw	-12(r30),r1
 1068  00001b4c  8fc10004	lw	r1,4(r30)
 1069  00001b50  20220001	addi	r2,r1,#1
 1070  00001b54  afc20004	sw	4(r30),r2
 1071  00001b58  8fc20000	lw	r2,(r30)
 1072  00001b5c  8fc3fff4	lw	r3,-12(r30)
 1073  00001b60  00400035	movi2fp	f0,r2
 1074  00001b64  00600835	movi2fp	f1,r3
 1075  00001b68  0401000f	div	f0,f0,f1
 1076  00001b6c  00001034	movfp2i	r2,f0
 1077  00001b70  00021820	add	r3,r0,r2
 1078  00001b74  20620030	addi	r2,r3,#48
 1079  00001b78  a0220000	sb	(r1),r2
 1080  00001b7c  8fc10000	lw	r1,(r30)
 1081  00001b80  8fc3fff4	lw	r3,-12(r30)
 1082  00001b84  00200035	movi2fp	f0,r1
 1083  00001b88  00600835	movi2fp	f1,r3
 1084  00001b8c  0401000f	div	f0,f0,f1
 1085  00001b90  00001034	movfp2i	r2,f0
 1086  00001b94  8fc3fff4	lw	r3,-12(r30)
 1087  00001b98  00400035	movi2fp	f0,r2
 1088  00001b9c  00600835	movi2fp	f1,r3
 1089  00001ba0  0401000e	mult	f0,f0,f1
 1090  00001ba4  00001034	movfp2i	r2,f0
 1091  00001ba8  00220822	sub	r1,r1,r2
 1092  00001bac  afc10000	sw	(r30),r1
 1093  00001bb0          	L70_LF2:
 1094  00001bb0  8fc1fff4	lw	r1,-12(r30)
 1095  00001bb4  6c220001	sgti	r2,r1,#1
 1096  00001bb8  1440000c	bnez	r2,L71_LF2
 1097  00001bbc  54000000	nop; delay slot nop
 1098  00001bc0  0800000c	j	L61_LF2
 1099  00001bc4  54000000	nop; delay slot nop
 1100  00001bc8          	L71_LF2:
 1101  00001bc8  0bffff64	j	L68_LF2
 1102  00001bcc  54000000	nop; delay slot nop
 1103  00001bd0          	L69_LF2:
 1104  00001bd0          	L63_LF2:
 1105  00001bd0          	L61_LF2:
 1106  00001bd0  8fc10004	lw	r1,4(r30)
 1107  00001bd4  20020000	addi	r2,r0,(#0x0)&0xff
 1108  00001bd8  a0220000	sb	(r1),r2
 1109  00001bdc          	L59_LF2:
 1110  00001bdc  8fa20000	lw	r2,0(r29)
 1111  00001be0  8fa30004	lw	r3,4(r29)
 1112  00001be4  8fdffff8	lw	r31,-8(r30)
 1113  00001be8  001ee820	add	r29,r0,r30
 1114  00001bec  8fdefffc	lw	r30,-4(r30)
 1115  00001bf0  4be00000	jr	r31
 1116  00001bf4  54000000	nop
 1117  00001bf8          	.endproc _ditoa
 1118  00001bf8          	.align 2
 1119  00001bf8          	.proc _dstrtol
 1120  00001bf8          	.global _dstrtol
 1121  00001bf8          	_dstrtol:
 1122                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1123  00001bf8  afbefffc	sw	-4(r29),r30; push fp
 1124  00001bfc  001df020	add	r30,r0,r29; fp = sp
 1125  00001c00  afbffff8	sw	-8(r29),r31; push ret addr
 1126  00001c04  2fbd0020	subui	r29,r29,#32; alloc local storage
 1127  00001c08  afa20000	sw	0(r29),r2
 1128  00001c0c  20010000	addi	r1,r0,#0
 1129  00001c10  afc1fff4	sw	-12(r30),r1
 1130  00001c14          	L73_LF2:
 1131  00001c14  8fc10000	lw	r1,(r30)
 1132  00001c18  90220000	lbu	r2,(r1)
 1133  00001c1c  60410020	seqi	r1,r2,#32
 1134  00001c20  14200034	bnez	r1,L75_LF2
 1135  00001c24  54000000	nop; delay slot nop
 1136  00001c28  8fc10000	lw	r1,(r30)
 1137  00001c2c  90220000	lbu	r2,(r1)
 1138  00001c30  60410009	seqi	r1,r2,#9
 1139  00001c34  14200020	bnez	r1,L75_LF2
 1140  00001c38  54000000	nop; delay slot nop
 1141  00001c3c  8fc10000	lw	r1,(r30)
 1142  00001c40  90220000	lbu	r2,(r1)
 1143  00001c44  6041000a	seqi	r1,r2,#10
 1144  00001c48  1420000c	bnez	r1,L75_LF2
 1145  00001c4c  54000000	nop; delay slot nop
 1146  00001c50  0800001c	j	L74_LF2
 1147  00001c54  54000000	nop; delay slot nop
 1148  00001c58          	L75_LF2:
 1149  00001c58  8fc20000	lw	r2,(r30)
 1150  00001c5c  20410001	addi	r1,r2,#1
 1151  00001c60  00011020	add	r2,r0,r1
 1152  00001c64  afc20000	sw	(r30),r2
 1153  00001c68  0bffffa8	j	L73_LF2
 1154  00001c6c  54000000	nop; delay slot nop
 1155  00001c70          	L74_LF2:
 1156  00001c70  8fc10004	lw	r1,4(r30)
 1157  00001c74  64220000	snei	r2,r1,#0
 1158  00001c78  10400010	beqz	r2,L76_LF2
 1159  00001c7c  54000000	nop; delay slot nop
 1160  00001c80  8fc10004	lw	r1,4(r30)
 1161  00001c84  8fc20000	lw	r2,(r30)
 1162  00001c88  ac220000	sw	(r1),r2
 1163  00001c8c          	L76_LF2:
 1164  00001c8c  8fc10000	lw	r1,(r30)
 1165  00001c90  90220000	lbu	r2,(r1)
 1166  00001c94  64410000	snei	r1,r2,#0
 1167  00001c98  14200010	bnez	r1,L77_LF2
 1168  00001c9c  54000000	nop; delay slot nop
 1169  00001ca0  8fc1fff4	lw	r1,-12(r30)
 1170  00001ca4  08000294	j	L72_LF2
 1171  00001ca8  54000000	nop; delay slot nop
 1172  00001cac          	L77_LF2:
 1173  00001cac  8fc10000	lw	r1,(r30)
 1174  00001cb0  90220000	lbu	r2,(r1)
 1175  00001cb4  6041002d	seqi	r1,r2,#45
 1176  00001cb8  10200024	beqz	r1,L78_LF2
 1177  00001cbc  54000000	nop; delay slot nop
 1178  00001cc0  2001ffff	addi	r1,r0,#-1
 1179  00001cc4  afc1ffec	sw	-20(r30),r1
 1180  00001cc8  8fc20000	lw	r2,(r30)
 1181  00001ccc  20410001	addi	r1,r2,#1
 1182  00001cd0  00011020	add	r2,r0,r1
 1183  00001cd4  afc20000	sw	(r30),r2
 1184  00001cd8  0800000c	j	L79_LF2
 1185  00001cdc  54000000	nop; delay slot nop
 1186  00001ce0          	L78_LF2:
 1187  00001ce0  20010001	addi	r1,r0,#1
 1188  00001ce4  afc1ffec	sw	-20(r30),r1
 1189  00001ce8          	L79_LF2:
 1190  00001ce8  8fc10008	lw	r1,8(r30)
 1191  00001cec  64220000	snei	r2,r1,#0
 1192  00001cf0  14400090	bnez	r2,L80_LF2
 1193  00001cf4  54000000	nop; delay slot nop
 1194  00001cf8  8fc10000	lw	r1,(r30)
 1195  00001cfc  90220000	lbu	r2,(r1)
 1196  00001d00  60410030	seqi	r1,r2,#48
 1197  00001d04  10200074	beqz	r1,L81_LF2
 1198  00001d08  54000000	nop; delay slot nop
 1199  00001d0c  8fc20000	lw	r2,(r30)
 1200  00001d10  20410001	addi	r1,r2,#1
 1201  00001d14  00011020	add	r2,r0,r1
 1202  00001d18  afc20000	sw	(r30),r2
 1203  00001d1c  8fc10000	lw	r1,(r30)
 1204  00001d20  90220000	lbu	r2,(r1)
 1205  00001d24  60410078	seqi	r1,r2,#120
 1206  00001d28  14200020	bnez	r1,L83_LF2
 1207  00001d2c  54000000	nop; delay slot nop
 1208  00001d30  8fc10000	lw	r1,(r30)
 1209  00001d34  90220000	lbu	r2,(r1)
 1210  00001d38  60410058	seqi	r1,r2,#88
 1211  00001d3c  1420000c	bnez	r1,L83_LF2
 1212  00001d40  54000000	nop; delay slot nop
 1213  00001d44  08000024	j	L82_LF2
 1214  00001d48  54000000	nop; delay slot nop
 1215  00001d4c          	L83_LF2:
 1216  00001d4c  20010010	addi	r1,r0,#16
 1217  00001d50  afc10008	sw	8(r30),r1
 1218  00001d54  8fc20000	lw	r2,(r30)
 1219  00001d58  20410001	addi	r1,r2,#1
 1220  00001d5c  00011020	add	r2,r0,r1
 1221  00001d60  afc20000	sw	(r30),r2
 1222  00001d64  0800000c	j	L84_LF2
 1223  00001d68  54000000	nop; delay slot nop
 1224  00001d6c          	L82_LF2:
 1225  00001d6c  20010008	addi	r1,r0,#8
 1226  00001d70  afc10008	sw	8(r30),r1
 1227  00001d74          	L84_LF2:
 1228  00001d74  0800000c	j	L80_LF2
 1229  00001d78  54000000	nop; delay slot nop
 1230  00001d7c          	L81_LF2:
 1231  00001d7c  2001000a	addi	r1,r0,#10
 1232  00001d80  afc10008	sw	8(r30),r1
 1233  00001d84          	L85_LF2:
 1234  00001d84          	L80_LF2:
 1235  00001d84  8fc10008	lw	r1,8(r30)
 1236  00001d88  70220000	slei	r2,r1,#0
 1237  00001d8c  1440001c	bnez	r2,L87_LF2
 1238  00001d90  54000000	nop; delay slot nop
 1239  00001d94  8fc10008	lw	r1,8(r30)
 1240  00001d98  6c220010	sgti	r2,r1,#16
 1241  00001d9c  1440000c	bnez	r2,L87_LF2
 1242  00001da0  54000000	nop; delay slot nop
 1243  00001da4  08000010	j	L86_LF2
 1244  00001da8  54000000	nop; delay slot nop
 1245  00001dac          	L87_LF2:
 1246  00001dac  8fc1fff4	lw	r1,-12(r30)
 1247  00001db0  08000188	j	L72_LF2
 1248  00001db4  54000000	nop; delay slot nop
 1249  00001db8          	L86_LF2:
 1250  00001db8  54000000	nop
 1251  00001dbc          	L88_LF2:
 1252  00001dbc  8fc10000	lw	r1,(r30)
 1253  00001dc0  90220000	lbu	r2,(r1)
 1254  00001dc4  6c41002f	sgtui	r1,r2,#47
 1255  00001dc8  10200030	beqz	r1,L91_LF2
 1256  00001dcc  54000000	nop; delay slot nop
 1257  00001dd0  8fc10000	lw	r1,(r30)
 1258  00001dd4  90220000	lbu	r2,(r1)
 1259  00001dd8  70410039	sleui	r1,r2,#57
 1260  00001ddc  1020001c	beqz	r1,L91_LF2
 1261  00001de0  54000000	nop; delay slot nop
 1262  00001de4  8fc10000	lw	r1,(r30)
 1263  00001de8  90220000	lbu	r2,(r1)
 1264  00001dec  2041ffd0	addi	r1,r2,#-48
 1265  00001df0  afc1fff0	sw	-16(r30),r1
 1266  00001df4  0800008c	j	L92_LF2
 1267  00001df8  54000000	nop; delay slot nop
 1268  00001dfc          	L91_LF2:
 1269  00001dfc  8fc10000	lw	r1,(r30)
 1270  00001e00  90220000	lbu	r2,(r1)
 1271  00001e04  6c410060	sgtui	r1,r2,#96
 1272  00001e08  10200030	beqz	r1,L93_LF2
 1273  00001e0c  54000000	nop; delay slot nop
 1274  00001e10  8fc10000	lw	r1,(r30)
 1275  00001e14  90220000	lbu	r2,(r1)
 1276  00001e18  7041007a	sleui	r1,r2,#122
 1277  00001e1c  1020001c	beqz	r1,L93_LF2
 1278  00001e20  54000000	nop; delay slot nop
 1279  00001e24  8fc10000	lw	r1,(r30)
 1280  00001e28  90220000	lbu	r2,(r1)
 1281  00001e2c  2041ffa9	addi	r1,r2,#-87
 1282  00001e30  afc1fff0	sw	-16(r30),r1
 1283  00001e34  0800004c	j	L92_LF2
 1284  00001e38  54000000	nop; delay slot nop
 1285  00001e3c          	L93_LF2:
 1286  00001e3c  8fc10000	lw	r1,(r30)
 1287  00001e40  90220000	lbu	r2,(r1)
 1288  00001e44  6c410040	sgtui	r1,r2,#64
 1289  00001e48  10200030	beqz	r1,L95_LF2
 1290  00001e4c  54000000	nop; delay slot nop
 1291  00001e50  8fc10000	lw	r1,(r30)
 1292  00001e54  90220000	lbu	r2,(r1)
 1293  00001e58  7041005a	sleui	r1,r2,#90
 1294  00001e5c  1020001c	beqz	r1,L95_LF2
 1295  00001e60  54000000	nop; delay slot nop
 1296  00001e64  8fc10000	lw	r1,(r30)
 1297  00001e68  90220000	lbu	r2,(r1)
 1298  00001e6c  2041ffc9	addi	r1,r2,#-55
 1299  00001e70  afc1fff0	sw	-16(r30),r1
 1300  00001e74  0800000c	j	L92_LF2
 1301  00001e78  54000000	nop; delay slot nop
 1302  00001e7c          	L95_LF2:
 1303  00001e7c  200103e8	addi	r1,r0,#1000
 1304  00001e80  afc1fff0	sw	-16(r30),r1
 1305  00001e84          	L96_LF2:
 1306  00001e84          	L94_LF2:
 1307  00001e84          	L92_LF2:
 1308  00001e84  8fc1fff0	lw	r1,-16(r30)
 1309  00001e88  8fc20008	lw	r2,8(r30)
 1310  00001e8c  0022082a	slt	r1,r1,r2
 1311  00001e90  10200040	beqz	r1,L90_LF2
 1312  00001e94  54000000	nop; delay slot nop
 1313  00001e98  8fc1fff4	lw	r1,-12(r30)
 1314  00001e9c  8fc20008	lw	r2,8(r30)
 1315  00001ea0  00200035	movi2fp	f0,r1
 1316  00001ea4  00400835	movi2fp	f1,r2
 1317  00001ea8  0401000e	mult	f0,f0,f1
 1318  00001eac  00000834	movfp2i	r1,f0
 1319  00001eb0  afc1fff4	sw	-12(r30),r1
 1320  00001eb4  8fc1fff4	lw	r1,-12(r30)
 1321  00001eb8  8fc2fff0	lw	r2,-16(r30)
 1322  00001ebc  00220820	add	r1,r1,r2
 1323  00001ec0  afc1fff4	sw	-12(r30),r1
 1324  00001ec4  8fc20000	lw	r2,(r30)
 1325  00001ec8  20410001	addi	r1,r2,#1
 1326  00001ecc  00011020	add	r2,r0,r1
 1327  00001ed0  afc20000	sw	(r30),r2
 1328  00001ed4          	L97_LF2:
 1329  00001ed4          	L90_LF2:
 1330  00001ed4  8fc1fff0	lw	r1,-16(r30)
 1331  00001ed8  8fc20008	lw	r2,8(r30)
 1332  00001edc  0022082a	slt	r1,r1,r2
 1333  00001ee0  1420000c	bnez	r1,L98_LF2
 1334  00001ee4  54000000	nop; delay slot nop
 1335  00001ee8  0800000c	j	L89_LF2
 1336  00001eec  54000000	nop; delay slot nop
 1337  00001ef0          	L98_LF2:
 1338  00001ef0  0bfffec8	j	L88_LF2
 1339  00001ef4  54000000	nop; delay slot nop
 1340  00001ef8          	L89_LF2:
 1341  00001ef8  8fc10004	lw	r1,4(r30)
 1342  00001efc  64220000	snei	r2,r1,#0
 1343  00001f00  10400010	beqz	r2,L99_LF2
 1344  00001f04  54000000	nop; delay slot nop
 1345  00001f08  8fc10004	lw	r1,4(r30)
 1346  00001f0c  8fc20000	lw	r2,(r30)
 1347  00001f10  ac220000	sw	(r1),r2
 1348  00001f14          	L99_LF2:
 1349  00001f14  8fc1fff4	lw	r1,-12(r30)
 1350  00001f18  8fc2ffec	lw	r2,-20(r30)
 1351  00001f1c  00200035	movi2fp	f0,r1
 1352  00001f20  00400835	movi2fp	f1,r2
 1353  00001f24  0401000e	mult	f0,f0,f1
 1354  00001f28  00000834	movfp2i	r1,f0
 1355  00001f2c  afc1fff4	sw	-12(r30),r1
 1356  00001f30  8fc1fff4	lw	r1,-12(r30)
 1357  00001f34  08000004	j	L72_LF2
 1358  00001f38  54000000	nop; delay slot nop
 1359  00001f3c          	L72_LF2:
 1360  00001f3c  8fa20000	lw	r2,0(r29)
 1361  00001f40  8fdffff8	lw	r31,-8(r30)
 1362  00001f44  001ee820	add	r29,r0,r30
 1363  00001f48  8fdefffc	lw	r30,-4(r30)
 1364  00001f4c  4be00000	jr	r31
 1365  00001f50  54000000	nop
 1366  00001f54          	.endproc _dstrtol
 1367  00001f54          	.align 2
 1368  00001f54          	.proc _bcopy
 1369  00001f54          	.global _bcopy
 1370  00001f54          	_bcopy:
 1371                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1372  00001f54  afbefffc	sw	-4(r29),r30; push fp
 1373  00001f58  001df020	add	r30,r0,r29; fp = sp
 1374  00001f5c  afbffff8	sw	-8(r29),r31; push ret addr
 1375  00001f60  2fbd0010	subui	r29,r29,#16; alloc local storage
 1376  00001f64  afa20000	sw	0(r29),r2
 1377  00001f68  afa30004	sw	4(r29),r3
 1378  00001f6c  54000000	nop
 1379  00001f70          	L101_LF2:
 1380  00001f70  8fc10008	lw	r1,8(r30)
 1381  00001f74  2022ffff	addi	r2,r1,#-1
 1382  00001f78  afc20008	sw	8(r30),r2
 1383  00001f7c  6c210000	sgti	r1,r1,#0
 1384  00001f80  1420000c	bnez	r1,L103_LF2
 1385  00001f84  54000000	nop; delay slot nop
 1386  00001f88  0800002c	j	L102_LF2
 1387  00001f8c  54000000	nop; delay slot nop
 1388  00001f90          	L103_LF2:
 1389  00001f90  8fc10004	lw	r1,4(r30)
 1390  00001f94  20220001	addi	r2,r1,#1
 1391  00001f98  afc20004	sw	4(r30),r2
 1392  00001f9c  8fc20000	lw	r2,(r30)
 1393  00001fa0  20430001	addi	r3,r2,#1
 1394  00001fa4  afc30000	sw	(r30),r3
 1395  00001fa8  80420000	lb	r2,(r2)
 1396  00001fac  a0220000	sb	(r1),r2
 1397  00001fb0  0bffffbc	j	L101_LF2
 1398  00001fb4  54000000	nop; delay slot nop
 1399  00001fb8          	L102_LF2:
 1400  00001fb8          	L100_LF2:
 1401  00001fb8  8fa20000	lw	r2,0(r29)
 1402  00001fbc  8fa30004	lw	r3,4(r29)
 1403  00001fc0  8fdffff8	lw	r31,-8(r30)
 1404  00001fc4  001ee820	add	r29,r0,r30
 1405  00001fc8  8fdefffc	lw	r30,-4(r30)
 1406  00001fcc  4be00000	jr	r31
 1407  00001fd0  54000000	nop
 1408  00001fd4          	.endproc _bcopy
 1409  00001fd4          	.align 2
 1410  00001fd4          	.proc _bzero
 1411  00001fd4          	.global _bzero
 1412  00001fd4          	_bzero:
 1413                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1414  00001fd4  afbefffc	sw	-4(r29),r30; push fp
 1415  00001fd8  001df020	add	r30,r0,r29; fp = sp
 1416  00001fdc  afbffff8	sw	-8(r29),r31; push ret addr
 1417  00001fe0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1418  00001fe4  afa20000	sw	0(r29),r2
 1419  00001fe8  54000000	nop
 1420  00001fec          	L105_LF2:
 1421  00001fec  8fc10004	lw	r1,4(r30)
 1422  00001ff0  2022ffff	addi	r2,r1,#-1
 1423  00001ff4  afc20004	sw	4(r30),r2
 1424  00001ff8  6c210000	sgti	r1,r1,#0
 1425  00001ffc  1420000c	bnez	r1,L107_LF2
 1426  00002000  54000000	nop; delay slot nop
 1427  00002004  08000020	j	L106_LF2
 1428  00002008  54000000	nop; delay slot nop
 1429  0000200c          	L107_LF2:
 1430  0000200c  8fc10000	lw	r1,(r30)
 1431  00002010  20220001	addi	r2,r1,#1
 1432  00002014  afc20000	sw	(r30),r2
 1433  00002018  20020000	addi	r2,r0,(#0x0)&0xff
 1434  0000201c  a0220000	sb	(r1),r2
 1435  00002020  0bffffc8	j	L105_LF2
 1436  00002024  54000000	nop; delay slot nop
 1437  00002028          	L106_LF2:
 1438  00002028          	L104_LF2:
 1439  00002028  8fa20000	lw	r2,0(r29)
 1440  0000202c  8fdffff8	lw	r31,-8(r30)
 1441  00002030  001ee820	add	r29,r0,r30
 1442  00002034  8fdefffc	lw	r30,-4(r30)
 1443  00002038  4be00000	jr	r31
 1444  0000203c  54000000	nop
 1445  00002040          	.endproc _bzero
 1446  00002040          	.align 2
 1447  00002040          	.proc _min
 1448  00002040          	.global _min
 1449  00002040          	_min:
 1450                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1451  00002040  afbefffc	sw	-4(r29),r30; push fp
 1452  00002044  001df020	add	r30,r0,r29; fp = sp
 1453  00002048  afbffff8	sw	-8(r29),r31; push ret addr
 1454  0000204c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1455  00002050  afa20000	sw	0(r29),r2
 1456  00002054  afa30004	sw	4(r29),r3
 1457  00002058  8fc10000	lw	r1,(r30)
 1458  0000205c  8fc20004	lw	r2,4(r30)
 1459  00002060  0022182c	sle	r3,r1,r2
 1460  00002064  14600008	bnez	r3,L109_LF2
 1461  00002068  54000000	nop; delay slot nop
 1462  0000206c  8fc10004	lw	r1,4(r30)
 1463  00002070          	L109_LF2:
 1464  00002070  08000004	j	L108_LF2
 1465  00002074  54000000	nop; delay slot nop
 1466  00002078          	L108_LF2:
 1467  00002078  8fa20000	lw	r2,0(r29)
 1468  0000207c  8fa30004	lw	r3,4(r29)
 1469  00002080  8fdffff8	lw	r31,-8(r30)
 1470  00002084  001ee820	add	r29,r0,r30
 1471  00002088  8fdefffc	lw	r30,-4(r30)
 1472  0000208c  4be00000	jr	r31
 1473  00002090  54000000	nop
 1474  00002094          	.endproc _min
 1475  00002094          	.align 2
 1476  00002094          	.proc _max
 1477  00002094          	.global _max
 1478  00002094          	_max:
 1479                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1480  00002094  afbefffc	sw	-4(r29),r30; push fp
 1481  00002098  001df020	add	r30,r0,r29; fp = sp
 1482  0000209c  afbffff8	sw	-8(r29),r31; push ret addr
 1483  000020a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1484  000020a4  afa20000	sw	0(r29),r2
 1485  000020a8  afa30004	sw	4(r29),r3
 1486  000020ac  8fc10000	lw	r1,(r30)
 1487  000020b0  8fc20004	lw	r2,4(r30)
 1488  000020b4  0022182d	sge	r3,r1,r2
 1489  000020b8  14600008	bnez	r3,L111_LF2
 1490  000020bc  54000000	nop; delay slot nop
 1491  000020c0  8fc10004	lw	r1,4(r30)
 1492  000020c4          	L111_LF2:
 1493  000020c4  08000004	j	L110_LF2
 1494  000020c8  54000000	nop; delay slot nop
 1495  000020cc          	L110_LF2:
 1496  000020cc  8fa20000	lw	r2,0(r29)
 1497  000020d0  8fa30004	lw	r3,4(r29)
 1498  000020d4  8fdffff8	lw	r31,-8(r30)
 1499  000020d8  001ee820	add	r29,r0,r30
 1500  000020dc  8fdefffc	lw	r30,-4(r30)
 1501  000020e0  4be00000	jr	r31
 1502  000020e4  54000000	nop
 1503  000020e8          	.endproc _max
 1504                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1505                      ;;;
 1506                      ;;; Most of the traps are called in files from libtraps.
 1509  000020e8          	.align 2
 1510  000020e8          	.proc _exit
 1511  000020e8          	.global _exit
 1512  000020e8          	_exit:
 1513  000020e8  44000300	trap	#0x300
 1514  000020ec  4be00000	jr	r31
 1515  000020f0  54000000	nop
 1516  000020f4          	.endproc _exit
 1518                      ; for the benefit of gcc.
 1519  000020f4          	.proc ___main
 1520  000020f4          	.global ___main
 1521  000020f4          	___main:
 1522  000020f4  4be00000	jr	r31
 1523  000020f8  54000000	nop
 1524  000020fc          	.endproc ___main
 1525  000020fc          	.text
 1526  000020fc          	.global _etext
 1527  000020fc          	_etext:
 1528  000020fc          	.align 3
 1529  00002100          	.data
 1530  00003082          	.global _edata
 1531  00003082          	_edata:
