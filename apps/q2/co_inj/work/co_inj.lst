 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 126
    4                      ; Text size: 4316
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_mailbox> <handle_to_page_mapped_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f6d6169	
   82  00003018  6c626f78	
   82  0000301c  3e203c68	
   82  00003020  616e646c	
   82  00003024  655f746f	
   82  00003028  5f706167	
   82  0000302c  655f6d61	
   82  00003030  70706564	
   82  00003034  5f73656d	
   82  00003038  6170686f	
   82  0000303c  72653e0a	
   82  00003040  00      	
   83  00003041          	.align 2
   84  00003044          	LC1_LF0:
   85  00003044  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   85  00003048  73656d61	
   85  0000304c  70686f72	
   85  00003050  6520735f	
   85  00003054  70726f63	
   85  00003058  735f636f	
   85  0000305c  6d706c65	
   85  00003060  74656420	
   85  00003064  28256429	
   85  00003068  20696e20	
   85  0000306c  00      	
   86  0000306d          	.align 2
   87  00003070          	LC2_LF0:
   88  00003070  2c206578	.ascii ", exiting...\n\000"
   88  00003074  6974696e	
   88  00003078  672e2e2e	
   88  0000307c  0a00    	
   89  0000307e          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   99  000010e4  8fc20000	lw	r2,(r30)
  100  000010e8  8fc30004	lw	r3,4(r30)
  101  000010ec  0c000fe4	jal	___main
  102  000010f0  54000000	nop; not filled.
  103  000010f4  64410003	snei	r1,r2,#3
  104  000010f8  10200028	beqz	r1,L17_LF0
  105  000010fc  54000000	nop; not filled.
  106  00001100  23bdfff8	addi	r29,r29,#-8
  107  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  108  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  109  0000110c  afa40000	sw	(r29),r4
  110  00001110  0c000110	jal	_Printf
  111  00001114  54000000	nop; not filled.
  112  00001118  0c000210	jal	_Exit
  113  0000111c  54000000	nop; not filled.
  114  00001120  23bd0008	addi	r29,r29,#8
  115  00001124          	L17_LF0:
  116  00001124  23bdfff0	addi	r29,r29,#-16
  117  00001128  8c640004	lw	r4,4(r3)
  118  0000112c  afa40000	sw	(r29),r4
  119  00001130  20040000	addi	r4,r0,#0
  120  00001134  afa40004	sw	4(r29),r4
  121  00001138  2004000a	addi	r4,r0,#10
  122  0000113c  afa40008	sw	8(r29),r4
  123  00001140  0c000a94	jal	_dstrtol
  124  00001144  54000000	nop; not filled.
  125  00001148  8c640008	lw	r4,8(r3)
  126  0000114c  afa40000	sw	(r29),r4
  127  00001150  20040000	addi	r4,r0,#0
  128  00001154  afa40004	sw	4(r29),r4
  129  00001158  2004000a	addi	r4,r0,#10
  130  0000115c  afa40008	sw	8(r29),r4
  131  00001160  0c000a74	jal	_dstrtol
  132  00001164  54000000	nop; not filled.
  133  00001168  00011020	add	r2,r0,r1
  134  0000116c  afa20000	sw	(r29),r2
  135  00001170  0c000104	jal	_sem_signal
  136  00001174  54000000	nop; not filled.
  137  00001178  23bd0010	addi	r29,r29,#16
  138  0000117c  64210001	snei	r1,r1,#1
  139  00001180  10200050	beqz	r1,L18_LF0
  140  00001184  54000000	nop; not filled.
  141  00001188  23bdfff8	addi	r29,r29,#-8
  142  0000118c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  143  00001190  24843044	addui	r4,r4,(LC1_LF0)&0xffff
  144  00001194  afa40000	sw	(r29),r4
  145  00001198  afa20004	sw	4(r29),r2
  146  0000119c  0c000084	jal	_Printf
  147  000011a0  54000000	nop; not filled.
  148  000011a4  8c630000	lw	r3,(r3)
  149  000011a8  afa30000	sw	(r29),r3
  150  000011ac  0c000074	jal	_Printf
  151  000011b0  54000000	nop; not filled.
  152  000011b4  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  153  000011b8  24843070	addui	r4,r4,(LC2_LF0)&0xffff
  154  000011bc  afa40000	sw	(r29),r4
  155  000011c0  0c000060	jal	_Printf
  156  000011c4  54000000	nop; not filled.
  157  000011c8  0c000160	jal	_Exit
  158  000011cc  54000000	nop; not filled.
  159  000011d0  23bd0008	addi	r29,r29,#8
  160  000011d4          	L18_LF0:
  161  000011d4  0c000ef0	jal	_exit
  162  000011d8  54000000	nop
  163  000011dc          	.endproc _main
  164                      ;;;
  165                      ;;; Stub functions for DLX traps.
  166                      ;;;
  167                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  168                      ;;;
  169                      ;;; The traps such as Open and Close
  170                      ;;; (note the capital letters) are for use by user programs.  The traps
  171                      ;;; with names such as open and close (lower case) are for use by the OS.
  172                      ;;;
  175  000011dc          	.align 2
  177                      ;;; The following are the traps to be used by user-level programs
  178                      ;;;
  180  000011dc          	.align 2
  181  000011dc          	.proc _Open
  182  000011dc          	.global _Open
  183  000011dc          	_Open:
  184                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  185                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  186                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  187  000011dc  44000213	trap	#0x213
  188  000011e0  4be00000	jr	r31
  189  000011e4  54000000	nop
  190  000011e8          	.endproc _Open
  192  000011e8          	.proc _Close
  193  000011e8          	.global _Close
  194  000011e8          	_Close:
  195  000011e8  44000214	trap	#0x214
  196  000011ec  4be00000	jr	r31
  197  000011f0  54000000	nop
  198  000011f4          	.endproc _Close
  200  000011f4          	.proc _Read
  201  000011f4          	.global _Read
  202  000011f4          	_Read:
  203  000011f4  44000210	trap	#0x210
  204  000011f8  4be00000	jr	r31
  205  000011fc  54000000	nop
  206  00001200          	.endproc _Read
  208  00001200          	.proc _Write
  209  00001200          	.global _Write
  210  00001200          	_Write:
  211  00001200  44000211	trap	#0x211
  212  00001204  4be00000	jr	r31
  213  00001208  54000000	nop
  214  0000120c          	.endproc _Write
  216  0000120c          	.proc _Lseek
  217  0000120c          	.global _Lseek
  218  0000120c          	_Lseek:
  219  0000120c  44000212	trap	#0x212
  220  00001210  4be00000	jr	r31
  221  00001214  54000000	nop
  222  00001218          	.endproc _Lseek
  224  00001218          	.proc _Putchar
  225  00001218          	.global _Putchar
  226  00001218          	_Putchar:
  227  00001218  44000280	trap	#0x280
  228  0000121c  4be00000	jr	r31
  229  00001220  54000000	nop
  230  00001224          	.endproc _Putchar
  232  00001224          	.proc _Printf
  233  00001224          	.global _Printf
  234  00001224          	_Printf:
  235  00001224  44000201	trap	#0x201
  236  00001228  4be00000	jr	r31
  237  0000122c  54000000	nop
  238  00001230          	.endproc _Printf
  240  00001230          	.proc _getpid
  241  00001230          	.global _getpid
  242  00001230          	_getpid:
  243  00001230  44000431	trap	#0x431
  244  00001234  4be00000	jr	r31
  245  00001238  54000000	nop
  246  0000123c          	.endproc _getpid
  248  0000123c          	.proc _process_create
  249  0000123c          	.global _process_create
  250  0000123c          	_process_create:
  251  0000123c  44000432	trap	#0x432
  252  00001240  4be00000	jr	r31
  253  00001244  54000000	nop
  254  00001248          	.endproc _process_create
  256  00001248          	.proc _shmget
  257  00001248          	.global _shmget
  258  00001248          	_shmget:
  259  00001248  44000440	trap	#0x440
  260  0000124c  4be00000	jr	r31
  261  00001250  54000000	nop
  262  00001254          	.endproc _shmget
  264  00001254          	.proc _shmat
  265  00001254          	.global _shmat
  266  00001254          	_shmat:
  267  00001254  44000441	trap	#0x441
  268  00001258  4be00000	jr	r31
  269  0000125c  54000000	nop
  270  00001260          	.endproc _shmat
  272  00001260          	.proc _sem_create
  273  00001260          	.global _sem_create
  274  00001260          	_sem_create:
  275  00001260  44000450	trap	#0x450
  276  00001264  4be00000	jr	r31
  277  00001268  54000000	nop
  278  0000126c          	.endproc _sem_create
  280  0000126c          	.proc _sem_wait
  281  0000126c          	.global _sem_wait
  282  0000126c          	_sem_wait:
  283  0000126c  44000451	trap	#0x451
  284  00001270  4be00000	jr	r31
  285  00001274  54000000	nop
  286  00001278          	.endproc _sem_wait
  288  00001278          	.proc _sem_signal
  289  00001278          	.global _sem_signal
  290  00001278          	_sem_signal:
  291  00001278  44000452	trap	#0x452
  292  0000127c  4be00000	jr	r31
  293  00001280  54000000	nop
  294  00001284          	.endproc _sem_signal
  296  00001284          	.proc _lock_create
  297  00001284          	.global _lock_create
  298  00001284          	_lock_create:
  299  00001284  44000453	trap	#0x453
  300  00001288  4be00000	jr	r31
  301  0000128c  54000000	nop
  302  00001290          	.endproc _lock_create
  304  00001290          	.proc _lock_acquire
  305  00001290          	.global _lock_acquire
  306  00001290          	_lock_acquire:
  307  00001290  44000454	trap	#0x454
  308  00001294  4be00000	jr	r31
  309  00001298  54000000	nop
  310  0000129c          	.endproc _lock_acquire
  312  0000129c          	.proc _lock_release
  313  0000129c          	.global _lock_release
  314  0000129c          	_lock_release:
  315  0000129c  44000455	trap	#0x455
  316  000012a0  4be00000	jr	r31
  317  000012a4  54000000	nop
  318  000012a8          	.endproc _lock_release
  320  000012a8          	.proc _cond_create
  321  000012a8          	.global _cond_create
  322  000012a8          	_cond_create:
  323  000012a8  44000456	trap	#0x456
  324  000012ac  4be00000	jr	r31
  325  000012b0  54000000	nop
  326  000012b4          	.endproc _cond_create
  328  000012b4          	.proc _cond_wait
  329  000012b4          	.global _cond_wait
  330  000012b4          	_cond_wait:
  331  000012b4  44000457	trap	#0x457
  332  000012b8  4be00000	jr	r31
  333  000012bc  54000000	nop
  334  000012c0          	.endproc _cond_wait
  336  000012c0          	.proc _cond_signal
  337  000012c0          	.global _cond_signal
  338  000012c0          	_cond_signal:
  339  000012c0  44000458	trap	#0x458
  340  000012c4  4be00000	jr	r31
  341  000012c8  54000000	nop
  342  000012cc          	.endproc _cond_signal
  344  000012cc          	.proc _cond_broadcast
  345  000012cc          	.global _cond_broadcast
  346  000012cc          	_cond_broadcast:
  347  000012cc  44000459	trap	#0x459
  348  000012d0  4be00000	jr	r31
  349  000012d4  54000000	nop
  350  000012d8          	.endproc _cond_broadcast
  352  000012d8          	.proc _mbox_create
  353  000012d8          	.global _mbox_create
  354  000012d8          	_mbox_create:
  355  000012d8  44000460	trap	#0x460
  356  000012dc  4be00000	jr	r31
  357  000012e0  54000000	nop
  358  000012e4          	.endproc _mbox_create
  360  000012e4          	.proc _mbox_open
  361  000012e4          	.global _mbox_open
  362  000012e4          	_mbox_open:
  363  000012e4  44000461	trap	#0x461
  364  000012e8  4be00000	jr	r31
  365  000012ec  54000000	nop
  366  000012f0          	.endproc _mbox_open
  368  000012f0          	.proc _mbox_close
  369  000012f0          	.global _mbox_close
  370  000012f0          	_mbox_close:
  371  000012f0  44000462	trap	#0x462
  372  000012f4  4be00000	jr	r31
  373  000012f8  54000000	nop
  374  000012fc          	.endproc _mbox_close
  376  000012fc          	.proc _mbox_send
  377  000012fc          	.global _mbox_send
  378  000012fc          	_mbox_send:
  379  000012fc  44000463	trap	#0x463
  380  00001300  4be00000	jr	r31
  381  00001304  54000000	nop
  382  00001308          	.endproc _mbox_send
  384  00001308          	.proc _mbox_recv
  385  00001308          	.global _mbox_recv
  386  00001308          	_mbox_recv:
  387  00001308  44000464	trap	#0x464
  388  0000130c  4be00000	jr	r31
  389  00001310  54000000	nop
  390  00001314          	.endproc _mbox_recv
  392  00001314          	.proc _sleep
  393  00001314          	.global _sleep
  394  00001314          	_sleep:
  395  00001314  44000465	trap	#0x465
  396  00001318  4be00000	jr	r31
  397  0000131c  54000000	nop
  398  00001320          	.endproc _sleep
  400  00001320          	.proc _yield
  401  00001320          	.global _yield
  402  00001320          	_yield:
  403  00001320  44000466	trap	#0x466
  404  00001324  4be00000	jr	r31
  405  00001328  54000000	nop
  406  0000132c          	.endproc _yield
  409  0000132c          	.proc _Exit
  410  0000132c          	.global _Exit
  411  0000132c          	_Exit:
  412  0000132c  44000500	trap	#0x500
  413  00001330  4be00000	jr	r31
  414  00001334  54000000	nop
  415  00001338          	.endproc _Exit
  416                      ; Compiled by GCC
  418  00001338          	.align 2
  419  00001338          	.proc _isspace
  420  00001338          	.global _isspace
  421  00001338          	_isspace:
  422                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  423  00001338  afbefffc	sw	-4(r29),r30; push fp
  424  0000133c  001df020	add	r30,r0,r29; fp = sp
  425  00001340  afbffff8	sw	-8(r29),r31; push ret addr
  426  00001344  2fbd0018	subui	r29,r29,#24; alloc local storage
  427  00001348  afa20000	sw	0(r29),r2
  428  0000134c  afa30004	sw	4(r29),r3
  429  00001350  afa40008	sw	8(r29),r4
  430  00001354  83c20003	lb	r2,3(r30)
  431  00001358  20010000	addi	r1,r0,#0
  432  0000135c  304300ff	andi	r3,r2,#0x00ff
  433  00001360  60640020	seqi	r4,r3,#32
  434  00001364  1480002c	bnez	r4,L3_LF2
  435  00001368  54000000	nop; delay slot nop
  436  0000136c  304300ff	andi	r3,r2,#0x00ff
  437  00001370  60640009	seqi	r4,r3,#9
  438  00001374  1480001c	bnez	r4,L3_LF2
  439  00001378  54000000	nop; delay slot nop
  440  0000137c  304300ff	andi	r3,r2,#0x00ff
  441  00001380  6064000a	seqi	r4,r3,#10
  442  00001384  1480000c	bnez	r4,L3_LF2
  443  00001388  54000000	nop; delay slot nop
  444  0000138c  08000008	j	L2_LF2
  445  00001390  54000000	nop; delay slot nop
  446  00001394          	L3_LF2:
  447  00001394  20010001	addi	r1,r0,#1
  448  00001398          	L2_LF2:
  449  00001398  08000004	j	L1_LF2
  450  0000139c  54000000	nop; delay slot nop
  451  000013a0          	L1_LF2:
  452  000013a0  8fa20000	lw	r2,0(r29)
  453  000013a4  8fa30004	lw	r3,4(r29)
  454  000013a8  8fa40008	lw	r4,8(r29)
  455  000013ac  8fdffff8	lw	r31,-8(r30)
  456  000013b0  001ee820	add	r29,r0,r30
  457  000013b4  8fdefffc	lw	r30,-4(r30)
  458  000013b8  4be00000	jr	r31
  459  000013bc  54000000	nop
  460  000013c0          	.endproc _isspace
  461  000013c0          	.align 2
  462  000013c0          	.proc _isxdigit
  463  000013c0          	.global _isxdigit
  464  000013c0          	_isxdigit:
  465                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  466  000013c0  afbefffc	sw	-4(r29),r30; push fp
  467  000013c4  001df020	add	r30,r0,r29; fp = sp
  468  000013c8  afbffff8	sw	-8(r29),r31; push ret addr
  469  000013cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  470  000013d0  afa20000	sw	0(r29),r2
  471  000013d4  afa30004	sw	4(r29),r3
  472  000013d8  afa40008	sw	8(r29),r4
  473  000013dc  83c20003	lb	r2,3(r30)
  474  000013e0  20010000	addi	r1,r0,#0
  475  000013e4  304300ff	andi	r3,r2,#0x00ff
  476  000013e8  6c64002f	sgtui	r4,r3,#47
  477  000013ec  1080001c	beqz	r4,L7_LF2
  478  000013f0  54000000	nop; delay slot nop
  479  000013f4  304300ff	andi	r3,r2,#0x00ff
  480  000013f8  70640039	sleui	r4,r3,#57
  481  000013fc  1480005c	bnez	r4,L6_LF2
  482  00001400  54000000	nop; delay slot nop
  483  00001404  08000004	j	L7_LF2
  484  00001408  54000000	nop; delay slot nop
  485  0000140c          	L7_LF2:
  486  0000140c  304300ff	andi	r3,r2,#0x00ff
  487  00001410  6c640060	sgtui	r4,r3,#96
  488  00001414  1080001c	beqz	r4,L8_LF2
  489  00001418  54000000	nop; delay slot nop
  490  0000141c  304300ff	andi	r3,r2,#0x00ff
  491  00001420  70640066	sleui	r4,r3,#102
  492  00001424  14800034	bnez	r4,L6_LF2
  493  00001428  54000000	nop; delay slot nop
  494  0000142c  08000004	j	L8_LF2
  495  00001430  54000000	nop; delay slot nop
  496  00001434          	L8_LF2:
  497  00001434  304300ff	andi	r3,r2,#0x00ff
  498  00001438  6c640040	sgtui	r4,r3,#64
  499  0000143c  10800020	beqz	r4,L5_LF2
  500  00001440  54000000	nop; delay slot nop
  501  00001444  304300ff	andi	r3,r2,#0x00ff
  502  00001448  70640041	sleui	r4,r3,#65
  503  0000144c  1480000c	bnez	r4,L6_LF2
  504  00001450  54000000	nop; delay slot nop
  505  00001454  08000008	j	L5_LF2
  506  00001458  54000000	nop; delay slot nop
  507  0000145c          	L6_LF2:
  508  0000145c  20010001	addi	r1,r0,#1
  509  00001460          	L5_LF2:
  510  00001460  08000004	j	L4_LF2
  511  00001464  54000000	nop; delay slot nop
  512  00001468          	L4_LF2:
  513  00001468  8fa20000	lw	r2,0(r29)
  514  0000146c  8fa30004	lw	r3,4(r29)
  515  00001470  8fa40008	lw	r4,8(r29)
  516  00001474  8fdffff8	lw	r31,-8(r30)
  517  00001478  001ee820	add	r29,r0,r30
  518  0000147c  8fdefffc	lw	r30,-4(r30)
  519  00001480  4be00000	jr	r31
  520  00001484  54000000	nop
  521  00001488          	.endproc _isxdigit
  522  00001488          	.align 2
  523  00001488          	.proc _dstrcpy
  524  00001488          	.global _dstrcpy
  525  00001488          	_dstrcpy:
  526                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  527  00001488  afbefffc	sw	-4(r29),r30; push fp
  528  0000148c  001df020	add	r30,r0,r29; fp = sp
  529  00001490  afbffff8	sw	-8(r29),r31; push ret addr
  530  00001494  2fbd0018	subui	r29,r29,#24; alloc local storage
  531  00001498  afa20000	sw	0(r29),r2
  532  0000149c  afa30004	sw	4(r29),r3
  533  000014a0  8fc10000	lw	r1,(r30)
  534  000014a4  afc1fff4	sw	-12(r30),r1
  535  000014a8          	L10_LF2:
  536  000014a8  8fc10000	lw	r1,(r30)
  537  000014ac  20220001	addi	r2,r1,#1
  538  000014b0  afc20000	sw	(r30),r2
  539  000014b4  8fc20004	lw	r2,4(r30)
  540  000014b8  20430001	addi	r3,r2,#1
  541  000014bc  afc30004	sw	4(r30),r3
  542  000014c0  80420000	lb	r2,(r2)
  543  000014c4  a0220000	sb	(r1),r2
  544  000014c8  a3c2fff3	sb	-13(r30),r2
  545  000014cc          	L12_LF2:
  546  000014cc  93c1fff3	lbu	r1,-13(r30)
  547  000014d0  64220000	snei	r2,r1,#0
  548  000014d4  1440000c	bnez	r2,L13_LF2
  549  000014d8  54000000	nop; delay slot nop
  550  000014dc  0800000c	j	L11_LF2
  551  000014e0  54000000	nop; delay slot nop
  552  000014e4          	L13_LF2:
  553  000014e4  0bffffc0	j	L10_LF2
  554  000014e8  54000000	nop; delay slot nop
  555  000014ec          	L11_LF2:
  556  000014ec  8fc1fff4	lw	r1,-12(r30)
  557  000014f0  08000004	j	L9_LF2
  558  000014f4  54000000	nop; delay slot nop
  559  000014f8          	L9_LF2:
  560  000014f8  8fa20000	lw	r2,0(r29)
  561  000014fc  8fa30004	lw	r3,4(r29)
  562  00001500  8fdffff8	lw	r31,-8(r30)
  563  00001504  001ee820	add	r29,r0,r30
  564  00001508  8fdefffc	lw	r30,-4(r30)
  565  0000150c  4be00000	jr	r31
  566  00001510  54000000	nop
  567  00001514          	.endproc _dstrcpy
  568  00001514          	.align 2
  569  00001514          	.proc _dstrncpy
  570  00001514          	.global _dstrncpy
  571  00001514          	_dstrncpy:
  572                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  573  00001514  afbefffc	sw	-4(r29),r30; push fp
  574  00001518  001df020	add	r30,r0,r29; fp = sp
  575  0000151c  afbffff8	sw	-8(r29),r31; push ret addr
  576  00001520  2fbd0018	subui	r29,r29,#24; alloc local storage
  577  00001524  afa20000	sw	0(r29),r2
  578  00001528  afa30004	sw	4(r29),r3
  579  0000152c  8fc10000	lw	r1,(r30)
  580  00001530  afc1fff4	sw	-12(r30),r1
  581  00001534          	L15_LF2:
  582  00001534  8fc10008	lw	r1,8(r30)
  583  00001538  2022ffff	addi	r2,r1,#-1
  584  0000153c  afc20008	sw	8(r30),r2
  585  00001540  70210000	slei	r1,r1,#0
  586  00001544  1020000c	beqz	r1,L18_LF2
  587  00001548  54000000	nop; delay slot nop
  588  0000154c  08000048	j	L16_LF2
  589  00001550  54000000	nop; delay slot nop
  590  00001554          	L18_LF2:
  591  00001554  8fc10000	lw	r1,(r30)
  592  00001558  20220001	addi	r2,r1,#1
  593  0000155c  afc20000	sw	(r30),r2
  594  00001560  8fc20004	lw	r2,4(r30)
  595  00001564  20430001	addi	r3,r2,#1
  596  00001568  afc30004	sw	4(r30),r3
  597  0000156c  80420000	lb	r2,(r2)
  598  00001570  a0220000	sb	(r1),r2
  599  00001574  a3c2fff3	sb	-13(r30),r2
  600  00001578          	L17_LF2:
  601  00001578  93c1fff3	lbu	r1,-13(r30)
  602  0000157c  64220000	snei	r2,r1,#0
  603  00001580  1440000c	bnez	r2,L19_LF2
  604  00001584  54000000	nop; delay slot nop
  605  00001588  0800000c	j	L16_LF2
  606  0000158c  54000000	nop; delay slot nop
  607  00001590          	L19_LF2:
  608  00001590  0bffffa0	j	L15_LF2
  609  00001594  54000000	nop; delay slot nop
  610  00001598          	L16_LF2:
  611  00001598  8fc1fff4	lw	r1,-12(r30)
  612  0000159c  08000004	j	L14_LF2
  613  000015a0  54000000	nop; delay slot nop
  614  000015a4          	L14_LF2:
  615  000015a4  8fa20000	lw	r2,0(r29)
  616  000015a8  8fa30004	lw	r3,4(r29)
  617  000015ac  8fdffff8	lw	r31,-8(r30)
  618  000015b0  001ee820	add	r29,r0,r30
  619  000015b4  8fdefffc	lw	r30,-4(r30)
  620  000015b8  4be00000	jr	r31
  621  000015bc  54000000	nop
  622  000015c0          	.endproc _dstrncpy
  623  000015c0          	.align 2
  624  000015c0          	.proc _dstrcat
  625  000015c0          	.global _dstrcat
  626  000015c0          	_dstrcat:
  627                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  628  000015c0  afbefffc	sw	-4(r29),r30; push fp
  629  000015c4  001df020	add	r30,r0,r29; fp = sp
  630  000015c8  afbffff8	sw	-8(r29),r31; push ret addr
  631  000015cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  632  000015d0  afa20000	sw	0(r29),r2
  633  000015d4  8fc10000	lw	r1,(r30)
  634  000015d8  afc1fff4	sw	-12(r30),r1
  635  000015dc          	L21_LF2:
  636  000015dc  8fc10000	lw	r1,(r30)
  637  000015e0  90220000	lbu	r2,(r1)
  638  000015e4  64410000	snei	r1,r2,#0
  639  000015e8  1420000c	bnez	r1,L23_LF2
  640  000015ec  54000000	nop; delay slot nop
  641  000015f0  0800001c	j	L22_LF2
  642  000015f4  54000000	nop; delay slot nop
  643  000015f8          	L23_LF2:
  644  000015f8  8fc20000	lw	r2,(r30)
  645  000015fc  20410001	addi	r1,r2,#1
  646  00001600  00011020	add	r2,r0,r1
  647  00001604  afc20000	sw	(r30),r2
  648  00001608  0bffffd0	j	L21_LF2
  649  0000160c  54000000	nop; delay slot nop
  650  00001610          	L22_LF2:
  651  00001610  23bdfff8	addi	r29,r29,#-8
  652  00001614  001d0820	add	r1,r0,r29
  653  00001618  8fc20000	lw	r2,(r30)
  654  0000161c  ac220000	sw	(r1),r2
  655  00001620  8fc20004	lw	r2,4(r30)
  656  00001624  ac220004	sw	4(r1),r2
  657  00001628  0ffffe5c	jal	_dstrcpy
  658  0000162c  54000000	nop; delay slot nop
  659  00001630  23bd0008	addi	r29,r29,#8
  660  00001634  8fc1fff4	lw	r1,-12(r30)
  661  00001638  08000004	j	L20_LF2
  662  0000163c  54000000	nop; delay slot nop
  663  00001640          	L20_LF2:
  664  00001640  8fa20000	lw	r2,0(r29)
  665  00001644  8fdffff8	lw	r31,-8(r30)
  666  00001648  001ee820	add	r29,r0,r30
  667  0000164c  8fdefffc	lw	r30,-4(r30)
  668  00001650  4be00000	jr	r31
  669  00001654  54000000	nop
  670  00001658          	.endproc _dstrcat
  671  00001658          	.align 2
  672  00001658          	.proc _dstrncmp
  673  00001658          	.global _dstrncmp
  674  00001658          	_dstrncmp:
  675                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  676  00001658  afbefffc	sw	-4(r29),r30; push fp
  677  0000165c  001df020	add	r30,r0,r29; fp = sp
  678  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  679  00001664  2fbd0018	subui	r29,r29,#24; alloc local storage
  680  00001668  afa20000	sw	0(r29),r2
  681  0000166c  afa30004	sw	4(r29),r3
  682  00001670  54000000	nop
  683  00001674  20010000	addi	r1,r0,#0
  684  00001678  afc1fff4	sw	-12(r30),r1
  685  0000167c          	L25_LF2:
  686  0000167c  8fc1fff4	lw	r1,-12(r30)
  687  00001680  8fc20008	lw	r2,8(r30)
  688  00001684  0022082a	slt	r1,r1,r2
  689  00001688  1420000c	bnez	r1,L28_LF2
  690  0000168c  54000000	nop; delay slot nop
  691  00001690  08000088	j	L26_LF2
  692  00001694  54000000	nop; delay slot nop
  693  00001698          	L28_LF2:
  694  00001698  8fc10004	lw	r1,4(r30)
  695  0000169c  90220000	lbu	r2,(r1)
  696  000016a0  64410000	snei	r1,r2,#0
  697  000016a4  14200018	bnez	r1,L29_LF2
  698  000016a8  54000000	nop; delay slot nop
  699  000016ac  20010000	addi	r1,r0,#0
  700  000016b0  080000d8	j	L24_LF2
  701  000016b4  54000000	nop; delay slot nop
  702  000016b8  08000028	j	L30_LF2
  703  000016bc  54000000	nop; delay slot nop
  704  000016c0          	L29_LF2:
  705  000016c0  8fc10000	lw	r1,(r30)
  706  000016c4  8fc20004	lw	r2,4(r30)
  707  000016c8  90210000	lbu	r1,(r1)
  708  000016cc  90420000	lbu	r2,(r2)
  709  000016d0  00220829	sne	r1,r1,r2
  710  000016d4  1020000c	beqz	r1,L30_LF2
  711  000016d8  54000000	nop; delay slot nop
  712  000016dc  0800003c	j	L26_LF2
  713  000016e0  54000000	nop; delay slot nop
  714  000016e4          	L31_LF2:
  715  000016e4          	L30_LF2:
  716  000016e4  8fc20000	lw	r2,(r30)
  717  000016e8  20410001	addi	r1,r2,#1
  718  000016ec  00011020	add	r2,r0,r1
  719  000016f0  afc20000	sw	(r30),r2
  720  000016f4  8fc20004	lw	r2,4(r30)
  721  000016f8  20410001	addi	r1,r2,#1
  722  000016fc  00011020	add	r2,r0,r1
  723  00001700  afc20004	sw	4(r30),r2
  724  00001704          	L27_LF2:
  725  00001704  8fc2fff4	lw	r2,-12(r30)
  726  00001708  20410001	addi	r1,r2,#1
  727  0000170c  00011020	add	r2,r0,r1
  728  00001710  afc2fff4	sw	-12(r30),r2
  729  00001714  0bffff64	j	L25_LF2
  730  00001718  54000000	nop; delay slot nop
  731  0000171c          	L26_LF2:
  732  0000171c  8fc1fff4	lw	r1,-12(r30)
  733  00001720  8fc20008	lw	r2,8(r30)
  734  00001724  00220828	seq	r1,r1,r2
  735  00001728  10200018	beqz	r1,L32_LF2
  736  0000172c  54000000	nop; delay slot nop
  737  00001730  20010000	addi	r1,r0,#0
  738  00001734  08000054	j	L24_LF2
  739  00001738  54000000	nop; delay slot nop
  740  0000173c  0800004c	j	L33_LF2
  741  00001740  54000000	nop; delay slot nop
  742  00001744          	L32_LF2:
  743  00001744  8fc20000	lw	r2,(r30)
  744  00001748  90410000	lbu	r1,(r2)
  745  0000174c  8fc20004	lw	r2,4(r30)
  746  00001750  90430000	lbu	r3,(r2)
  747  00001754  00230822	sub	r1,r1,r3
  748  00001758  74220000	sgei	r2,r1,#0
  749  0000175c  10400020	beqz	r2,L34_LF2
  750  00001760  54000000	nop; delay slot nop
  751  00001764  8fc10000	lw	r1,(r30)
  752  00001768  8fc20004	lw	r2,4(r30)
  753  0000176c  90210000	lbu	r1,(r1)
  754  00001770  90420000	lbu	r2,(r2)
  755  00001774  00220829	sne	r1,r1,r2
  756  00001778  08000008	j	L35_LF2
  757  0000177c  54000000	nop; delay slot nop
  758  00001780          	L34_LF2:
  759  00001780  2001ffff	addi	r1,r0,#-1
  760  00001784          	L35_LF2:
  761  00001784  08000004	j	L24_LF2
  762  00001788  54000000	nop; delay slot nop
  763  0000178c          	L33_LF2:
  764  0000178c          	L24_LF2:
  765  0000178c  8fa20000	lw	r2,0(r29)
  766  00001790  8fa30004	lw	r3,4(r29)
  767  00001794  8fdffff8	lw	r31,-8(r30)
  768  00001798  001ee820	add	r29,r0,r30
  769  0000179c  8fdefffc	lw	r30,-4(r30)
  770  000017a0  4be00000	jr	r31
  771  000017a4  54000000	nop
  772  000017a8          	.endproc _dstrncmp
  773  000017a8          	.align 2
  774  000017a8          	.proc _dstrlen
  775  000017a8          	.global _dstrlen
  776  000017a8          	_dstrlen:
  777                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  778  000017a8  afbefffc	sw	-4(r29),r30; push fp
  779  000017ac  001df020	add	r30,r0,r29; fp = sp
  780  000017b0  afbffff8	sw	-8(r29),r31; push ret addr
  781  000017b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  782  000017b8  afa20000	sw	0(r29),r2
  783  000017bc  20010000	addi	r1,r0,#0
  784  000017c0  afc1fff4	sw	-12(r30),r1
  785  000017c4          	L37_LF2:
  786  000017c4  8fc10000	lw	r1,(r30)
  787  000017c8  20220001	addi	r2,r1,#1
  788  000017cc  afc20000	sw	(r30),r2
  789  000017d0  90210000	lbu	r1,(r1)
  790  000017d4  64220000	snei	r2,r1,#0
  791  000017d8  1440000c	bnez	r2,L39_LF2
  792  000017dc  54000000	nop; delay slot nop
  793  000017e0  0800001c	j	L38_LF2
  794  000017e4  54000000	nop; delay slot nop
  795  000017e8          	L39_LF2:
  796  000017e8  8fc2fff4	lw	r2,-12(r30)
  797  000017ec  20410001	addi	r1,r2,#1
  798  000017f0  00011020	add	r2,r0,r1
  799  000017f4  afc2fff4	sw	-12(r30),r2
  800  000017f8  0bffffc8	j	L37_LF2
  801  000017fc  54000000	nop; delay slot nop
  802  00001800          	L38_LF2:
  803  00001800  8fc1fff4	lw	r1,-12(r30)
  804  00001804  08000004	j	L36_LF2
  805  00001808  54000000	nop; delay slot nop
  806  0000180c          	L36_LF2:
  807  0000180c  8fa20000	lw	r2,0(r29)
  808  00001810  8fdffff8	lw	r31,-8(r30)
  809  00001814  001ee820	add	r29,r0,r30
  810  00001818  8fdefffc	lw	r30,-4(r30)
  811  0000181c  4be00000	jr	r31
  812  00001820  54000000	nop
  813  00001824          	.endproc _dstrlen
  814  00001824          	.align 2
  815  00001824          	.proc _dstrstr
  816  00001824          	.global _dstrstr
  817  00001824          	_dstrstr:
  818                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  819  00001824  afbefffc	sw	-4(r29),r30; push fp
  820  00001828  001df020	add	r30,r0,r29; fp = sp
  821  0000182c  afbffff8	sw	-8(r29),r31; push ret addr
  822  00001830  2fbd0018	subui	r29,r29,#24; alloc local storage
  823  00001834  afa20000	sw	0(r29),r2
  824  00001838  23bdfff8	addi	r29,r29,#-8
  825  0000183c  001d0820	add	r1,r0,r29
  826  00001840  8fc20004	lw	r2,4(r30)
  827  00001844  ac220000	sw	(r1),r2
  828  00001848  0fffff5c	jal	_dstrlen
  829  0000184c  54000000	nop; delay slot nop
  830  00001850  23bd0008	addi	r29,r29,#8
  831  00001854  afc1fff4	sw	-12(r30),r1
  832  00001858          	L41_LF2:
  833  00001858  8fc10000	lw	r1,(r30)
  834  0000185c  90220000	lbu	r2,(r1)
  835  00001860  64410000	snei	r1,r2,#0
  836  00001864  1420000c	bnez	r1,L43_LF2
  837  00001868  54000000	nop; delay slot nop
  838  0000186c  08000060	j	L42_LF2
  839  00001870  54000000	nop; delay slot nop
  840  00001874          	L43_LF2:
  841  00001874  23bdfff0	addi	r29,r29,#-16
  842  00001878  001d0820	add	r1,r0,r29
  843  0000187c  8fc20000	lw	r2,(r30)
  844  00001880  ac220000	sw	(r1),r2
  845  00001884  8fc20004	lw	r2,4(r30)
  846  00001888  ac220004	sw	4(r1),r2
  847  0000188c  8fc2fff4	lw	r2,-12(r30)
  848  00001890  ac220008	sw	8(r1),r2
  849  00001894  0ffffdc0	jal	_dstrncmp
  850  00001898  54000000	nop; delay slot nop
  851  0000189c  23bd0010	addi	r29,r29,#16
  852  000018a0  64220000	snei	r2,r1,#0
  853  000018a4  14400010	bnez	r2,L44_LF2
  854  000018a8  54000000	nop; delay slot nop
  855  000018ac  8fc10000	lw	r1,(r30)
  856  000018b0  08000028	j	L40_LF2
  857  000018b4  54000000	nop; delay slot nop
  858  000018b8          	L44_LF2:
  859  000018b8  8fc20000	lw	r2,(r30)
  860  000018bc  20410001	addi	r1,r2,#1
  861  000018c0  00011020	add	r2,r0,r1
  862  000018c4  afc20000	sw	(r30),r2
  863  000018c8  0bffff8c	j	L41_LF2
  864  000018cc  54000000	nop; delay slot nop
  865  000018d0          	L42_LF2:
  866  000018d0  20010000	addi	r1,r0,#0
  867  000018d4  08000004	j	L40_LF2
  868  000018d8  54000000	nop; delay slot nop
  869  000018dc          	L40_LF2:
  870  000018dc  8fa20000	lw	r2,0(r29)
  871  000018e0  8fdffff8	lw	r31,-8(r30)
  872  000018e4  001ee820	add	r29,r0,r30
  873  000018e8  8fdefffc	lw	r30,-4(r30)
  874  000018ec  4be00000	jr	r31
  875  000018f0  54000000	nop
  876  000018f4          	.endproc _dstrstr
  877  000018f4          	.align 2
  878  000018f4          	.proc _dmindex
  879  000018f4          	.global _dmindex
  880  000018f4          	_dmindex:
  881                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  882  000018f4  afbefffc	sw	-4(r29),r30; push fp
  883  000018f8  001df020	add	r30,r0,r29; fp = sp
  884  000018fc  afbffff8	sw	-8(r29),r31; push ret addr
  885  00001900  2fbd0018	subui	r29,r29,#24; alloc local storage
  886  00001904  afa20000	sw	0(r29),r2
  887  00001908  54000000	nop
  888  0000190c          	L46_LF2:
  889  0000190c  8fc10000	lw	r1,(r30)
  890  00001910  90220000	lbu	r2,(r1)
  891  00001914  64410000	snei	r1,r2,#0
  892  00001918  1420000c	bnez	r1,L48_LF2
  893  0000191c  54000000	nop; delay slot nop
  894  00001920  08000070	j	L47_LF2
  895  00001924  54000000	nop; delay slot nop
  896  00001928          	L48_LF2:
  897  00001928  8fc10004	lw	r1,4(r30)
  898  0000192c  afc1fff4	sw	-12(r30),r1
  899  00001930          	L49_LF2:
  900  00001930  8fc1fff4	lw	r1,-12(r30)
  901  00001934  90220000	lbu	r2,(r1)
  902  00001938  64410000	snei	r1,r2,#0
  903  0000193c  1420000c	bnez	r1,L52_LF2
  904  00001940  54000000	nop; delay slot nop
  905  00001944  08000044	j	L50_LF2
  906  00001948  54000000	nop; delay slot nop
  907  0000194c          	L52_LF2:
  908  0000194c  8fc10000	lw	r1,(r30)
  909  00001950  8fc2fff4	lw	r2,-12(r30)
  910  00001954  90210000	lbu	r1,(r1)
  911  00001958  90420000	lbu	r2,(r2)
  912  0000195c  00220828	seq	r1,r1,r2
  913  00001960  10200010	beqz	r1,L51_LF2
  914  00001964  54000000	nop; delay slot nop
  915  00001968  8fc10000	lw	r1,(r30)
  916  0000196c  08000030	j	L45_LF2
  917  00001970  54000000	nop; delay slot nop
  918  00001974          	L53_LF2:
  919  00001974          	L51_LF2:
  920  00001974  8fc2fff4	lw	r2,-12(r30)
  921  00001978  20410001	addi	r1,r2,#1
  922  0000197c  00011020	add	r2,r0,r1
  923  00001980  afc2fff4	sw	-12(r30),r2
  924  00001984  0bffffa8	j	L49_LF2
  925  00001988  54000000	nop; delay slot nop
  926  0000198c          	L50_LF2:
  927  0000198c  0bffff7c	j	L46_LF2
  928  00001990  54000000	nop; delay slot nop
  929  00001994          	L47_LF2:
  930  00001994  20010000	addi	r1,r0,#0
  931  00001998  08000004	j	L45_LF2
  932  0000199c  54000000	nop; delay slot nop
  933  000019a0          	L45_LF2:
  934  000019a0  8fa20000	lw	r2,0(r29)
  935  000019a4  8fdffff8	lw	r31,-8(r30)
  936  000019a8  001ee820	add	r29,r0,r30
  937  000019ac  8fdefffc	lw	r30,-4(r30)
  938  000019b0  4be00000	jr	r31
  939  000019b4  54000000	nop
  940  000019b8          	.endproc _dmindex
  941  000019b8          	.align 2
  942  000019b8          	.proc _dindex
  943  000019b8          	.global _dindex
  944  000019b8          	_dindex:
  945                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  946  000019b8  afbefffc	sw	-4(r29),r30; push fp
  947  000019bc  001df020	add	r30,r0,r29; fp = sp
  948  000019c0  afbffff8	sw	-8(r29),r31; push ret addr
  949  000019c4  2fbd0010	subui	r29,r29,#16; alloc local storage
  950  000019c8  afa20000	sw	0(r29),r2
  951  000019cc  54000000	nop
  952  000019d0          	L55_LF2:
  953  000019d0  8fc10000	lw	r1,(r30)
  954  000019d4  90220000	lbu	r2,(r1)
  955  000019d8  64410000	snei	r1,r2,#0
  956  000019dc  1420000c	bnez	r1,L57_LF2
  957  000019e0  54000000	nop; delay slot nop
  958  000019e4  08000040	j	L56_LF2
  959  000019e8  54000000	nop; delay slot nop
  960  000019ec          	L57_LF2:
  961  000019ec  8fc10000	lw	r1,(r30)
  962  000019f0  90220000	lbu	r2,(r1)
  963  000019f4  8fc10004	lw	r1,4(r30)
  964  000019f8  00411028	seq	r2,r2,r1
  965  000019fc  10400010	beqz	r2,L58_LF2
  966  00001a00  54000000	nop; delay slot nop
  967  00001a04  8fc10000	lw	r1,(r30)
  968  00001a08  08000028	j	L54_LF2
  969  00001a0c  54000000	nop; delay slot nop
  970  00001a10          	L58_LF2:
  971  00001a10  8fc20000	lw	r2,(r30)
  972  00001a14  20410001	addi	r1,r2,#1
  973  00001a18  00011020	add	r2,r0,r1
  974  00001a1c  afc20000	sw	(r30),r2
  975  00001a20  0bffffac	j	L55_LF2
  976  00001a24  54000000	nop; delay slot nop
  977  00001a28          	L56_LF2:
  978  00001a28  20010000	addi	r1,r0,#0
  979  00001a2c  08000004	j	L54_LF2
  980  00001a30  54000000	nop; delay slot nop
  981  00001a34          	L54_LF2:
  982  00001a34  8fa20000	lw	r2,0(r29)
  983  00001a38  8fdffff8	lw	r31,-8(r30)
  984  00001a3c  001ee820	add	r29,r0,r30
  985  00001a40  8fdefffc	lw	r30,-4(r30)
  986  00001a44  4be00000	jr	r31
  987  00001a48  54000000	nop
  988  00001a4c          	.endproc _dindex
  989  00001a4c          	.align 2
  990  00001a4c          	.proc _ditoa
  991  00001a4c          	.global _ditoa
  992  00001a4c          	_ditoa:
  993                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  994  00001a4c  afbefffc	sw	-4(r29),r30; push fp
  995  00001a50  001df020	add	r30,r0,r29; fp = sp
  996  00001a54  afbffff8	sw	-8(r29),r31; push ret addr
  997  00001a58  2fbd0018	subui	r29,r29,#24; alloc local storage
  998  00001a5c  afa20000	sw	0(r29),r2
  999  00001a60  afa30004	sw	4(r29),r3
 1000  00001a64  8fc10000	lw	r1,(r30)
 1001  00001a68  68220000	slti	r2,r1,#0
 1002  00001a6c  1040002c	beqz	r2,L60_LF2
 1003  00001a70  54000000	nop; delay slot nop
 1004  00001a74  8fc10004	lw	r1,4(r30)
 1005  00001a78  20220001	addi	r2,r1,#1
 1006  00001a7c  afc20004	sw	4(r30),r2
 1007  00001a80  2002002d	addi	r2,r0,(#0x2d)&0xff
 1008  00001a84  a0220000	sb	(r1),r2
 1009  00001a88  8fc10000	lw	r1,(r30)
 1010  00001a8c  00011022	sub	r2,r0,r1
 1011  00001a90  afc20000	sw	(r30),r2
 1012  00001a94  08000118	j	L61_LF2
 1013  00001a98  54000000	nop; delay slot nop
 1014  00001a9c          	L60_LF2:
 1015  00001a9c  8fc10000	lw	r1,(r30)
 1016  00001aa0  64220000	snei	r2,r1,#0
 1017  00001aa4  14400020	bnez	r2,L62_LF2
 1018  00001aa8  54000000	nop; delay slot nop
 1019  00001aac  8fc10004	lw	r1,4(r30)
 1020  00001ab0  20220001	addi	r2,r1,#1
 1021  00001ab4  afc20004	sw	4(r30),r2
 1022  00001ab8  20020030	addi	r2,r0,(#0x30)&0xff
 1023  00001abc  a0220000	sb	(r1),r2
 1024  00001ac0  080000ec	j	L61_LF2
 1025  00001ac4  54000000	nop; delay slot nop
 1026  00001ac8          	L62_LF2:
 1027  00001ac8  20010001	addi	r1,r0,#1
 1028  00001acc  afc1fff4	sw	-12(r30),r1
 1029  00001ad0          	L64_LF2:
 1030  00001ad0  8fc1fff4	lw	r1,-12(r30)
 1031  00001ad4  8fc20000	lw	r2,(r30)
 1032  00001ad8  0022082c	sle	r1,r1,r2
 1033  00001adc  1420000c	bnez	r1,L66_LF2
 1034  00001ae0  54000000	nop; delay slot nop
 1035  00001ae4  08000024	j	L65_LF2
 1036  00001ae8  54000000	nop; delay slot nop
 1037  00001aec          	L67_LF2:
 1038  00001aec          	L66_LF2:
 1039  00001aec  8fc1fff4	lw	r1,-12(r30)
 1040  00001af0  00011820	add	r3,r0,r1
 1041  00001af4  50620002	slli	r2,r3,#0x2
 1042  00001af8  00411020	add	r2,r2,r1
 1043  00001afc  50410001	slli	r1,r2,#0x1
 1044  00001b00  afc1fff4	sw	-12(r30),r1
 1045  00001b04  0bffffc8	j	L64_LF2
 1046  00001b08  54000000	nop; delay slot nop
 1047  00001b0c          	L65_LF2:
 1048  00001b0c  54000000	nop
 1049  00001b10          	L68_LF2:
 1050  00001b10  8fc1fff4	lw	r1,-12(r30)
 1051  00001b14  2002000a	addi	r2,r0,#10
 1052  00001b18  00200035	movi2fp	f0,r1
 1053  00001b1c  00400835	movi2fp	f1,r2
 1054  00001b20  0401000f	div	f0,f0,f1
 1055  00001b24  00000834	movfp2i	r1,f0
 1056  00001b28  afc1fff4	sw	-12(r30),r1
 1057  00001b2c  8fc10004	lw	r1,4(r30)
 1058  00001b30  20220001	addi	r2,r1,#1
 1059  00001b34  afc20004	sw	4(r30),r2
 1060  00001b38  8fc20000	lw	r2,(r30)
 1061  00001b3c  8fc3fff4	lw	r3,-12(r30)
 1062  00001b40  00400035	movi2fp	f0,r2
 1063  00001b44  00600835	movi2fp	f1,r3
 1064  00001b48  0401000f	div	f0,f0,f1
 1065  00001b4c  00001034	movfp2i	r2,f0
 1066  00001b50  00021820	add	r3,r0,r2
 1067  00001b54  20620030	addi	r2,r3,#48
 1068  00001b58  a0220000	sb	(r1),r2
 1069  00001b5c  8fc10000	lw	r1,(r30)
 1070  00001b60  8fc3fff4	lw	r3,-12(r30)
 1071  00001b64  00200035	movi2fp	f0,r1
 1072  00001b68  00600835	movi2fp	f1,r3
 1073  00001b6c  0401000f	div	f0,f0,f1
 1074  00001b70  00001034	movfp2i	r2,f0
 1075  00001b74  8fc3fff4	lw	r3,-12(r30)
 1076  00001b78  00400035	movi2fp	f0,r2
 1077  00001b7c  00600835	movi2fp	f1,r3
 1078  00001b80  0401000e	mult	f0,f0,f1
 1079  00001b84  00001034	movfp2i	r2,f0
 1080  00001b88  00220822	sub	r1,r1,r2
 1081  00001b8c  afc10000	sw	(r30),r1
 1082  00001b90          	L70_LF2:
 1083  00001b90  8fc1fff4	lw	r1,-12(r30)
 1084  00001b94  6c220001	sgti	r2,r1,#1
 1085  00001b98  1440000c	bnez	r2,L71_LF2
 1086  00001b9c  54000000	nop; delay slot nop
 1087  00001ba0  0800000c	j	L61_LF2
 1088  00001ba4  54000000	nop; delay slot nop
 1089  00001ba8          	L71_LF2:
 1090  00001ba8  0bffff64	j	L68_LF2
 1091  00001bac  54000000	nop; delay slot nop
 1092  00001bb0          	L69_LF2:
 1093  00001bb0          	L63_LF2:
 1094  00001bb0          	L61_LF2:
 1095  00001bb0  8fc10004	lw	r1,4(r30)
 1096  00001bb4  20020000	addi	r2,r0,(#0x0)&0xff
 1097  00001bb8  a0220000	sb	(r1),r2
 1098  00001bbc          	L59_LF2:
 1099  00001bbc  8fa20000	lw	r2,0(r29)
 1100  00001bc0  8fa30004	lw	r3,4(r29)
 1101  00001bc4  8fdffff8	lw	r31,-8(r30)
 1102  00001bc8  001ee820	add	r29,r0,r30
 1103  00001bcc  8fdefffc	lw	r30,-4(r30)
 1104  00001bd0  4be00000	jr	r31
 1105  00001bd4  54000000	nop
 1106  00001bd8          	.endproc _ditoa
 1107  00001bd8          	.align 2
 1108  00001bd8          	.proc _dstrtol
 1109  00001bd8          	.global _dstrtol
 1110  00001bd8          	_dstrtol:
 1111                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1112  00001bd8  afbefffc	sw	-4(r29),r30; push fp
 1113  00001bdc  001df020	add	r30,r0,r29; fp = sp
 1114  00001be0  afbffff8	sw	-8(r29),r31; push ret addr
 1115  00001be4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1116  00001be8  afa20000	sw	0(r29),r2
 1117  00001bec  20010000	addi	r1,r0,#0
 1118  00001bf0  afc1fff4	sw	-12(r30),r1
 1119  00001bf4          	L73_LF2:
 1120  00001bf4  8fc10000	lw	r1,(r30)
 1121  00001bf8  90220000	lbu	r2,(r1)
 1122  00001bfc  60410020	seqi	r1,r2,#32
 1123  00001c00  14200034	bnez	r1,L75_LF2
 1124  00001c04  54000000	nop; delay slot nop
 1125  00001c08  8fc10000	lw	r1,(r30)
 1126  00001c0c  90220000	lbu	r2,(r1)
 1127  00001c10  60410009	seqi	r1,r2,#9
 1128  00001c14  14200020	bnez	r1,L75_LF2
 1129  00001c18  54000000	nop; delay slot nop
 1130  00001c1c  8fc10000	lw	r1,(r30)
 1131  00001c20  90220000	lbu	r2,(r1)
 1132  00001c24  6041000a	seqi	r1,r2,#10
 1133  00001c28  1420000c	bnez	r1,L75_LF2
 1134  00001c2c  54000000	nop; delay slot nop
 1135  00001c30  0800001c	j	L74_LF2
 1136  00001c34  54000000	nop; delay slot nop
 1137  00001c38          	L75_LF2:
 1138  00001c38  8fc20000	lw	r2,(r30)
 1139  00001c3c  20410001	addi	r1,r2,#1
 1140  00001c40  00011020	add	r2,r0,r1
 1141  00001c44  afc20000	sw	(r30),r2
 1142  00001c48  0bffffa8	j	L73_LF2
 1143  00001c4c  54000000	nop; delay slot nop
 1144  00001c50          	L74_LF2:
 1145  00001c50  8fc10004	lw	r1,4(r30)
 1146  00001c54  64220000	snei	r2,r1,#0
 1147  00001c58  10400010	beqz	r2,L76_LF2
 1148  00001c5c  54000000	nop; delay slot nop
 1149  00001c60  8fc10004	lw	r1,4(r30)
 1150  00001c64  8fc20000	lw	r2,(r30)
 1151  00001c68  ac220000	sw	(r1),r2
 1152  00001c6c          	L76_LF2:
 1153  00001c6c  8fc10000	lw	r1,(r30)
 1154  00001c70  90220000	lbu	r2,(r1)
 1155  00001c74  64410000	snei	r1,r2,#0
 1156  00001c78  14200010	bnez	r1,L77_LF2
 1157  00001c7c  54000000	nop; delay slot nop
 1158  00001c80  8fc1fff4	lw	r1,-12(r30)
 1159  00001c84  08000294	j	L72_LF2
 1160  00001c88  54000000	nop; delay slot nop
 1161  00001c8c          	L77_LF2:
 1162  00001c8c  8fc10000	lw	r1,(r30)
 1163  00001c90  90220000	lbu	r2,(r1)
 1164  00001c94  6041002d	seqi	r1,r2,#45
 1165  00001c98  10200024	beqz	r1,L78_LF2
 1166  00001c9c  54000000	nop; delay slot nop
 1167  00001ca0  2001ffff	addi	r1,r0,#-1
 1168  00001ca4  afc1ffec	sw	-20(r30),r1
 1169  00001ca8  8fc20000	lw	r2,(r30)
 1170  00001cac  20410001	addi	r1,r2,#1
 1171  00001cb0  00011020	add	r2,r0,r1
 1172  00001cb4  afc20000	sw	(r30),r2
 1173  00001cb8  0800000c	j	L79_LF2
 1174  00001cbc  54000000	nop; delay slot nop
 1175  00001cc0          	L78_LF2:
 1176  00001cc0  20010001	addi	r1,r0,#1
 1177  00001cc4  afc1ffec	sw	-20(r30),r1
 1178  00001cc8          	L79_LF2:
 1179  00001cc8  8fc10008	lw	r1,8(r30)
 1180  00001ccc  64220000	snei	r2,r1,#0
 1181  00001cd0  14400090	bnez	r2,L80_LF2
 1182  00001cd4  54000000	nop; delay slot nop
 1183  00001cd8  8fc10000	lw	r1,(r30)
 1184  00001cdc  90220000	lbu	r2,(r1)
 1185  00001ce0  60410030	seqi	r1,r2,#48
 1186  00001ce4  10200074	beqz	r1,L81_LF2
 1187  00001ce8  54000000	nop; delay slot nop
 1188  00001cec  8fc20000	lw	r2,(r30)
 1189  00001cf0  20410001	addi	r1,r2,#1
 1190  00001cf4  00011020	add	r2,r0,r1
 1191  00001cf8  afc20000	sw	(r30),r2
 1192  00001cfc  8fc10000	lw	r1,(r30)
 1193  00001d00  90220000	lbu	r2,(r1)
 1194  00001d04  60410078	seqi	r1,r2,#120
 1195  00001d08  14200020	bnez	r1,L83_LF2
 1196  00001d0c  54000000	nop; delay slot nop
 1197  00001d10  8fc10000	lw	r1,(r30)
 1198  00001d14  90220000	lbu	r2,(r1)
 1199  00001d18  60410058	seqi	r1,r2,#88
 1200  00001d1c  1420000c	bnez	r1,L83_LF2
 1201  00001d20  54000000	nop; delay slot nop
 1202  00001d24  08000024	j	L82_LF2
 1203  00001d28  54000000	nop; delay slot nop
 1204  00001d2c          	L83_LF2:
 1205  00001d2c  20010010	addi	r1,r0,#16
 1206  00001d30  afc10008	sw	8(r30),r1
 1207  00001d34  8fc20000	lw	r2,(r30)
 1208  00001d38  20410001	addi	r1,r2,#1
 1209  00001d3c  00011020	add	r2,r0,r1
 1210  00001d40  afc20000	sw	(r30),r2
 1211  00001d44  0800000c	j	L84_LF2
 1212  00001d48  54000000	nop; delay slot nop
 1213  00001d4c          	L82_LF2:
 1214  00001d4c  20010008	addi	r1,r0,#8
 1215  00001d50  afc10008	sw	8(r30),r1
 1216  00001d54          	L84_LF2:
 1217  00001d54  0800000c	j	L80_LF2
 1218  00001d58  54000000	nop; delay slot nop
 1219  00001d5c          	L81_LF2:
 1220  00001d5c  2001000a	addi	r1,r0,#10
 1221  00001d60  afc10008	sw	8(r30),r1
 1222  00001d64          	L85_LF2:
 1223  00001d64          	L80_LF2:
 1224  00001d64  8fc10008	lw	r1,8(r30)
 1225  00001d68  70220000	slei	r2,r1,#0
 1226  00001d6c  1440001c	bnez	r2,L87_LF2
 1227  00001d70  54000000	nop; delay slot nop
 1228  00001d74  8fc10008	lw	r1,8(r30)
 1229  00001d78  6c220010	sgti	r2,r1,#16
 1230  00001d7c  1440000c	bnez	r2,L87_LF2
 1231  00001d80  54000000	nop; delay slot nop
 1232  00001d84  08000010	j	L86_LF2
 1233  00001d88  54000000	nop; delay slot nop
 1234  00001d8c          	L87_LF2:
 1235  00001d8c  8fc1fff4	lw	r1,-12(r30)
 1236  00001d90  08000188	j	L72_LF2
 1237  00001d94  54000000	nop; delay slot nop
 1238  00001d98          	L86_LF2:
 1239  00001d98  54000000	nop
 1240  00001d9c          	L88_LF2:
 1241  00001d9c  8fc10000	lw	r1,(r30)
 1242  00001da0  90220000	lbu	r2,(r1)
 1243  00001da4  6c41002f	sgtui	r1,r2,#47
 1244  00001da8  10200030	beqz	r1,L91_LF2
 1245  00001dac  54000000	nop; delay slot nop
 1246  00001db0  8fc10000	lw	r1,(r30)
 1247  00001db4  90220000	lbu	r2,(r1)
 1248  00001db8  70410039	sleui	r1,r2,#57
 1249  00001dbc  1020001c	beqz	r1,L91_LF2
 1250  00001dc0  54000000	nop; delay slot nop
 1251  00001dc4  8fc10000	lw	r1,(r30)
 1252  00001dc8  90220000	lbu	r2,(r1)
 1253  00001dcc  2041ffd0	addi	r1,r2,#-48
 1254  00001dd0  afc1fff0	sw	-16(r30),r1
 1255  00001dd4  0800008c	j	L92_LF2
 1256  00001dd8  54000000	nop; delay slot nop
 1257  00001ddc          	L91_LF2:
 1258  00001ddc  8fc10000	lw	r1,(r30)
 1259  00001de0  90220000	lbu	r2,(r1)
 1260  00001de4  6c410060	sgtui	r1,r2,#96
 1261  00001de8  10200030	beqz	r1,L93_LF2
 1262  00001dec  54000000	nop; delay slot nop
 1263  00001df0  8fc10000	lw	r1,(r30)
 1264  00001df4  90220000	lbu	r2,(r1)
 1265  00001df8  7041007a	sleui	r1,r2,#122
 1266  00001dfc  1020001c	beqz	r1,L93_LF2
 1267  00001e00  54000000	nop; delay slot nop
 1268  00001e04  8fc10000	lw	r1,(r30)
 1269  00001e08  90220000	lbu	r2,(r1)
 1270  00001e0c  2041ffa9	addi	r1,r2,#-87
 1271  00001e10  afc1fff0	sw	-16(r30),r1
 1272  00001e14  0800004c	j	L92_LF2
 1273  00001e18  54000000	nop; delay slot nop
 1274  00001e1c          	L93_LF2:
 1275  00001e1c  8fc10000	lw	r1,(r30)
 1276  00001e20  90220000	lbu	r2,(r1)
 1277  00001e24  6c410040	sgtui	r1,r2,#64
 1278  00001e28  10200030	beqz	r1,L95_LF2
 1279  00001e2c  54000000	nop; delay slot nop
 1280  00001e30  8fc10000	lw	r1,(r30)
 1281  00001e34  90220000	lbu	r2,(r1)
 1282  00001e38  7041005a	sleui	r1,r2,#90
 1283  00001e3c  1020001c	beqz	r1,L95_LF2
 1284  00001e40  54000000	nop; delay slot nop
 1285  00001e44  8fc10000	lw	r1,(r30)
 1286  00001e48  90220000	lbu	r2,(r1)
 1287  00001e4c  2041ffc9	addi	r1,r2,#-55
 1288  00001e50  afc1fff0	sw	-16(r30),r1
 1289  00001e54  0800000c	j	L92_LF2
 1290  00001e58  54000000	nop; delay slot nop
 1291  00001e5c          	L95_LF2:
 1292  00001e5c  200103e8	addi	r1,r0,#1000
 1293  00001e60  afc1fff0	sw	-16(r30),r1
 1294  00001e64          	L96_LF2:
 1295  00001e64          	L94_LF2:
 1296  00001e64          	L92_LF2:
 1297  00001e64  8fc1fff0	lw	r1,-16(r30)
 1298  00001e68  8fc20008	lw	r2,8(r30)
 1299  00001e6c  0022082a	slt	r1,r1,r2
 1300  00001e70  10200040	beqz	r1,L90_LF2
 1301  00001e74  54000000	nop; delay slot nop
 1302  00001e78  8fc1fff4	lw	r1,-12(r30)
 1303  00001e7c  8fc20008	lw	r2,8(r30)
 1304  00001e80  00200035	movi2fp	f0,r1
 1305  00001e84  00400835	movi2fp	f1,r2
 1306  00001e88  0401000e	mult	f0,f0,f1
 1307  00001e8c  00000834	movfp2i	r1,f0
 1308  00001e90  afc1fff4	sw	-12(r30),r1
 1309  00001e94  8fc1fff4	lw	r1,-12(r30)
 1310  00001e98  8fc2fff0	lw	r2,-16(r30)
 1311  00001e9c  00220820	add	r1,r1,r2
 1312  00001ea0  afc1fff4	sw	-12(r30),r1
 1313  00001ea4  8fc20000	lw	r2,(r30)
 1314  00001ea8  20410001	addi	r1,r2,#1
 1315  00001eac  00011020	add	r2,r0,r1
 1316  00001eb0  afc20000	sw	(r30),r2
 1317  00001eb4          	L97_LF2:
 1318  00001eb4          	L90_LF2:
 1319  00001eb4  8fc1fff0	lw	r1,-16(r30)
 1320  00001eb8  8fc20008	lw	r2,8(r30)
 1321  00001ebc  0022082a	slt	r1,r1,r2
 1322  00001ec0  1420000c	bnez	r1,L98_LF2
 1323  00001ec4  54000000	nop; delay slot nop
 1324  00001ec8  0800000c	j	L89_LF2
 1325  00001ecc  54000000	nop; delay slot nop
 1326  00001ed0          	L98_LF2:
 1327  00001ed0  0bfffec8	j	L88_LF2
 1328  00001ed4  54000000	nop; delay slot nop
 1329  00001ed8          	L89_LF2:
 1330  00001ed8  8fc10004	lw	r1,4(r30)
 1331  00001edc  64220000	snei	r2,r1,#0
 1332  00001ee0  10400010	beqz	r2,L99_LF2
 1333  00001ee4  54000000	nop; delay slot nop
 1334  00001ee8  8fc10004	lw	r1,4(r30)
 1335  00001eec  8fc20000	lw	r2,(r30)
 1336  00001ef0  ac220000	sw	(r1),r2
 1337  00001ef4          	L99_LF2:
 1338  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1339  00001ef8  8fc2ffec	lw	r2,-20(r30)
 1340  00001efc  00200035	movi2fp	f0,r1
 1341  00001f00  00400835	movi2fp	f1,r2
 1342  00001f04  0401000e	mult	f0,f0,f1
 1343  00001f08  00000834	movfp2i	r1,f0
 1344  00001f0c  afc1fff4	sw	-12(r30),r1
 1345  00001f10  8fc1fff4	lw	r1,-12(r30)
 1346  00001f14  08000004	j	L72_LF2
 1347  00001f18  54000000	nop; delay slot nop
 1348  00001f1c          	L72_LF2:
 1349  00001f1c  8fa20000	lw	r2,0(r29)
 1350  00001f20  8fdffff8	lw	r31,-8(r30)
 1351  00001f24  001ee820	add	r29,r0,r30
 1352  00001f28  8fdefffc	lw	r30,-4(r30)
 1353  00001f2c  4be00000	jr	r31
 1354  00001f30  54000000	nop
 1355  00001f34          	.endproc _dstrtol
 1356  00001f34          	.align 2
 1357  00001f34          	.proc _bcopy
 1358  00001f34          	.global _bcopy
 1359  00001f34          	_bcopy:
 1360                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1361  00001f34  afbefffc	sw	-4(r29),r30; push fp
 1362  00001f38  001df020	add	r30,r0,r29; fp = sp
 1363  00001f3c  afbffff8	sw	-8(r29),r31; push ret addr
 1364  00001f40  2fbd0010	subui	r29,r29,#16; alloc local storage
 1365  00001f44  afa20000	sw	0(r29),r2
 1366  00001f48  afa30004	sw	4(r29),r3
 1367  00001f4c  54000000	nop
 1368  00001f50          	L101_LF2:
 1369  00001f50  8fc10008	lw	r1,8(r30)
 1370  00001f54  2022ffff	addi	r2,r1,#-1
 1371  00001f58  afc20008	sw	8(r30),r2
 1372  00001f5c  6c210000	sgti	r1,r1,#0
 1373  00001f60  1420000c	bnez	r1,L103_LF2
 1374  00001f64  54000000	nop; delay slot nop
 1375  00001f68  0800002c	j	L102_LF2
 1376  00001f6c  54000000	nop; delay slot nop
 1377  00001f70          	L103_LF2:
 1378  00001f70  8fc10004	lw	r1,4(r30)
 1379  00001f74  20220001	addi	r2,r1,#1
 1380  00001f78  afc20004	sw	4(r30),r2
 1381  00001f7c  8fc20000	lw	r2,(r30)
 1382  00001f80  20430001	addi	r3,r2,#1
 1383  00001f84  afc30000	sw	(r30),r3
 1384  00001f88  80420000	lb	r2,(r2)
 1385  00001f8c  a0220000	sb	(r1),r2
 1386  00001f90  0bffffbc	j	L101_LF2
 1387  00001f94  54000000	nop; delay slot nop
 1388  00001f98          	L102_LF2:
 1389  00001f98          	L100_LF2:
 1390  00001f98  8fa20000	lw	r2,0(r29)
 1391  00001f9c  8fa30004	lw	r3,4(r29)
 1392  00001fa0  8fdffff8	lw	r31,-8(r30)
 1393  00001fa4  001ee820	add	r29,r0,r30
 1394  00001fa8  8fdefffc	lw	r30,-4(r30)
 1395  00001fac  4be00000	jr	r31
 1396  00001fb0  54000000	nop
 1397  00001fb4          	.endproc _bcopy
 1398  00001fb4          	.align 2
 1399  00001fb4          	.proc _bzero
 1400  00001fb4          	.global _bzero
 1401  00001fb4          	_bzero:
 1402                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1403  00001fb4  afbefffc	sw	-4(r29),r30; push fp
 1404  00001fb8  001df020	add	r30,r0,r29; fp = sp
 1405  00001fbc  afbffff8	sw	-8(r29),r31; push ret addr
 1406  00001fc0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1407  00001fc4  afa20000	sw	0(r29),r2
 1408  00001fc8  54000000	nop
 1409  00001fcc          	L105_LF2:
 1410  00001fcc  8fc10004	lw	r1,4(r30)
 1411  00001fd0  2022ffff	addi	r2,r1,#-1
 1412  00001fd4  afc20004	sw	4(r30),r2
 1413  00001fd8  6c210000	sgti	r1,r1,#0
 1414  00001fdc  1420000c	bnez	r1,L107_LF2
 1415  00001fe0  54000000	nop; delay slot nop
 1416  00001fe4  08000020	j	L106_LF2
 1417  00001fe8  54000000	nop; delay slot nop
 1418  00001fec          	L107_LF2:
 1419  00001fec  8fc10000	lw	r1,(r30)
 1420  00001ff0  20220001	addi	r2,r1,#1
 1421  00001ff4  afc20000	sw	(r30),r2
 1422  00001ff8  20020000	addi	r2,r0,(#0x0)&0xff
 1423  00001ffc  a0220000	sb	(r1),r2
 1424  00002000  0bffffc8	j	L105_LF2
 1425  00002004  54000000	nop; delay slot nop
 1426  00002008          	L106_LF2:
 1427  00002008          	L104_LF2:
 1428  00002008  8fa20000	lw	r2,0(r29)
 1429  0000200c  8fdffff8	lw	r31,-8(r30)
 1430  00002010  001ee820	add	r29,r0,r30
 1431  00002014  8fdefffc	lw	r30,-4(r30)
 1432  00002018  4be00000	jr	r31
 1433  0000201c  54000000	nop
 1434  00002020          	.endproc _bzero
 1435  00002020          	.align 2
 1436  00002020          	.proc _min
 1437  00002020          	.global _min
 1438  00002020          	_min:
 1439                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1440  00002020  afbefffc	sw	-4(r29),r30; push fp
 1441  00002024  001df020	add	r30,r0,r29; fp = sp
 1442  00002028  afbffff8	sw	-8(r29),r31; push ret addr
 1443  0000202c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1444  00002030  afa20000	sw	0(r29),r2
 1445  00002034  afa30004	sw	4(r29),r3
 1446  00002038  8fc10000	lw	r1,(r30)
 1447  0000203c  8fc20004	lw	r2,4(r30)
 1448  00002040  0022182c	sle	r3,r1,r2
 1449  00002044  14600008	bnez	r3,L109_LF2
 1450  00002048  54000000	nop; delay slot nop
 1451  0000204c  8fc10004	lw	r1,4(r30)
 1452  00002050          	L109_LF2:
 1453  00002050  08000004	j	L108_LF2
 1454  00002054  54000000	nop; delay slot nop
 1455  00002058          	L108_LF2:
 1456  00002058  8fa20000	lw	r2,0(r29)
 1457  0000205c  8fa30004	lw	r3,4(r29)
 1458  00002060  8fdffff8	lw	r31,-8(r30)
 1459  00002064  001ee820	add	r29,r0,r30
 1460  00002068  8fdefffc	lw	r30,-4(r30)
 1461  0000206c  4be00000	jr	r31
 1462  00002070  54000000	nop
 1463  00002074          	.endproc _min
 1464  00002074          	.align 2
 1465  00002074          	.proc _max
 1466  00002074          	.global _max
 1467  00002074          	_max:
 1468                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1469  00002074  afbefffc	sw	-4(r29),r30; push fp
 1470  00002078  001df020	add	r30,r0,r29; fp = sp
 1471  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1472  00002080  2fbd0010	subui	r29,r29,#16; alloc local storage
 1473  00002084  afa20000	sw	0(r29),r2
 1474  00002088  afa30004	sw	4(r29),r3
 1475  0000208c  8fc10000	lw	r1,(r30)
 1476  00002090  8fc20004	lw	r2,4(r30)
 1477  00002094  0022182d	sge	r3,r1,r2
 1478  00002098  14600008	bnez	r3,L111_LF2
 1479  0000209c  54000000	nop; delay slot nop
 1480  000020a0  8fc10004	lw	r1,4(r30)
 1481  000020a4          	L111_LF2:
 1482  000020a4  08000004	j	L110_LF2
 1483  000020a8  54000000	nop; delay slot nop
 1484  000020ac          	L110_LF2:
 1485  000020ac  8fa20000	lw	r2,0(r29)
 1486  000020b0  8fa30004	lw	r3,4(r29)
 1487  000020b4  8fdffff8	lw	r31,-8(r30)
 1488  000020b8  001ee820	add	r29,r0,r30
 1489  000020bc  8fdefffc	lw	r30,-4(r30)
 1490  000020c0  4be00000	jr	r31
 1491  000020c4  54000000	nop
 1492  000020c8          	.endproc _max
 1493                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1494                      ;;;
 1495                      ;;; Most of the traps are called in files from libtraps.
 1498  000020c8          	.align 2
 1499  000020c8          	.proc _exit
 1500  000020c8          	.global _exit
 1501  000020c8          	_exit:
 1502  000020c8  44000300	trap	#0x300
 1503  000020cc  4be00000	jr	r31
 1504  000020d0  54000000	nop
 1505  000020d4          	.endproc _exit
 1507                      ; for the benefit of gcc.
 1508  000020d4          	.proc ___main
 1509  000020d4          	.global ___main
 1510  000020d4          	___main:
 1511  000020d4  4be00000	jr	r31
 1512  000020d8  54000000	nop
 1513  000020dc          	.endproc ___main
 1514  000020dc          	.text
 1515  000020dc          	.global _etext
 1516  000020dc          	_etext:
 1517  000020dc          	.align 3
 1518  000020e0          	.data
 1519  0000307e          	.global _edata
 1520  0000307e          	_edata:
