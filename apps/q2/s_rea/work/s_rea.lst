 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 394
    4                      ; Text size: 4940
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_mailbox 1>  <handle_to_mailbox 2> <handle_to_page"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f6d6169	
   82  00003018  6c626f78	
   82  0000301c  20313e20	
   82  00003020  203c6861	
   82  00003024  6e646c65	
   82  00003028  5f746f5f	
   82  0000302c  6d61696c	
   82  00003030  626f7820	
   82  00003034  323e203c	
   82  00003038  68616e64	
   82  0000303c  6c655f74	
   82  00003040  6f5f7061	
   82  00003044  6765    	
   83  00003046  5f6d6170	.ascii "_mapped_semaphore>\n\000"
   83  0000304a  7065645f	
   83  0000304e  73656d61	
   83  00003052  70686f72	
   83  00003056  653e0a00	
   84  0000305a          	.align 2
   85  0000305c          	LC1_LF0:
   86  0000305c  735f7265	.ascii "s_rea (%d): Could not open mailbox %d!\n\000"
   86  00003060  61202825	
   86  00003064  64293a20	
   86  00003068  436f756c	
   86  0000306c  64206e6f	
   86  00003070  74206f70	
   86  00003074  656e206d	
   86  00003078  61696c62	
   86  0000307c  6f782025	
   86  00003080  64210a00	
   87  00003084          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  735f7265	.ascii "s_rea (%d): Could not map the virtual address to the memory!\n\000"
   89  00003088  61202825	
   89  0000308c  64293a20	
   89  00003090  436f756c	
   89  00003094  64206e6f	
   89  00003098  74206d61	
   89  0000309c  70207468	
   89  000030a0  65207669	
   89  000030a4  72747561	
   89  000030a8  6c206164	
   89  000030ac  64726573	
   89  000030b0  7320746f	
   89  000030b4  20746865	
   89  000030b8  206d656d	
   89  000030bc  6f727921	
   89  000030c0  0a00    	
   90  000030c2          	.align 2
   91  000030c4          	LC3_LF0:
   92  000030c4  636f5f72	.ascii "co_rea (%d): Could not map the virtual address to the memory!\n\000"
   92  000030c8  65612028	
   92  000030cc  2564293a	
   92  000030d0  20436f75	
   92  000030d4  6c64206e	
   92  000030d8  6f74206d	
   92  000030dc  61702074	
   92  000030e0  68652076	
   92  000030e4  69727475	
   92  000030e8  616c2061	
   92  000030ec  64647265	
   92  000030f0  73732074	
   92  000030f4  6f207468	
   92  000030f8  65206d65	
   92  000030fc  6d6f7279	
   92  00003100  210a00  	
   93  00003103          	.align 2
   94  00003104          	LC4_LF0:
   95  00003104  5332202d	.ascii "S2 -> S + S reacted, PID: %d\n\000"
   95  00003108  3e205320	
   95  0000310c  2b205320	
   95  00003110  72656163	
   95  00003114  7465642c	
   95  00003118  20504944	
   95  0000311c  3a202564	
   95  00003120  0a00    	
   96  00003122          	.align 2
   97  00003124          	LC5_LF0:
   98  00003124  735f7265	.ascii "s_rea (%d): Could not close mailbox %d!\n\000"
   98  00003128  61202825	
   98  0000312c  64293a20	
   98  00003130  436f756c	
   98  00003134  64206e6f	
   98  00003138  7420636c	
   98  0000313c  6f736520	
   98  00003140  6d61696c	
   98  00003144  626f7820	
   98  00003148  2564210a	
   98  0000314c  00      	
   99  0000314d          	.align 2
  100  00003150          	LC6_LF0:
  101  00003150  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  101  00003154  73656d61	
  101  00003158  70686f72	
  101  0000315c  6520735f	
  101  00003160  70726f63	
  101  00003164  735f636f	
  101  00003168  6d706c65	
  101  0000316c  74656420	
  101  00003170  28256429	
  101  00003174  20696e20	
  101  00003178  00      	
  102  00003179          	.align 2
  103  0000317c          	LC7_LF0:
  104  0000317c  2c206578	.ascii ", exiting...\n\000"
  104  00003180  6974696e	
  104  00003184  672e2e2e	
  104  00003188  0a00    	
  105  0000318a          	.text
  106  000010d4          	.align 2
  107  000010d4          	.proc _main
  108  000010d4          	.global _main
  109  000010d4          	_main:
  110                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  111  000010d4  afbefffc	sw	-4(r29),r30; push fp
  112  000010d8  001df020	add	r30,r0,r29; fp = sp
  113  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  114  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  115  000010e4  8fc20000	lw	r2,(r30)
  116  000010e8  8fc60004	lw	r6,4(r30)
  117  000010ec  0c001254	jal	___main
  118  000010f0  54000000	nop; not filled.
  119  000010f4  20080000	addi	r8,r0,#0
  120  000010f8  afc8fff4	sw	-12(r30),r8
  121  000010fc  64410004	snei	r1,r2,#4
  122  00001100  10200028	beqz	r1,L14_LF0
  123  00001104  54000000	nop; not filled.
  124  00001108  23bdfff8	addi	r29,r29,#-8
  125  0000110c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  126  00001110  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  127  00001114  afa80000	sw	(r29),r8
  128  00001118  0c000378	jal	_Printf
  129  0000111c  54000000	nop; not filled.
  130  00001120  0c000478	jal	_Exit
  131  00001124  54000000	nop; not filled.
  132  00001128  23bd0008	addi	r29,r29,#8
  133  0000112c          	L14_LF0:
  134  0000112c  23bdfff0	addi	r29,r29,#-16
  135  00001130  8cc80004	lw	r8,4(r6)
  136  00001134  afa80000	sw	(r29),r8
  137  00001138  20080000	addi	r8,r0,#0
  138  0000113c  afa80004	sw	4(r29),r8
  139  00001140  2008000a	addi	r8,r0,#10
  140  00001144  afa80008	sw	8(r29),r8
  141  00001148  0c000cfc	jal	_dstrtol
  142  0000114c  54000000	nop; not filled.
  143  00001150  00012820	add	r5,r0,r1
  144  00001154  8cc80008	lw	r8,8(r6)
  145  00001158  afa80000	sw	(r29),r8
  146  0000115c  20080000	addi	r8,r0,#0
  147  00001160  afa80004	sw	4(r29),r8
  148  00001164  2008000a	addi	r8,r0,#10
  149  00001168  afa80008	sw	8(r29),r8
  150  0000116c  0c000cd8	jal	_dstrtol
  151  00001170  54000000	nop; not filled.
  152  00001174  00012020	add	r4,r0,r1
  153  00001178  8cc8000c	lw	r8,12(r6)
  154  0000117c  afa80000	sw	(r29),r8
  155  00001180  20080000	addi	r8,r0,#0
  156  00001184  afa80004	sw	4(r29),r8
  157  00001188  2008000a	addi	r8,r0,#10
  158  0000118c  afa80008	sw	8(r29),r8
  159  00001190  0c000cb4	jal	_dstrtol
  160  00001194  54000000	nop; not filled.
  161  00001198  00013820	add	r7,r0,r1
  162  0000119c  afa50000	sw	(r29),r5
  163  000011a0  0c0003b0	jal	_mbox_open
  164  000011a4  54000000	nop; not filled.
  165  000011a8  23bd0010	addi	r29,r29,#16
  166  000011ac  6021ffff	seqi	r1,r1,#-1
  167  000011b0  10200038	beqz	r1,L15_LF0
  168  000011b4  54000000	nop; not filled.
  169  000011b8  0c0002e4	jal	_getpid
  170  000011bc  54000000	nop; not filled.
  171  000011c0  23bdfff0	addi	r29,r29,#-16
  172  000011c4  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  173  000011c8  2508305c	addui	r8,r8,(LC1_LF0)&0xffff
  174  000011cc  afa80000	sw	(r29),r8
  175  000011d0  afa10004	sw	4(r29),r1
  176  000011d4  afa50008	sw	8(r29),r5
  177  000011d8  0c0002b8	jal	_Printf
  178  000011dc  54000000	nop; not filled.
  179  000011e0  0c0003b8	jal	_Exit
  180  000011e4  54000000	nop; not filled.
  181  000011e8  23bd0010	addi	r29,r29,#16
  182  000011ec          	L15_LF0:
  183  000011ec  23bdfff8	addi	r29,r29,#-8
  184  000011f0  afa40000	sw	(r29),r4
  185  000011f4  0c00035c	jal	_mbox_open
  186  000011f8  54000000	nop; not filled.
  187  000011fc  23bd0008	addi	r29,r29,#8
  188  00001200  6021ffff	seqi	r1,r1,#-1
  189  00001204  10200038	beqz	r1,L16_LF0
  190  00001208  54000000	nop; not filled.
  191  0000120c  0c000290	jal	_getpid
  192  00001210  54000000	nop; not filled.
  193  00001214  23bdfff0	addi	r29,r29,#-16
  194  00001218  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  195  0000121c  2508305c	addui	r8,r8,(LC1_LF0)&0xffff
  196  00001220  afa80000	sw	(r29),r8
  197  00001224  afa10004	sw	4(r29),r1
  198  00001228  afa40008	sw	8(r29),r4
  199  0000122c  0c000264	jal	_Printf
  200  00001230  54000000	nop; not filled.
  201  00001234  0c000364	jal	_Exit
  202  00001238  54000000	nop; not filled.
  203  0000123c  23bd0010	addi	r29,r29,#16
  204  00001240          	L16_LF0:
  205  00001240  23bdfff0	addi	r29,r29,#-16
  206  00001244  afa50000	sw	(r29),r5
  207  00001248  20080004	addi	r8,r0,#4
  208  0000124c  afa80004	sw	4(r29),r8
  209  00001250  23c3fff4	addi	r3,r30,#-12
  210  00001254  afa30008	sw	8(r29),r3
  211  00001258  0c00031c	jal	_mbox_recv
  212  0000125c  54000000	nop; not filled.
  213  00001260  23bd0010	addi	r29,r29,#16
  214  00001264  6021ffff	seqi	r1,r1,#-1
  215  00001268  10200034	beqz	r1,L17_LF0
  216  0000126c  54000000	nop; not filled.
  217  00001270  0c00022c	jal	_getpid
  218  00001274  54000000	nop; not filled.
  219  00001278  23bdfff8	addi	r29,r29,#-8
  220  0000127c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  221  00001280  25083084	addui	r8,r8,(LC2_LF0)&0xffff
  222  00001284  afa80000	sw	(r29),r8
  223  00001288  afa10004	sw	4(r29),r1
  224  0000128c  0c000204	jal	_Printf
  225  00001290  54000000	nop; not filled.
  226  00001294  0c000304	jal	_Exit
  227  00001298  54000000	nop; not filled.
  228  0000129c  23bd0008	addi	r29,r29,#8
  229  000012a0          	L17_LF0:
  230  000012a0  20020000	addi	r2,r0,#0
  231  000012a4          	L21_LF0:
  232  000012a4  23bdfff0	addi	r29,r29,#-16
  233  000012a8  afa40000	sw	(r29),r4
  234  000012ac  20080004	addi	r8,r0,#4
  235  000012b0  afa80004	sw	4(r29),r8
  236  000012b4  afa30008	sw	8(r29),r3
  237  000012b8  0c0002b0	jal	_mbox_send
  238  000012bc  54000000	nop; not filled.
  239  000012c0  23bd0010	addi	r29,r29,#16
  240  000012c4  6021ffff	seqi	r1,r1,#-1
  241  000012c8  10200034	beqz	r1,L20_LF0
  242  000012cc  54000000	nop; not filled.
  243  000012d0  0c0001cc	jal	_getpid
  244  000012d4  54000000	nop; not filled.
  245  000012d8  23bdfff8	addi	r29,r29,#-8
  246  000012dc  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  247  000012e0  250830c4	addui	r8,r8,(LC3_LF0)&0xffff
  248  000012e4  afa80000	sw	(r29),r8
  249  000012e8  afa10004	sw	4(r29),r1
  250  000012ec  0c0001a4	jal	_Printf
  251  000012f0  54000000	nop; not filled.
  252  000012f4  0c0002a4	jal	_Exit
  253  000012f8  54000000	nop; not filled.
  254  000012fc  23bd0008	addi	r29,r29,#8
  255  00001300          	L20_LF0:
  256  00001300  20420001	addi	r2,r2,#1
  257  00001304  70410001	slei	r1,r2,#1
  258  00001308  1420ff98	bnez	r1,L21_LF0
  259  0000130c  54000000	nop; not filled.
  260  00001310  0c00018c	jal	_getpid
  261  00001314  54000000	nop; not filled.
  262  00001318  23bdfff8	addi	r29,r29,#-8
  263  0000131c  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  264  00001320  25083104	addui	r8,r8,(LC4_LF0)&0xffff
  265  00001324  afa80000	sw	(r29),r8
  266  00001328  afa10004	sw	4(r29),r1
  267  0000132c  0c000164	jal	_Printf
  268  00001330  54000000	nop; not filled.
  269  00001334  afa50000	sw	(r29),r5
  270  00001338  0c000224	jal	_mbox_close
  271  0000133c  54000000	nop; not filled.
  272  00001340  23bd0008	addi	r29,r29,#8
  273  00001344  6021ffff	seqi	r1,r1,#-1
  274  00001348  10200038	beqz	r1,L24_LF0
  275  0000134c  54000000	nop; not filled.
  276  00001350  0c00014c	jal	_getpid
  277  00001354  54000000	nop; not filled.
  278  00001358  23bdfff0	addi	r29,r29,#-16
  279  0000135c  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  280  00001360  25083124	addui	r8,r8,(LC5_LF0)&0xffff
  281  00001364  afa80000	sw	(r29),r8
  282  00001368  afa10004	sw	4(r29),r1
  283  0000136c  afa50008	sw	8(r29),r5
  284  00001370  0c000120	jal	_Printf
  285  00001374  54000000	nop; not filled.
  286  00001378  0c000220	jal	_Exit
  287  0000137c  54000000	nop; not filled.
  288  00001380  23bd0010	addi	r29,r29,#16
  289  00001384          	L24_LF0:
  290  00001384  23bdfff8	addi	r29,r29,#-8
  291  00001388  afa40000	sw	(r29),r4
  292  0000138c  0c0001d0	jal	_mbox_close
  293  00001390  54000000	nop; not filled.
  294  00001394  23bd0008	addi	r29,r29,#8
  295  00001398  6021ffff	seqi	r1,r1,#-1
  296  0000139c  10200038	beqz	r1,L25_LF0
  297  000013a0  54000000	nop; not filled.
  298  000013a4  0c0000f8	jal	_getpid
  299  000013a8  54000000	nop; not filled.
  300  000013ac  23bdfff0	addi	r29,r29,#-16
  301  000013b0  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  302  000013b4  25083124	addui	r8,r8,(LC5_LF0)&0xffff
  303  000013b8  afa80000	sw	(r29),r8
  304  000013bc  afa10004	sw	4(r29),r1
  305  000013c0  afa40008	sw	8(r29),r4
  306  000013c4  0c0000cc	jal	_Printf
  307  000013c8  54000000	nop; not filled.
  308  000013cc  0c0001cc	jal	_Exit
  309  000013d0  54000000	nop; not filled.
  310  000013d4  23bd0010	addi	r29,r29,#16
  311  000013d8          	L25_LF0:
  312  000013d8  23bdfff8	addi	r29,r29,#-8
  313  000013dc  afa70000	sw	(r29),r7
  314  000013e0  0c000104	jal	_sem_signal
  315  000013e4  54000000	nop; not filled.
  316  000013e8  23bd0008	addi	r29,r29,#8
  317  000013ec  64210001	snei	r1,r1,#1
  318  000013f0  10200050	beqz	r1,L26_LF0
  319  000013f4  54000000	nop; not filled.
  320  000013f8  23bdfff8	addi	r29,r29,#-8
  321  000013fc  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  322  00001400  25083150	addui	r8,r8,(LC6_LF0)&0xffff
  323  00001404  afa80000	sw	(r29),r8
  324  00001408  afa70004	sw	4(r29),r7
  325  0000140c  0c000084	jal	_Printf
  326  00001410  54000000	nop; not filled.
  327  00001414  8cc60000	lw	r6,(r6)
  328  00001418  afa60000	sw	(r29),r6
  329  0000141c  0c000074	jal	_Printf
  330  00001420  54000000	nop; not filled.
  331  00001424  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  332  00001428  2508317c	addui	r8,r8,(LC7_LF0)&0xffff
  333  0000142c  afa80000	sw	(r29),r8
  334  00001430  0c000060	jal	_Printf
  335  00001434  54000000	nop; not filled.
  336  00001438  0c000160	jal	_Exit
  337  0000143c  54000000	nop; not filled.
  338  00001440  23bd0008	addi	r29,r29,#8
  339  00001444          	L26_LF0:
  340  00001444  0c000ef0	jal	_exit
  341  00001448  54000000	nop
  342  0000144c          	.endproc _main
  343                      ;;;
  344                      ;;; Stub functions for DLX traps.
  345                      ;;;
  346                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  347                      ;;;
  348                      ;;; The traps such as Open and Close
  349                      ;;; (note the capital letters) are for use by user programs.  The traps
  350                      ;;; with names such as open and close (lower case) are for use by the OS.
  351                      ;;;
  354  0000144c          	.align 2
  356                      ;;; The following are the traps to be used by user-level programs
  357                      ;;;
  359  0000144c          	.align 2
  360  0000144c          	.proc _Open
  361  0000144c          	.global _Open
  362  0000144c          	_Open:
  363                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  364                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  365                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  366  0000144c  44000213	trap	#0x213
  367  00001450  4be00000	jr	r31
  368  00001454  54000000	nop
  369  00001458          	.endproc _Open
  371  00001458          	.proc _Close
  372  00001458          	.global _Close
  373  00001458          	_Close:
  374  00001458  44000214	trap	#0x214
  375  0000145c  4be00000	jr	r31
  376  00001460  54000000	nop
  377  00001464          	.endproc _Close
  379  00001464          	.proc _Read
  380  00001464          	.global _Read
  381  00001464          	_Read:
  382  00001464  44000210	trap	#0x210
  383  00001468  4be00000	jr	r31
  384  0000146c  54000000	nop
  385  00001470          	.endproc _Read
  387  00001470          	.proc _Write
  388  00001470          	.global _Write
  389  00001470          	_Write:
  390  00001470  44000211	trap	#0x211
  391  00001474  4be00000	jr	r31
  392  00001478  54000000	nop
  393  0000147c          	.endproc _Write
  395  0000147c          	.proc _Lseek
  396  0000147c          	.global _Lseek
  397  0000147c          	_Lseek:
  398  0000147c  44000212	trap	#0x212
  399  00001480  4be00000	jr	r31
  400  00001484  54000000	nop
  401  00001488          	.endproc _Lseek
  403  00001488          	.proc _Putchar
  404  00001488          	.global _Putchar
  405  00001488          	_Putchar:
  406  00001488  44000280	trap	#0x280
  407  0000148c  4be00000	jr	r31
  408  00001490  54000000	nop
  409  00001494          	.endproc _Putchar
  411  00001494          	.proc _Printf
  412  00001494          	.global _Printf
  413  00001494          	_Printf:
  414  00001494  44000201	trap	#0x201
  415  00001498  4be00000	jr	r31
  416  0000149c  54000000	nop
  417  000014a0          	.endproc _Printf
  419  000014a0          	.proc _getpid
  420  000014a0          	.global _getpid
  421  000014a0          	_getpid:
  422  000014a0  44000431	trap	#0x431
  423  000014a4  4be00000	jr	r31
  424  000014a8  54000000	nop
  425  000014ac          	.endproc _getpid
  427  000014ac          	.proc _process_create
  428  000014ac          	.global _process_create
  429  000014ac          	_process_create:
  430  000014ac  44000432	trap	#0x432
  431  000014b0  4be00000	jr	r31
  432  000014b4  54000000	nop
  433  000014b8          	.endproc _process_create
  435  000014b8          	.proc _shmget
  436  000014b8          	.global _shmget
  437  000014b8          	_shmget:
  438  000014b8  44000440	trap	#0x440
  439  000014bc  4be00000	jr	r31
  440  000014c0  54000000	nop
  441  000014c4          	.endproc _shmget
  443  000014c4          	.proc _shmat
  444  000014c4          	.global _shmat
  445  000014c4          	_shmat:
  446  000014c4  44000441	trap	#0x441
  447  000014c8  4be00000	jr	r31
  448  000014cc  54000000	nop
  449  000014d0          	.endproc _shmat
  451  000014d0          	.proc _sem_create
  452  000014d0          	.global _sem_create
  453  000014d0          	_sem_create:
  454  000014d0  44000450	trap	#0x450
  455  000014d4  4be00000	jr	r31
  456  000014d8  54000000	nop
  457  000014dc          	.endproc _sem_create
  459  000014dc          	.proc _sem_wait
  460  000014dc          	.global _sem_wait
  461  000014dc          	_sem_wait:
  462  000014dc  44000451	trap	#0x451
  463  000014e0  4be00000	jr	r31
  464  000014e4  54000000	nop
  465  000014e8          	.endproc _sem_wait
  467  000014e8          	.proc _sem_signal
  468  000014e8          	.global _sem_signal
  469  000014e8          	_sem_signal:
  470  000014e8  44000452	trap	#0x452
  471  000014ec  4be00000	jr	r31
  472  000014f0  54000000	nop
  473  000014f4          	.endproc _sem_signal
  475  000014f4          	.proc _lock_create
  476  000014f4          	.global _lock_create
  477  000014f4          	_lock_create:
  478  000014f4  44000453	trap	#0x453
  479  000014f8  4be00000	jr	r31
  480  000014fc  54000000	nop
  481  00001500          	.endproc _lock_create
  483  00001500          	.proc _lock_acquire
  484  00001500          	.global _lock_acquire
  485  00001500          	_lock_acquire:
  486  00001500  44000454	trap	#0x454
  487  00001504  4be00000	jr	r31
  488  00001508  54000000	nop
  489  0000150c          	.endproc _lock_acquire
  491  0000150c          	.proc _lock_release
  492  0000150c          	.global _lock_release
  493  0000150c          	_lock_release:
  494  0000150c  44000455	trap	#0x455
  495  00001510  4be00000	jr	r31
  496  00001514  54000000	nop
  497  00001518          	.endproc _lock_release
  499  00001518          	.proc _cond_create
  500  00001518          	.global _cond_create
  501  00001518          	_cond_create:
  502  00001518  44000456	trap	#0x456
  503  0000151c  4be00000	jr	r31
  504  00001520  54000000	nop
  505  00001524          	.endproc _cond_create
  507  00001524          	.proc _cond_wait
  508  00001524          	.global _cond_wait
  509  00001524          	_cond_wait:
  510  00001524  44000457	trap	#0x457
  511  00001528  4be00000	jr	r31
  512  0000152c  54000000	nop
  513  00001530          	.endproc _cond_wait
  515  00001530          	.proc _cond_signal
  516  00001530          	.global _cond_signal
  517  00001530          	_cond_signal:
  518  00001530  44000458	trap	#0x458
  519  00001534  4be00000	jr	r31
  520  00001538  54000000	nop
  521  0000153c          	.endproc _cond_signal
  523  0000153c          	.proc _cond_broadcast
  524  0000153c          	.global _cond_broadcast
  525  0000153c          	_cond_broadcast:
  526  0000153c  44000459	trap	#0x459
  527  00001540  4be00000	jr	r31
  528  00001544  54000000	nop
  529  00001548          	.endproc _cond_broadcast
  531  00001548          	.proc _mbox_create
  532  00001548          	.global _mbox_create
  533  00001548          	_mbox_create:
  534  00001548  44000460	trap	#0x460
  535  0000154c  4be00000	jr	r31
  536  00001550  54000000	nop
  537  00001554          	.endproc _mbox_create
  539  00001554          	.proc _mbox_open
  540  00001554          	.global _mbox_open
  541  00001554          	_mbox_open:
  542  00001554  44000461	trap	#0x461
  543  00001558  4be00000	jr	r31
  544  0000155c  54000000	nop
  545  00001560          	.endproc _mbox_open
  547  00001560          	.proc _mbox_close
  548  00001560          	.global _mbox_close
  549  00001560          	_mbox_close:
  550  00001560  44000462	trap	#0x462
  551  00001564  4be00000	jr	r31
  552  00001568  54000000	nop
  553  0000156c          	.endproc _mbox_close
  555  0000156c          	.proc _mbox_send
  556  0000156c          	.global _mbox_send
  557  0000156c          	_mbox_send:
  558  0000156c  44000463	trap	#0x463
  559  00001570  4be00000	jr	r31
  560  00001574  54000000	nop
  561  00001578          	.endproc _mbox_send
  563  00001578          	.proc _mbox_recv
  564  00001578          	.global _mbox_recv
  565  00001578          	_mbox_recv:
  566  00001578  44000464	trap	#0x464
  567  0000157c  4be00000	jr	r31
  568  00001580  54000000	nop
  569  00001584          	.endproc _mbox_recv
  571  00001584          	.proc _sleep
  572  00001584          	.global _sleep
  573  00001584          	_sleep:
  574  00001584  44000465	trap	#0x465
  575  00001588  4be00000	jr	r31
  576  0000158c  54000000	nop
  577  00001590          	.endproc _sleep
  579  00001590          	.proc _yield
  580  00001590          	.global _yield
  581  00001590          	_yield:
  582  00001590  44000466	trap	#0x466
  583  00001594  4be00000	jr	r31
  584  00001598  54000000	nop
  585  0000159c          	.endproc _yield
  588  0000159c          	.proc _Exit
  589  0000159c          	.global _Exit
  590  0000159c          	_Exit:
  591  0000159c  44000500	trap	#0x500
  592  000015a0  4be00000	jr	r31
  593  000015a4  54000000	nop
  594  000015a8          	.endproc _Exit
  595                      ; Compiled by GCC
  597  000015a8          	.align 2
  598  000015a8          	.proc _isspace
  599  000015a8          	.global _isspace
  600  000015a8          	_isspace:
  601                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  602  000015a8  afbefffc	sw	-4(r29),r30; push fp
  603  000015ac  001df020	add	r30,r0,r29; fp = sp
  604  000015b0  afbffff8	sw	-8(r29),r31; push ret addr
  605  000015b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  606  000015b8  afa20000	sw	0(r29),r2
  607  000015bc  afa30004	sw	4(r29),r3
  608  000015c0  afa40008	sw	8(r29),r4
  609  000015c4  83c20003	lb	r2,3(r30)
  610  000015c8  20010000	addi	r1,r0,#0
  611  000015cc  304300ff	andi	r3,r2,#0x00ff
  612  000015d0  60640020	seqi	r4,r3,#32
  613  000015d4  1480002c	bnez	r4,L3_LF2
  614  000015d8  54000000	nop; delay slot nop
  615  000015dc  304300ff	andi	r3,r2,#0x00ff
  616  000015e0  60640009	seqi	r4,r3,#9
  617  000015e4  1480001c	bnez	r4,L3_LF2
  618  000015e8  54000000	nop; delay slot nop
  619  000015ec  304300ff	andi	r3,r2,#0x00ff
  620  000015f0  6064000a	seqi	r4,r3,#10
  621  000015f4  1480000c	bnez	r4,L3_LF2
  622  000015f8  54000000	nop; delay slot nop
  623  000015fc  08000008	j	L2_LF2
  624  00001600  54000000	nop; delay slot nop
  625  00001604          	L3_LF2:
  626  00001604  20010001	addi	r1,r0,#1
  627  00001608          	L2_LF2:
  628  00001608  08000004	j	L1_LF2
  629  0000160c  54000000	nop; delay slot nop
  630  00001610          	L1_LF2:
  631  00001610  8fa20000	lw	r2,0(r29)
  632  00001614  8fa30004	lw	r3,4(r29)
  633  00001618  8fa40008	lw	r4,8(r29)
  634  0000161c  8fdffff8	lw	r31,-8(r30)
  635  00001620  001ee820	add	r29,r0,r30
  636  00001624  8fdefffc	lw	r30,-4(r30)
  637  00001628  4be00000	jr	r31
  638  0000162c  54000000	nop
  639  00001630          	.endproc _isspace
  640  00001630          	.align 2
  641  00001630          	.proc _isxdigit
  642  00001630          	.global _isxdigit
  643  00001630          	_isxdigit:
  644                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  645  00001630  afbefffc	sw	-4(r29),r30; push fp
  646  00001634  001df020	add	r30,r0,r29; fp = sp
  647  00001638  afbffff8	sw	-8(r29),r31; push ret addr
  648  0000163c  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  00001640  afa20000	sw	0(r29),r2
  650  00001644  afa30004	sw	4(r29),r3
  651  00001648  afa40008	sw	8(r29),r4
  652  0000164c  83c20003	lb	r2,3(r30)
  653  00001650  20010000	addi	r1,r0,#0
  654  00001654  304300ff	andi	r3,r2,#0x00ff
  655  00001658  6c64002f	sgtui	r4,r3,#47
  656  0000165c  1080001c	beqz	r4,L7_LF2
  657  00001660  54000000	nop; delay slot nop
  658  00001664  304300ff	andi	r3,r2,#0x00ff
  659  00001668  70640039	sleui	r4,r3,#57
  660  0000166c  1480005c	bnez	r4,L6_LF2
  661  00001670  54000000	nop; delay slot nop
  662  00001674  08000004	j	L7_LF2
  663  00001678  54000000	nop; delay slot nop
  664  0000167c          	L7_LF2:
  665  0000167c  304300ff	andi	r3,r2,#0x00ff
  666  00001680  6c640060	sgtui	r4,r3,#96
  667  00001684  1080001c	beqz	r4,L8_LF2
  668  00001688  54000000	nop; delay slot nop
  669  0000168c  304300ff	andi	r3,r2,#0x00ff
  670  00001690  70640066	sleui	r4,r3,#102
  671  00001694  14800034	bnez	r4,L6_LF2
  672  00001698  54000000	nop; delay slot nop
  673  0000169c  08000004	j	L8_LF2
  674  000016a0  54000000	nop; delay slot nop
  675  000016a4          	L8_LF2:
  676  000016a4  304300ff	andi	r3,r2,#0x00ff
  677  000016a8  6c640040	sgtui	r4,r3,#64
  678  000016ac  10800020	beqz	r4,L5_LF2
  679  000016b0  54000000	nop; delay slot nop
  680  000016b4  304300ff	andi	r3,r2,#0x00ff
  681  000016b8  70640041	sleui	r4,r3,#65
  682  000016bc  1480000c	bnez	r4,L6_LF2
  683  000016c0  54000000	nop; delay slot nop
  684  000016c4  08000008	j	L5_LF2
  685  000016c8  54000000	nop; delay slot nop
  686  000016cc          	L6_LF2:
  687  000016cc  20010001	addi	r1,r0,#1
  688  000016d0          	L5_LF2:
  689  000016d0  08000004	j	L4_LF2
  690  000016d4  54000000	nop; delay slot nop
  691  000016d8          	L4_LF2:
  692  000016d8  8fa20000	lw	r2,0(r29)
  693  000016dc  8fa30004	lw	r3,4(r29)
  694  000016e0  8fa40008	lw	r4,8(r29)
  695  000016e4  8fdffff8	lw	r31,-8(r30)
  696  000016e8  001ee820	add	r29,r0,r30
  697  000016ec  8fdefffc	lw	r30,-4(r30)
  698  000016f0  4be00000	jr	r31
  699  000016f4  54000000	nop
  700  000016f8          	.endproc _isxdigit
  701  000016f8          	.align 2
  702  000016f8          	.proc _dstrcpy
  703  000016f8          	.global _dstrcpy
  704  000016f8          	_dstrcpy:
  705                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  706  000016f8  afbefffc	sw	-4(r29),r30; push fp
  707  000016fc  001df020	add	r30,r0,r29; fp = sp
  708  00001700  afbffff8	sw	-8(r29),r31; push ret addr
  709  00001704  2fbd0018	subui	r29,r29,#24; alloc local storage
  710  00001708  afa20000	sw	0(r29),r2
  711  0000170c  afa30004	sw	4(r29),r3
  712  00001710  8fc10000	lw	r1,(r30)
  713  00001714  afc1fff4	sw	-12(r30),r1
  714  00001718          	L10_LF2:
  715  00001718  8fc10000	lw	r1,(r30)
  716  0000171c  20220001	addi	r2,r1,#1
  717  00001720  afc20000	sw	(r30),r2
  718  00001724  8fc20004	lw	r2,4(r30)
  719  00001728  20430001	addi	r3,r2,#1
  720  0000172c  afc30004	sw	4(r30),r3
  721  00001730  80420000	lb	r2,(r2)
  722  00001734  a0220000	sb	(r1),r2
  723  00001738  a3c2fff3	sb	-13(r30),r2
  724  0000173c          	L12_LF2:
  725  0000173c  93c1fff3	lbu	r1,-13(r30)
  726  00001740  64220000	snei	r2,r1,#0
  727  00001744  1440000c	bnez	r2,L13_LF2
  728  00001748  54000000	nop; delay slot nop
  729  0000174c  0800000c	j	L11_LF2
  730  00001750  54000000	nop; delay slot nop
  731  00001754          	L13_LF2:
  732  00001754  0bffffc0	j	L10_LF2
  733  00001758  54000000	nop; delay slot nop
  734  0000175c          	L11_LF2:
  735  0000175c  8fc1fff4	lw	r1,-12(r30)
  736  00001760  08000004	j	L9_LF2
  737  00001764  54000000	nop; delay slot nop
  738  00001768          	L9_LF2:
  739  00001768  8fa20000	lw	r2,0(r29)
  740  0000176c  8fa30004	lw	r3,4(r29)
  741  00001770  8fdffff8	lw	r31,-8(r30)
  742  00001774  001ee820	add	r29,r0,r30
  743  00001778  8fdefffc	lw	r30,-4(r30)
  744  0000177c  4be00000	jr	r31
  745  00001780  54000000	nop
  746  00001784          	.endproc _dstrcpy
  747  00001784          	.align 2
  748  00001784          	.proc _dstrncpy
  749  00001784          	.global _dstrncpy
  750  00001784          	_dstrncpy:
  751                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  752  00001784  afbefffc	sw	-4(r29),r30; push fp
  753  00001788  001df020	add	r30,r0,r29; fp = sp
  754  0000178c  afbffff8	sw	-8(r29),r31; push ret addr
  755  00001790  2fbd0018	subui	r29,r29,#24; alloc local storage
  756  00001794  afa20000	sw	0(r29),r2
  757  00001798  afa30004	sw	4(r29),r3
  758  0000179c  8fc10000	lw	r1,(r30)
  759  000017a0  afc1fff4	sw	-12(r30),r1
  760  000017a4          	L15_LF2:
  761  000017a4  8fc10008	lw	r1,8(r30)
  762  000017a8  2022ffff	addi	r2,r1,#-1
  763  000017ac  afc20008	sw	8(r30),r2
  764  000017b0  70210000	slei	r1,r1,#0
  765  000017b4  1020000c	beqz	r1,L18_LF2
  766  000017b8  54000000	nop; delay slot nop
  767  000017bc  08000048	j	L16_LF2
  768  000017c0  54000000	nop; delay slot nop
  769  000017c4          	L18_LF2:
  770  000017c4  8fc10000	lw	r1,(r30)
  771  000017c8  20220001	addi	r2,r1,#1
  772  000017cc  afc20000	sw	(r30),r2
  773  000017d0  8fc20004	lw	r2,4(r30)
  774  000017d4  20430001	addi	r3,r2,#1
  775  000017d8  afc30004	sw	4(r30),r3
  776  000017dc  80420000	lb	r2,(r2)
  777  000017e0  a0220000	sb	(r1),r2
  778  000017e4  a3c2fff3	sb	-13(r30),r2
  779  000017e8          	L17_LF2:
  780  000017e8  93c1fff3	lbu	r1,-13(r30)
  781  000017ec  64220000	snei	r2,r1,#0
  782  000017f0  1440000c	bnez	r2,L19_LF2
  783  000017f4  54000000	nop; delay slot nop
  784  000017f8  0800000c	j	L16_LF2
  785  000017fc  54000000	nop; delay slot nop
  786  00001800          	L19_LF2:
  787  00001800  0bffffa0	j	L15_LF2
  788  00001804  54000000	nop; delay slot nop
  789  00001808          	L16_LF2:
  790  00001808  8fc1fff4	lw	r1,-12(r30)
  791  0000180c  08000004	j	L14_LF2
  792  00001810  54000000	nop; delay slot nop
  793  00001814          	L14_LF2:
  794  00001814  8fa20000	lw	r2,0(r29)
  795  00001818  8fa30004	lw	r3,4(r29)
  796  0000181c  8fdffff8	lw	r31,-8(r30)
  797  00001820  001ee820	add	r29,r0,r30
  798  00001824  8fdefffc	lw	r30,-4(r30)
  799  00001828  4be00000	jr	r31
  800  0000182c  54000000	nop
  801  00001830          	.endproc _dstrncpy
  802  00001830          	.align 2
  803  00001830          	.proc _dstrcat
  804  00001830          	.global _dstrcat
  805  00001830          	_dstrcat:
  806                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  807  00001830  afbefffc	sw	-4(r29),r30; push fp
  808  00001834  001df020	add	r30,r0,r29; fp = sp
  809  00001838  afbffff8	sw	-8(r29),r31; push ret addr
  810  0000183c  2fbd0018	subui	r29,r29,#24; alloc local storage
  811  00001840  afa20000	sw	0(r29),r2
  812  00001844  8fc10000	lw	r1,(r30)
  813  00001848  afc1fff4	sw	-12(r30),r1
  814  0000184c          	L21_LF2:
  815  0000184c  8fc10000	lw	r1,(r30)
  816  00001850  90220000	lbu	r2,(r1)
  817  00001854  64410000	snei	r1,r2,#0
  818  00001858  1420000c	bnez	r1,L23_LF2
  819  0000185c  54000000	nop; delay slot nop
  820  00001860  0800001c	j	L22_LF2
  821  00001864  54000000	nop; delay slot nop
  822  00001868          	L23_LF2:
  823  00001868  8fc20000	lw	r2,(r30)
  824  0000186c  20410001	addi	r1,r2,#1
  825  00001870  00011020	add	r2,r0,r1
  826  00001874  afc20000	sw	(r30),r2
  827  00001878  0bffffd0	j	L21_LF2
  828  0000187c  54000000	nop; delay slot nop
  829  00001880          	L22_LF2:
  830  00001880  23bdfff8	addi	r29,r29,#-8
  831  00001884  001d0820	add	r1,r0,r29
  832  00001888  8fc20000	lw	r2,(r30)
  833  0000188c  ac220000	sw	(r1),r2
  834  00001890  8fc20004	lw	r2,4(r30)
  835  00001894  ac220004	sw	4(r1),r2
  836  00001898  0ffffe5c	jal	_dstrcpy
  837  0000189c  54000000	nop; delay slot nop
  838  000018a0  23bd0008	addi	r29,r29,#8
  839  000018a4  8fc1fff4	lw	r1,-12(r30)
  840  000018a8  08000004	j	L20_LF2
  841  000018ac  54000000	nop; delay slot nop
  842  000018b0          	L20_LF2:
  843  000018b0  8fa20000	lw	r2,0(r29)
  844  000018b4  8fdffff8	lw	r31,-8(r30)
  845  000018b8  001ee820	add	r29,r0,r30
  846  000018bc  8fdefffc	lw	r30,-4(r30)
  847  000018c0  4be00000	jr	r31
  848  000018c4  54000000	nop
  849  000018c8          	.endproc _dstrcat
  850  000018c8          	.align 2
  851  000018c8          	.proc _dstrncmp
  852  000018c8          	.global _dstrncmp
  853  000018c8          	_dstrncmp:
  854                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  855  000018c8  afbefffc	sw	-4(r29),r30; push fp
  856  000018cc  001df020	add	r30,r0,r29; fp = sp
  857  000018d0  afbffff8	sw	-8(r29),r31; push ret addr
  858  000018d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  859  000018d8  afa20000	sw	0(r29),r2
  860  000018dc  afa30004	sw	4(r29),r3
  861  000018e0  54000000	nop
  862  000018e4  20010000	addi	r1,r0,#0
  863  000018e8  afc1fff4	sw	-12(r30),r1
  864  000018ec          	L25_LF2:
  865  000018ec  8fc1fff4	lw	r1,-12(r30)
  866  000018f0  8fc20008	lw	r2,8(r30)
  867  000018f4  0022082a	slt	r1,r1,r2
  868  000018f8  1420000c	bnez	r1,L28_LF2
  869  000018fc  54000000	nop; delay slot nop
  870  00001900  08000088	j	L26_LF2
  871  00001904  54000000	nop; delay slot nop
  872  00001908          	L28_LF2:
  873  00001908  8fc10004	lw	r1,4(r30)
  874  0000190c  90220000	lbu	r2,(r1)
  875  00001910  64410000	snei	r1,r2,#0
  876  00001914  14200018	bnez	r1,L29_LF2
  877  00001918  54000000	nop; delay slot nop
  878  0000191c  20010000	addi	r1,r0,#0
  879  00001920  080000d8	j	L24_LF2
  880  00001924  54000000	nop; delay slot nop
  881  00001928  08000028	j	L30_LF2
  882  0000192c  54000000	nop; delay slot nop
  883  00001930          	L29_LF2:
  884  00001930  8fc10000	lw	r1,(r30)
  885  00001934  8fc20004	lw	r2,4(r30)
  886  00001938  90210000	lbu	r1,(r1)
  887  0000193c  90420000	lbu	r2,(r2)
  888  00001940  00220829	sne	r1,r1,r2
  889  00001944  1020000c	beqz	r1,L30_LF2
  890  00001948  54000000	nop; delay slot nop
  891  0000194c  0800003c	j	L26_LF2
  892  00001950  54000000	nop; delay slot nop
  893  00001954          	L31_LF2:
  894  00001954          	L30_LF2:
  895  00001954  8fc20000	lw	r2,(r30)
  896  00001958  20410001	addi	r1,r2,#1
  897  0000195c  00011020	add	r2,r0,r1
  898  00001960  afc20000	sw	(r30),r2
  899  00001964  8fc20004	lw	r2,4(r30)
  900  00001968  20410001	addi	r1,r2,#1
  901  0000196c  00011020	add	r2,r0,r1
  902  00001970  afc20004	sw	4(r30),r2
  903  00001974          	L27_LF2:
  904  00001974  8fc2fff4	lw	r2,-12(r30)
  905  00001978  20410001	addi	r1,r2,#1
  906  0000197c  00011020	add	r2,r0,r1
  907  00001980  afc2fff4	sw	-12(r30),r2
  908  00001984  0bffff64	j	L25_LF2
  909  00001988  54000000	nop; delay slot nop
  910  0000198c          	L26_LF2:
  911  0000198c  8fc1fff4	lw	r1,-12(r30)
  912  00001990  8fc20008	lw	r2,8(r30)
  913  00001994  00220828	seq	r1,r1,r2
  914  00001998  10200018	beqz	r1,L32_LF2
  915  0000199c  54000000	nop; delay slot nop
  916  000019a0  20010000	addi	r1,r0,#0
  917  000019a4  08000054	j	L24_LF2
  918  000019a8  54000000	nop; delay slot nop
  919  000019ac  0800004c	j	L33_LF2
  920  000019b0  54000000	nop; delay slot nop
  921  000019b4          	L32_LF2:
  922  000019b4  8fc20000	lw	r2,(r30)
  923  000019b8  90410000	lbu	r1,(r2)
  924  000019bc  8fc20004	lw	r2,4(r30)
  925  000019c0  90430000	lbu	r3,(r2)
  926  000019c4  00230822	sub	r1,r1,r3
  927  000019c8  74220000	sgei	r2,r1,#0
  928  000019cc  10400020	beqz	r2,L34_LF2
  929  000019d0  54000000	nop; delay slot nop
  930  000019d4  8fc10000	lw	r1,(r30)
  931  000019d8  8fc20004	lw	r2,4(r30)
  932  000019dc  90210000	lbu	r1,(r1)
  933  000019e0  90420000	lbu	r2,(r2)
  934  000019e4  00220829	sne	r1,r1,r2
  935  000019e8  08000008	j	L35_LF2
  936  000019ec  54000000	nop; delay slot nop
  937  000019f0          	L34_LF2:
  938  000019f0  2001ffff	addi	r1,r0,#-1
  939  000019f4          	L35_LF2:
  940  000019f4  08000004	j	L24_LF2
  941  000019f8  54000000	nop; delay slot nop
  942  000019fc          	L33_LF2:
  943  000019fc          	L24_LF2:
  944  000019fc  8fa20000	lw	r2,0(r29)
  945  00001a00  8fa30004	lw	r3,4(r29)
  946  00001a04  8fdffff8	lw	r31,-8(r30)
  947  00001a08  001ee820	add	r29,r0,r30
  948  00001a0c  8fdefffc	lw	r30,-4(r30)
  949  00001a10  4be00000	jr	r31
  950  00001a14  54000000	nop
  951  00001a18          	.endproc _dstrncmp
  952  00001a18          	.align 2
  953  00001a18          	.proc _dstrlen
  954  00001a18          	.global _dstrlen
  955  00001a18          	_dstrlen:
  956                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  957  00001a18  afbefffc	sw	-4(r29),r30; push fp
  958  00001a1c  001df020	add	r30,r0,r29; fp = sp
  959  00001a20  afbffff8	sw	-8(r29),r31; push ret addr
  960  00001a24  2fbd0018	subui	r29,r29,#24; alloc local storage
  961  00001a28  afa20000	sw	0(r29),r2
  962  00001a2c  20010000	addi	r1,r0,#0
  963  00001a30  afc1fff4	sw	-12(r30),r1
  964  00001a34          	L37_LF2:
  965  00001a34  8fc10000	lw	r1,(r30)
  966  00001a38  20220001	addi	r2,r1,#1
  967  00001a3c  afc20000	sw	(r30),r2
  968  00001a40  90210000	lbu	r1,(r1)
  969  00001a44  64220000	snei	r2,r1,#0
  970  00001a48  1440000c	bnez	r2,L39_LF2
  971  00001a4c  54000000	nop; delay slot nop
  972  00001a50  0800001c	j	L38_LF2
  973  00001a54  54000000	nop; delay slot nop
  974  00001a58          	L39_LF2:
  975  00001a58  8fc2fff4	lw	r2,-12(r30)
  976  00001a5c  20410001	addi	r1,r2,#1
  977  00001a60  00011020	add	r2,r0,r1
  978  00001a64  afc2fff4	sw	-12(r30),r2
  979  00001a68  0bffffc8	j	L37_LF2
  980  00001a6c  54000000	nop; delay slot nop
  981  00001a70          	L38_LF2:
  982  00001a70  8fc1fff4	lw	r1,-12(r30)
  983  00001a74  08000004	j	L36_LF2
  984  00001a78  54000000	nop; delay slot nop
  985  00001a7c          	L36_LF2:
  986  00001a7c  8fa20000	lw	r2,0(r29)
  987  00001a80  8fdffff8	lw	r31,-8(r30)
  988  00001a84  001ee820	add	r29,r0,r30
  989  00001a88  8fdefffc	lw	r30,-4(r30)
  990  00001a8c  4be00000	jr	r31
  991  00001a90  54000000	nop
  992  00001a94          	.endproc _dstrlen
  993  00001a94          	.align 2
  994  00001a94          	.proc _dstrstr
  995  00001a94          	.global _dstrstr
  996  00001a94          	_dstrstr:
  997                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  998  00001a94  afbefffc	sw	-4(r29),r30; push fp
  999  00001a98  001df020	add	r30,r0,r29; fp = sp
 1000  00001a9c  afbffff8	sw	-8(r29),r31; push ret addr
 1001  00001aa0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1002  00001aa4  afa20000	sw	0(r29),r2
 1003  00001aa8  23bdfff8	addi	r29,r29,#-8
 1004  00001aac  001d0820	add	r1,r0,r29
 1005  00001ab0  8fc20004	lw	r2,4(r30)
 1006  00001ab4  ac220000	sw	(r1),r2
 1007  00001ab8  0fffff5c	jal	_dstrlen
 1008  00001abc  54000000	nop; delay slot nop
 1009  00001ac0  23bd0008	addi	r29,r29,#8
 1010  00001ac4  afc1fff4	sw	-12(r30),r1
 1011  00001ac8          	L41_LF2:
 1012  00001ac8  8fc10000	lw	r1,(r30)
 1013  00001acc  90220000	lbu	r2,(r1)
 1014  00001ad0  64410000	snei	r1,r2,#0
 1015  00001ad4  1420000c	bnez	r1,L43_LF2
 1016  00001ad8  54000000	nop; delay slot nop
 1017  00001adc  08000060	j	L42_LF2
 1018  00001ae0  54000000	nop; delay slot nop
 1019  00001ae4          	L43_LF2:
 1020  00001ae4  23bdfff0	addi	r29,r29,#-16
 1021  00001ae8  001d0820	add	r1,r0,r29
 1022  00001aec  8fc20000	lw	r2,(r30)
 1023  00001af0  ac220000	sw	(r1),r2
 1024  00001af4  8fc20004	lw	r2,4(r30)
 1025  00001af8  ac220004	sw	4(r1),r2
 1026  00001afc  8fc2fff4	lw	r2,-12(r30)
 1027  00001b00  ac220008	sw	8(r1),r2
 1028  00001b04  0ffffdc0	jal	_dstrncmp
 1029  00001b08  54000000	nop; delay slot nop
 1030  00001b0c  23bd0010	addi	r29,r29,#16
 1031  00001b10  64220000	snei	r2,r1,#0
 1032  00001b14  14400010	bnez	r2,L44_LF2
 1033  00001b18  54000000	nop; delay slot nop
 1034  00001b1c  8fc10000	lw	r1,(r30)
 1035  00001b20  08000028	j	L40_LF2
 1036  00001b24  54000000	nop; delay slot nop
 1037  00001b28          	L44_LF2:
 1038  00001b28  8fc20000	lw	r2,(r30)
 1039  00001b2c  20410001	addi	r1,r2,#1
 1040  00001b30  00011020	add	r2,r0,r1
 1041  00001b34  afc20000	sw	(r30),r2
 1042  00001b38  0bffff8c	j	L41_LF2
 1043  00001b3c  54000000	nop; delay slot nop
 1044  00001b40          	L42_LF2:
 1045  00001b40  20010000	addi	r1,r0,#0
 1046  00001b44  08000004	j	L40_LF2
 1047  00001b48  54000000	nop; delay slot nop
 1048  00001b4c          	L40_LF2:
 1049  00001b4c  8fa20000	lw	r2,0(r29)
 1050  00001b50  8fdffff8	lw	r31,-8(r30)
 1051  00001b54  001ee820	add	r29,r0,r30
 1052  00001b58  8fdefffc	lw	r30,-4(r30)
 1053  00001b5c  4be00000	jr	r31
 1054  00001b60  54000000	nop
 1055  00001b64          	.endproc _dstrstr
 1056  00001b64          	.align 2
 1057  00001b64          	.proc _dmindex
 1058  00001b64          	.global _dmindex
 1059  00001b64          	_dmindex:
 1060                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1061  00001b64  afbefffc	sw	-4(r29),r30; push fp
 1062  00001b68  001df020	add	r30,r0,r29; fp = sp
 1063  00001b6c  afbffff8	sw	-8(r29),r31; push ret addr
 1064  00001b70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1065  00001b74  afa20000	sw	0(r29),r2
 1066  00001b78  54000000	nop
 1067  00001b7c          	L46_LF2:
 1068  00001b7c  8fc10000	lw	r1,(r30)
 1069  00001b80  90220000	lbu	r2,(r1)
 1070  00001b84  64410000	snei	r1,r2,#0
 1071  00001b88  1420000c	bnez	r1,L48_LF2
 1072  00001b8c  54000000	nop; delay slot nop
 1073  00001b90  08000070	j	L47_LF2
 1074  00001b94  54000000	nop; delay slot nop
 1075  00001b98          	L48_LF2:
 1076  00001b98  8fc10004	lw	r1,4(r30)
 1077  00001b9c  afc1fff4	sw	-12(r30),r1
 1078  00001ba0          	L49_LF2:
 1079  00001ba0  8fc1fff4	lw	r1,-12(r30)
 1080  00001ba4  90220000	lbu	r2,(r1)
 1081  00001ba8  64410000	snei	r1,r2,#0
 1082  00001bac  1420000c	bnez	r1,L52_LF2
 1083  00001bb0  54000000	nop; delay slot nop
 1084  00001bb4  08000044	j	L50_LF2
 1085  00001bb8  54000000	nop; delay slot nop
 1086  00001bbc          	L52_LF2:
 1087  00001bbc  8fc10000	lw	r1,(r30)
 1088  00001bc0  8fc2fff4	lw	r2,-12(r30)
 1089  00001bc4  90210000	lbu	r1,(r1)
 1090  00001bc8  90420000	lbu	r2,(r2)
 1091  00001bcc  00220828	seq	r1,r1,r2
 1092  00001bd0  10200010	beqz	r1,L51_LF2
 1093  00001bd4  54000000	nop; delay slot nop
 1094  00001bd8  8fc10000	lw	r1,(r30)
 1095  00001bdc  08000030	j	L45_LF2
 1096  00001be0  54000000	nop; delay slot nop
 1097  00001be4          	L53_LF2:
 1098  00001be4          	L51_LF2:
 1099  00001be4  8fc2fff4	lw	r2,-12(r30)
 1100  00001be8  20410001	addi	r1,r2,#1
 1101  00001bec  00011020	add	r2,r0,r1
 1102  00001bf0  afc2fff4	sw	-12(r30),r2
 1103  00001bf4  0bffffa8	j	L49_LF2
 1104  00001bf8  54000000	nop; delay slot nop
 1105  00001bfc          	L50_LF2:
 1106  00001bfc  0bffff7c	j	L46_LF2
 1107  00001c00  54000000	nop; delay slot nop
 1108  00001c04          	L47_LF2:
 1109  00001c04  20010000	addi	r1,r0,#0
 1110  00001c08  08000004	j	L45_LF2
 1111  00001c0c  54000000	nop; delay slot nop
 1112  00001c10          	L45_LF2:
 1113  00001c10  8fa20000	lw	r2,0(r29)
 1114  00001c14  8fdffff8	lw	r31,-8(r30)
 1115  00001c18  001ee820	add	r29,r0,r30
 1116  00001c1c  8fdefffc	lw	r30,-4(r30)
 1117  00001c20  4be00000	jr	r31
 1118  00001c24  54000000	nop
 1119  00001c28          	.endproc _dmindex
 1120  00001c28          	.align 2
 1121  00001c28          	.proc _dindex
 1122  00001c28          	.global _dindex
 1123  00001c28          	_dindex:
 1124                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1125  00001c28  afbefffc	sw	-4(r29),r30; push fp
 1126  00001c2c  001df020	add	r30,r0,r29; fp = sp
 1127  00001c30  afbffff8	sw	-8(r29),r31; push ret addr
 1128  00001c34  2fbd0010	subui	r29,r29,#16; alloc local storage
 1129  00001c38  afa20000	sw	0(r29),r2
 1130  00001c3c  54000000	nop
 1131  00001c40          	L55_LF2:
 1132  00001c40  8fc10000	lw	r1,(r30)
 1133  00001c44  90220000	lbu	r2,(r1)
 1134  00001c48  64410000	snei	r1,r2,#0
 1135  00001c4c  1420000c	bnez	r1,L57_LF2
 1136  00001c50  54000000	nop; delay slot nop
 1137  00001c54  08000040	j	L56_LF2
 1138  00001c58  54000000	nop; delay slot nop
 1139  00001c5c          	L57_LF2:
 1140  00001c5c  8fc10000	lw	r1,(r30)
 1141  00001c60  90220000	lbu	r2,(r1)
 1142  00001c64  8fc10004	lw	r1,4(r30)
 1143  00001c68  00411028	seq	r2,r2,r1
 1144  00001c6c  10400010	beqz	r2,L58_LF2
 1145  00001c70  54000000	nop; delay slot nop
 1146  00001c74  8fc10000	lw	r1,(r30)
 1147  00001c78  08000028	j	L54_LF2
 1148  00001c7c  54000000	nop; delay slot nop
 1149  00001c80          	L58_LF2:
 1150  00001c80  8fc20000	lw	r2,(r30)
 1151  00001c84  20410001	addi	r1,r2,#1
 1152  00001c88  00011020	add	r2,r0,r1
 1153  00001c8c  afc20000	sw	(r30),r2
 1154  00001c90  0bffffac	j	L55_LF2
 1155  00001c94  54000000	nop; delay slot nop
 1156  00001c98          	L56_LF2:
 1157  00001c98  20010000	addi	r1,r0,#0
 1158  00001c9c  08000004	j	L54_LF2
 1159  00001ca0  54000000	nop; delay slot nop
 1160  00001ca4          	L54_LF2:
 1161  00001ca4  8fa20000	lw	r2,0(r29)
 1162  00001ca8  8fdffff8	lw	r31,-8(r30)
 1163  00001cac  001ee820	add	r29,r0,r30
 1164  00001cb0  8fdefffc	lw	r30,-4(r30)
 1165  00001cb4  4be00000	jr	r31
 1166  00001cb8  54000000	nop
 1167  00001cbc          	.endproc _dindex
 1168  00001cbc          	.align 2
 1169  00001cbc          	.proc _ditoa
 1170  00001cbc          	.global _ditoa
 1171  00001cbc          	_ditoa:
 1172                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1173  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1174  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1175  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001cc8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1177  00001ccc  afa20000	sw	0(r29),r2
 1178  00001cd0  afa30004	sw	4(r29),r3
 1179  00001cd4  8fc10000	lw	r1,(r30)
 1180  00001cd8  68220000	slti	r2,r1,#0
 1181  00001cdc  1040002c	beqz	r2,L60_LF2
 1182  00001ce0  54000000	nop; delay slot nop
 1183  00001ce4  8fc10004	lw	r1,4(r30)
 1184  00001ce8  20220001	addi	r2,r1,#1
 1185  00001cec  afc20004	sw	4(r30),r2
 1186  00001cf0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1187  00001cf4  a0220000	sb	(r1),r2
 1188  00001cf8  8fc10000	lw	r1,(r30)
 1189  00001cfc  00011022	sub	r2,r0,r1
 1190  00001d00  afc20000	sw	(r30),r2
 1191  00001d04  08000118	j	L61_LF2
 1192  00001d08  54000000	nop; delay slot nop
 1193  00001d0c          	L60_LF2:
 1194  00001d0c  8fc10000	lw	r1,(r30)
 1195  00001d10  64220000	snei	r2,r1,#0
 1196  00001d14  14400020	bnez	r2,L62_LF2
 1197  00001d18  54000000	nop; delay slot nop
 1198  00001d1c  8fc10004	lw	r1,4(r30)
 1199  00001d20  20220001	addi	r2,r1,#1
 1200  00001d24  afc20004	sw	4(r30),r2
 1201  00001d28  20020030	addi	r2,r0,(#0x30)&0xff
 1202  00001d2c  a0220000	sb	(r1),r2
 1203  00001d30  080000ec	j	L61_LF2
 1204  00001d34  54000000	nop; delay slot nop
 1205  00001d38          	L62_LF2:
 1206  00001d38  20010001	addi	r1,r0,#1
 1207  00001d3c  afc1fff4	sw	-12(r30),r1
 1208  00001d40          	L64_LF2:
 1209  00001d40  8fc1fff4	lw	r1,-12(r30)
 1210  00001d44  8fc20000	lw	r2,(r30)
 1211  00001d48  0022082c	sle	r1,r1,r2
 1212  00001d4c  1420000c	bnez	r1,L66_LF2
 1213  00001d50  54000000	nop; delay slot nop
 1214  00001d54  08000024	j	L65_LF2
 1215  00001d58  54000000	nop; delay slot nop
 1216  00001d5c          	L67_LF2:
 1217  00001d5c          	L66_LF2:
 1218  00001d5c  8fc1fff4	lw	r1,-12(r30)
 1219  00001d60  00011820	add	r3,r0,r1
 1220  00001d64  50620002	slli	r2,r3,#0x2
 1221  00001d68  00411020	add	r2,r2,r1
 1222  00001d6c  50410001	slli	r1,r2,#0x1
 1223  00001d70  afc1fff4	sw	-12(r30),r1
 1224  00001d74  0bffffc8	j	L64_LF2
 1225  00001d78  54000000	nop; delay slot nop
 1226  00001d7c          	L65_LF2:
 1227  00001d7c  54000000	nop
 1228  00001d80          	L68_LF2:
 1229  00001d80  8fc1fff4	lw	r1,-12(r30)
 1230  00001d84  2002000a	addi	r2,r0,#10
 1231  00001d88  00200035	movi2fp	f0,r1
 1232  00001d8c  00400835	movi2fp	f1,r2
 1233  00001d90  0401000f	div	f0,f0,f1
 1234  00001d94  00000834	movfp2i	r1,f0
 1235  00001d98  afc1fff4	sw	-12(r30),r1
 1236  00001d9c  8fc10004	lw	r1,4(r30)
 1237  00001da0  20220001	addi	r2,r1,#1
 1238  00001da4  afc20004	sw	4(r30),r2
 1239  00001da8  8fc20000	lw	r2,(r30)
 1240  00001dac  8fc3fff4	lw	r3,-12(r30)
 1241  00001db0  00400035	movi2fp	f0,r2
 1242  00001db4  00600835	movi2fp	f1,r3
 1243  00001db8  0401000f	div	f0,f0,f1
 1244  00001dbc  00001034	movfp2i	r2,f0
 1245  00001dc0  00021820	add	r3,r0,r2
 1246  00001dc4  20620030	addi	r2,r3,#48
 1247  00001dc8  a0220000	sb	(r1),r2
 1248  00001dcc  8fc10000	lw	r1,(r30)
 1249  00001dd0  8fc3fff4	lw	r3,-12(r30)
 1250  00001dd4  00200035	movi2fp	f0,r1
 1251  00001dd8  00600835	movi2fp	f1,r3
 1252  00001ddc  0401000f	div	f0,f0,f1
 1253  00001de0  00001034	movfp2i	r2,f0
 1254  00001de4  8fc3fff4	lw	r3,-12(r30)
 1255  00001de8  00400035	movi2fp	f0,r2
 1256  00001dec  00600835	movi2fp	f1,r3
 1257  00001df0  0401000e	mult	f0,f0,f1
 1258  00001df4  00001034	movfp2i	r2,f0
 1259  00001df8  00220822	sub	r1,r1,r2
 1260  00001dfc  afc10000	sw	(r30),r1
 1261  00001e00          	L70_LF2:
 1262  00001e00  8fc1fff4	lw	r1,-12(r30)
 1263  00001e04  6c220001	sgti	r2,r1,#1
 1264  00001e08  1440000c	bnez	r2,L71_LF2
 1265  00001e0c  54000000	nop; delay slot nop
 1266  00001e10  0800000c	j	L61_LF2
 1267  00001e14  54000000	nop; delay slot nop
 1268  00001e18          	L71_LF2:
 1269  00001e18  0bffff64	j	L68_LF2
 1270  00001e1c  54000000	nop; delay slot nop
 1271  00001e20          	L69_LF2:
 1272  00001e20          	L63_LF2:
 1273  00001e20          	L61_LF2:
 1274  00001e20  8fc10004	lw	r1,4(r30)
 1275  00001e24  20020000	addi	r2,r0,(#0x0)&0xff
 1276  00001e28  a0220000	sb	(r1),r2
 1277  00001e2c          	L59_LF2:
 1278  00001e2c  8fa20000	lw	r2,0(r29)
 1279  00001e30  8fa30004	lw	r3,4(r29)
 1280  00001e34  8fdffff8	lw	r31,-8(r30)
 1281  00001e38  001ee820	add	r29,r0,r30
 1282  00001e3c  8fdefffc	lw	r30,-4(r30)
 1283  00001e40  4be00000	jr	r31
 1284  00001e44  54000000	nop
 1285  00001e48          	.endproc _ditoa
 1286  00001e48          	.align 2
 1287  00001e48          	.proc _dstrtol
 1288  00001e48          	.global _dstrtol
 1289  00001e48          	_dstrtol:
 1290                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1291  00001e48  afbefffc	sw	-4(r29),r30; push fp
 1292  00001e4c  001df020	add	r30,r0,r29; fp = sp
 1293  00001e50  afbffff8	sw	-8(r29),r31; push ret addr
 1294  00001e54  2fbd0020	subui	r29,r29,#32; alloc local storage
 1295  00001e58  afa20000	sw	0(r29),r2
 1296  00001e5c  20010000	addi	r1,r0,#0
 1297  00001e60  afc1fff4	sw	-12(r30),r1
 1298  00001e64          	L73_LF2:
 1299  00001e64  8fc10000	lw	r1,(r30)
 1300  00001e68  90220000	lbu	r2,(r1)
 1301  00001e6c  60410020	seqi	r1,r2,#32
 1302  00001e70  14200034	bnez	r1,L75_LF2
 1303  00001e74  54000000	nop; delay slot nop
 1304  00001e78  8fc10000	lw	r1,(r30)
 1305  00001e7c  90220000	lbu	r2,(r1)
 1306  00001e80  60410009	seqi	r1,r2,#9
 1307  00001e84  14200020	bnez	r1,L75_LF2
 1308  00001e88  54000000	nop; delay slot nop
 1309  00001e8c  8fc10000	lw	r1,(r30)
 1310  00001e90  90220000	lbu	r2,(r1)
 1311  00001e94  6041000a	seqi	r1,r2,#10
 1312  00001e98  1420000c	bnez	r1,L75_LF2
 1313  00001e9c  54000000	nop; delay slot nop
 1314  00001ea0  0800001c	j	L74_LF2
 1315  00001ea4  54000000	nop; delay slot nop
 1316  00001ea8          	L75_LF2:
 1317  00001ea8  8fc20000	lw	r2,(r30)
 1318  00001eac  20410001	addi	r1,r2,#1
 1319  00001eb0  00011020	add	r2,r0,r1
 1320  00001eb4  afc20000	sw	(r30),r2
 1321  00001eb8  0bffffa8	j	L73_LF2
 1322  00001ebc  54000000	nop; delay slot nop
 1323  00001ec0          	L74_LF2:
 1324  00001ec0  8fc10004	lw	r1,4(r30)
 1325  00001ec4  64220000	snei	r2,r1,#0
 1326  00001ec8  10400010	beqz	r2,L76_LF2
 1327  00001ecc  54000000	nop; delay slot nop
 1328  00001ed0  8fc10004	lw	r1,4(r30)
 1329  00001ed4  8fc20000	lw	r2,(r30)
 1330  00001ed8  ac220000	sw	(r1),r2
 1331  00001edc          	L76_LF2:
 1332  00001edc  8fc10000	lw	r1,(r30)
 1333  00001ee0  90220000	lbu	r2,(r1)
 1334  00001ee4  64410000	snei	r1,r2,#0
 1335  00001ee8  14200010	bnez	r1,L77_LF2
 1336  00001eec  54000000	nop; delay slot nop
 1337  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1338  00001ef4  08000294	j	L72_LF2
 1339  00001ef8  54000000	nop; delay slot nop
 1340  00001efc          	L77_LF2:
 1341  00001efc  8fc10000	lw	r1,(r30)
 1342  00001f00  90220000	lbu	r2,(r1)
 1343  00001f04  6041002d	seqi	r1,r2,#45
 1344  00001f08  10200024	beqz	r1,L78_LF2
 1345  00001f0c  54000000	nop; delay slot nop
 1346  00001f10  2001ffff	addi	r1,r0,#-1
 1347  00001f14  afc1ffec	sw	-20(r30),r1
 1348  00001f18  8fc20000	lw	r2,(r30)
 1349  00001f1c  20410001	addi	r1,r2,#1
 1350  00001f20  00011020	add	r2,r0,r1
 1351  00001f24  afc20000	sw	(r30),r2
 1352  00001f28  0800000c	j	L79_LF2
 1353  00001f2c  54000000	nop; delay slot nop
 1354  00001f30          	L78_LF2:
 1355  00001f30  20010001	addi	r1,r0,#1
 1356  00001f34  afc1ffec	sw	-20(r30),r1
 1357  00001f38          	L79_LF2:
 1358  00001f38  8fc10008	lw	r1,8(r30)
 1359  00001f3c  64220000	snei	r2,r1,#0
 1360  00001f40  14400090	bnez	r2,L80_LF2
 1361  00001f44  54000000	nop; delay slot nop
 1362  00001f48  8fc10000	lw	r1,(r30)
 1363  00001f4c  90220000	lbu	r2,(r1)
 1364  00001f50  60410030	seqi	r1,r2,#48
 1365  00001f54  10200074	beqz	r1,L81_LF2
 1366  00001f58  54000000	nop; delay slot nop
 1367  00001f5c  8fc20000	lw	r2,(r30)
 1368  00001f60  20410001	addi	r1,r2,#1
 1369  00001f64  00011020	add	r2,r0,r1
 1370  00001f68  afc20000	sw	(r30),r2
 1371  00001f6c  8fc10000	lw	r1,(r30)
 1372  00001f70  90220000	lbu	r2,(r1)
 1373  00001f74  60410078	seqi	r1,r2,#120
 1374  00001f78  14200020	bnez	r1,L83_LF2
 1375  00001f7c  54000000	nop; delay slot nop
 1376  00001f80  8fc10000	lw	r1,(r30)
 1377  00001f84  90220000	lbu	r2,(r1)
 1378  00001f88  60410058	seqi	r1,r2,#88
 1379  00001f8c  1420000c	bnez	r1,L83_LF2
 1380  00001f90  54000000	nop; delay slot nop
 1381  00001f94  08000024	j	L82_LF2
 1382  00001f98  54000000	nop; delay slot nop
 1383  00001f9c          	L83_LF2:
 1384  00001f9c  20010010	addi	r1,r0,#16
 1385  00001fa0  afc10008	sw	8(r30),r1
 1386  00001fa4  8fc20000	lw	r2,(r30)
 1387  00001fa8  20410001	addi	r1,r2,#1
 1388  00001fac  00011020	add	r2,r0,r1
 1389  00001fb0  afc20000	sw	(r30),r2
 1390  00001fb4  0800000c	j	L84_LF2
 1391  00001fb8  54000000	nop; delay slot nop
 1392  00001fbc          	L82_LF2:
 1393  00001fbc  20010008	addi	r1,r0,#8
 1394  00001fc0  afc10008	sw	8(r30),r1
 1395  00001fc4          	L84_LF2:
 1396  00001fc4  0800000c	j	L80_LF2
 1397  00001fc8  54000000	nop; delay slot nop
 1398  00001fcc          	L81_LF2:
 1399  00001fcc  2001000a	addi	r1,r0,#10
 1400  00001fd0  afc10008	sw	8(r30),r1
 1401  00001fd4          	L85_LF2:
 1402  00001fd4          	L80_LF2:
 1403  00001fd4  8fc10008	lw	r1,8(r30)
 1404  00001fd8  70220000	slei	r2,r1,#0
 1405  00001fdc  1440001c	bnez	r2,L87_LF2
 1406  00001fe0  54000000	nop; delay slot nop
 1407  00001fe4  8fc10008	lw	r1,8(r30)
 1408  00001fe8  6c220010	sgti	r2,r1,#16
 1409  00001fec  1440000c	bnez	r2,L87_LF2
 1410  00001ff0  54000000	nop; delay slot nop
 1411  00001ff4  08000010	j	L86_LF2
 1412  00001ff8  54000000	nop; delay slot nop
 1413  00001ffc          	L87_LF2:
 1414  00001ffc  8fc1fff4	lw	r1,-12(r30)
 1415  00002000  08000188	j	L72_LF2
 1416  00002004  54000000	nop; delay slot nop
 1417  00002008          	L86_LF2:
 1418  00002008  54000000	nop
 1419  0000200c          	L88_LF2:
 1420  0000200c  8fc10000	lw	r1,(r30)
 1421  00002010  90220000	lbu	r2,(r1)
 1422  00002014  6c41002f	sgtui	r1,r2,#47
 1423  00002018  10200030	beqz	r1,L91_LF2
 1424  0000201c  54000000	nop; delay slot nop
 1425  00002020  8fc10000	lw	r1,(r30)
 1426  00002024  90220000	lbu	r2,(r1)
 1427  00002028  70410039	sleui	r1,r2,#57
 1428  0000202c  1020001c	beqz	r1,L91_LF2
 1429  00002030  54000000	nop; delay slot nop
 1430  00002034  8fc10000	lw	r1,(r30)
 1431  00002038  90220000	lbu	r2,(r1)
 1432  0000203c  2041ffd0	addi	r1,r2,#-48
 1433  00002040  afc1fff0	sw	-16(r30),r1
 1434  00002044  0800008c	j	L92_LF2
 1435  00002048  54000000	nop; delay slot nop
 1436  0000204c          	L91_LF2:
 1437  0000204c  8fc10000	lw	r1,(r30)
 1438  00002050  90220000	lbu	r2,(r1)
 1439  00002054  6c410060	sgtui	r1,r2,#96
 1440  00002058  10200030	beqz	r1,L93_LF2
 1441  0000205c  54000000	nop; delay slot nop
 1442  00002060  8fc10000	lw	r1,(r30)
 1443  00002064  90220000	lbu	r2,(r1)
 1444  00002068  7041007a	sleui	r1,r2,#122
 1445  0000206c  1020001c	beqz	r1,L93_LF2
 1446  00002070  54000000	nop; delay slot nop
 1447  00002074  8fc10000	lw	r1,(r30)
 1448  00002078  90220000	lbu	r2,(r1)
 1449  0000207c  2041ffa9	addi	r1,r2,#-87
 1450  00002080  afc1fff0	sw	-16(r30),r1
 1451  00002084  0800004c	j	L92_LF2
 1452  00002088  54000000	nop; delay slot nop
 1453  0000208c          	L93_LF2:
 1454  0000208c  8fc10000	lw	r1,(r30)
 1455  00002090  90220000	lbu	r2,(r1)
 1456  00002094  6c410040	sgtui	r1,r2,#64
 1457  00002098  10200030	beqz	r1,L95_LF2
 1458  0000209c  54000000	nop; delay slot nop
 1459  000020a0  8fc10000	lw	r1,(r30)
 1460  000020a4  90220000	lbu	r2,(r1)
 1461  000020a8  7041005a	sleui	r1,r2,#90
 1462  000020ac  1020001c	beqz	r1,L95_LF2
 1463  000020b0  54000000	nop; delay slot nop
 1464  000020b4  8fc10000	lw	r1,(r30)
 1465  000020b8  90220000	lbu	r2,(r1)
 1466  000020bc  2041ffc9	addi	r1,r2,#-55
 1467  000020c0  afc1fff0	sw	-16(r30),r1
 1468  000020c4  0800000c	j	L92_LF2
 1469  000020c8  54000000	nop; delay slot nop
 1470  000020cc          	L95_LF2:
 1471  000020cc  200103e8	addi	r1,r0,#1000
 1472  000020d0  afc1fff0	sw	-16(r30),r1
 1473  000020d4          	L96_LF2:
 1474  000020d4          	L94_LF2:
 1475  000020d4          	L92_LF2:
 1476  000020d4  8fc1fff0	lw	r1,-16(r30)
 1477  000020d8  8fc20008	lw	r2,8(r30)
 1478  000020dc  0022082a	slt	r1,r1,r2
 1479  000020e0  10200040	beqz	r1,L90_LF2
 1480  000020e4  54000000	nop; delay slot nop
 1481  000020e8  8fc1fff4	lw	r1,-12(r30)
 1482  000020ec  8fc20008	lw	r2,8(r30)
 1483  000020f0  00200035	movi2fp	f0,r1
 1484  000020f4  00400835	movi2fp	f1,r2
 1485  000020f8  0401000e	mult	f0,f0,f1
 1486  000020fc  00000834	movfp2i	r1,f0
 1487  00002100  afc1fff4	sw	-12(r30),r1
 1488  00002104  8fc1fff4	lw	r1,-12(r30)
 1489  00002108  8fc2fff0	lw	r2,-16(r30)
 1490  0000210c  00220820	add	r1,r1,r2
 1491  00002110  afc1fff4	sw	-12(r30),r1
 1492  00002114  8fc20000	lw	r2,(r30)
 1493  00002118  20410001	addi	r1,r2,#1
 1494  0000211c  00011020	add	r2,r0,r1
 1495  00002120  afc20000	sw	(r30),r2
 1496  00002124          	L97_LF2:
 1497  00002124          	L90_LF2:
 1498  00002124  8fc1fff0	lw	r1,-16(r30)
 1499  00002128  8fc20008	lw	r2,8(r30)
 1500  0000212c  0022082a	slt	r1,r1,r2
 1501  00002130  1420000c	bnez	r1,L98_LF2
 1502  00002134  54000000	nop; delay slot nop
 1503  00002138  0800000c	j	L89_LF2
 1504  0000213c  54000000	nop; delay slot nop
 1505  00002140          	L98_LF2:
 1506  00002140  0bfffec8	j	L88_LF2
 1507  00002144  54000000	nop; delay slot nop
 1508  00002148          	L89_LF2:
 1509  00002148  8fc10004	lw	r1,4(r30)
 1510  0000214c  64220000	snei	r2,r1,#0
 1511  00002150  10400010	beqz	r2,L99_LF2
 1512  00002154  54000000	nop; delay slot nop
 1513  00002158  8fc10004	lw	r1,4(r30)
 1514  0000215c  8fc20000	lw	r2,(r30)
 1515  00002160  ac220000	sw	(r1),r2
 1516  00002164          	L99_LF2:
 1517  00002164  8fc1fff4	lw	r1,-12(r30)
 1518  00002168  8fc2ffec	lw	r2,-20(r30)
 1519  0000216c  00200035	movi2fp	f0,r1
 1520  00002170  00400835	movi2fp	f1,r2
 1521  00002174  0401000e	mult	f0,f0,f1
 1522  00002178  00000834	movfp2i	r1,f0
 1523  0000217c  afc1fff4	sw	-12(r30),r1
 1524  00002180  8fc1fff4	lw	r1,-12(r30)
 1525  00002184  08000004	j	L72_LF2
 1526  00002188  54000000	nop; delay slot nop
 1527  0000218c          	L72_LF2:
 1528  0000218c  8fa20000	lw	r2,0(r29)
 1529  00002190  8fdffff8	lw	r31,-8(r30)
 1530  00002194  001ee820	add	r29,r0,r30
 1531  00002198  8fdefffc	lw	r30,-4(r30)
 1532  0000219c  4be00000	jr	r31
 1533  000021a0  54000000	nop
 1534  000021a4          	.endproc _dstrtol
 1535  000021a4          	.align 2
 1536  000021a4          	.proc _bcopy
 1537  000021a4          	.global _bcopy
 1538  000021a4          	_bcopy:
 1539                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1540  000021a4  afbefffc	sw	-4(r29),r30; push fp
 1541  000021a8  001df020	add	r30,r0,r29; fp = sp
 1542  000021ac  afbffff8	sw	-8(r29),r31; push ret addr
 1543  000021b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1544  000021b4  afa20000	sw	0(r29),r2
 1545  000021b8  afa30004	sw	4(r29),r3
 1546  000021bc  54000000	nop
 1547  000021c0          	L101_LF2:
 1548  000021c0  8fc10008	lw	r1,8(r30)
 1549  000021c4  2022ffff	addi	r2,r1,#-1
 1550  000021c8  afc20008	sw	8(r30),r2
 1551  000021cc  6c210000	sgti	r1,r1,#0
 1552  000021d0  1420000c	bnez	r1,L103_LF2
 1553  000021d4  54000000	nop; delay slot nop
 1554  000021d8  0800002c	j	L102_LF2
 1555  000021dc  54000000	nop; delay slot nop
 1556  000021e0          	L103_LF2:
 1557  000021e0  8fc10004	lw	r1,4(r30)
 1558  000021e4  20220001	addi	r2,r1,#1
 1559  000021e8  afc20004	sw	4(r30),r2
 1560  000021ec  8fc20000	lw	r2,(r30)
 1561  000021f0  20430001	addi	r3,r2,#1
 1562  000021f4  afc30000	sw	(r30),r3
 1563  000021f8  80420000	lb	r2,(r2)
 1564  000021fc  a0220000	sb	(r1),r2
 1565  00002200  0bffffbc	j	L101_LF2
 1566  00002204  54000000	nop; delay slot nop
 1567  00002208          	L102_LF2:
 1568  00002208          	L100_LF2:
 1569  00002208  8fa20000	lw	r2,0(r29)
 1570  0000220c  8fa30004	lw	r3,4(r29)
 1571  00002210  8fdffff8	lw	r31,-8(r30)
 1572  00002214  001ee820	add	r29,r0,r30
 1573  00002218  8fdefffc	lw	r30,-4(r30)
 1574  0000221c  4be00000	jr	r31
 1575  00002220  54000000	nop
 1576  00002224          	.endproc _bcopy
 1577  00002224          	.align 2
 1578  00002224          	.proc _bzero
 1579  00002224          	.global _bzero
 1580  00002224          	_bzero:
 1581                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1582  00002224  afbefffc	sw	-4(r29),r30; push fp
 1583  00002228  001df020	add	r30,r0,r29; fp = sp
 1584  0000222c  afbffff8	sw	-8(r29),r31; push ret addr
 1585  00002230  2fbd0010	subui	r29,r29,#16; alloc local storage
 1586  00002234  afa20000	sw	0(r29),r2
 1587  00002238  54000000	nop
 1588  0000223c          	L105_LF2:
 1589  0000223c  8fc10004	lw	r1,4(r30)
 1590  00002240  2022ffff	addi	r2,r1,#-1
 1591  00002244  afc20004	sw	4(r30),r2
 1592  00002248  6c210000	sgti	r1,r1,#0
 1593  0000224c  1420000c	bnez	r1,L107_LF2
 1594  00002250  54000000	nop; delay slot nop
 1595  00002254  08000020	j	L106_LF2
 1596  00002258  54000000	nop; delay slot nop
 1597  0000225c          	L107_LF2:
 1598  0000225c  8fc10000	lw	r1,(r30)
 1599  00002260  20220001	addi	r2,r1,#1
 1600  00002264  afc20000	sw	(r30),r2
 1601  00002268  20020000	addi	r2,r0,(#0x0)&0xff
 1602  0000226c  a0220000	sb	(r1),r2
 1603  00002270  0bffffc8	j	L105_LF2
 1604  00002274  54000000	nop; delay slot nop
 1605  00002278          	L106_LF2:
 1606  00002278          	L104_LF2:
 1607  00002278  8fa20000	lw	r2,0(r29)
 1608  0000227c  8fdffff8	lw	r31,-8(r30)
 1609  00002280  001ee820	add	r29,r0,r30
 1610  00002284  8fdefffc	lw	r30,-4(r30)
 1611  00002288  4be00000	jr	r31
 1612  0000228c  54000000	nop
 1613  00002290          	.endproc _bzero
 1614  00002290          	.align 2
 1615  00002290          	.proc _min
 1616  00002290          	.global _min
 1617  00002290          	_min:
 1618                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1619  00002290  afbefffc	sw	-4(r29),r30; push fp
 1620  00002294  001df020	add	r30,r0,r29; fp = sp
 1621  00002298  afbffff8	sw	-8(r29),r31; push ret addr
 1622  0000229c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1623  000022a0  afa20000	sw	0(r29),r2
 1624  000022a4  afa30004	sw	4(r29),r3
 1625  000022a8  8fc10000	lw	r1,(r30)
 1626  000022ac  8fc20004	lw	r2,4(r30)
 1627  000022b0  0022182c	sle	r3,r1,r2
 1628  000022b4  14600008	bnez	r3,L109_LF2
 1629  000022b8  54000000	nop; delay slot nop
 1630  000022bc  8fc10004	lw	r1,4(r30)
 1631  000022c0          	L109_LF2:
 1632  000022c0  08000004	j	L108_LF2
 1633  000022c4  54000000	nop; delay slot nop
 1634  000022c8          	L108_LF2:
 1635  000022c8  8fa20000	lw	r2,0(r29)
 1636  000022cc  8fa30004	lw	r3,4(r29)
 1637  000022d0  8fdffff8	lw	r31,-8(r30)
 1638  000022d4  001ee820	add	r29,r0,r30
 1639  000022d8  8fdefffc	lw	r30,-4(r30)
 1640  000022dc  4be00000	jr	r31
 1641  000022e0  54000000	nop
 1642  000022e4          	.endproc _min
 1643  000022e4          	.align 2
 1644  000022e4          	.proc _max
 1645  000022e4          	.global _max
 1646  000022e4          	_max:
 1647                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1648  000022e4  afbefffc	sw	-4(r29),r30; push fp
 1649  000022e8  001df020	add	r30,r0,r29; fp = sp
 1650  000022ec  afbffff8	sw	-8(r29),r31; push ret addr
 1651  000022f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1652  000022f4  afa20000	sw	0(r29),r2
 1653  000022f8  afa30004	sw	4(r29),r3
 1654  000022fc  8fc10000	lw	r1,(r30)
 1655  00002300  8fc20004	lw	r2,4(r30)
 1656  00002304  0022182d	sge	r3,r1,r2
 1657  00002308  14600008	bnez	r3,L111_LF2
 1658  0000230c  54000000	nop; delay slot nop
 1659  00002310  8fc10004	lw	r1,4(r30)
 1660  00002314          	L111_LF2:
 1661  00002314  08000004	j	L110_LF2
 1662  00002318  54000000	nop; delay slot nop
 1663  0000231c          	L110_LF2:
 1664  0000231c  8fa20000	lw	r2,0(r29)
 1665  00002320  8fa30004	lw	r3,4(r29)
 1666  00002324  8fdffff8	lw	r31,-8(r30)
 1667  00002328  001ee820	add	r29,r0,r30
 1668  0000232c  8fdefffc	lw	r30,-4(r30)
 1669  00002330  4be00000	jr	r31
 1670  00002334  54000000	nop
 1671  00002338          	.endproc _max
 1672                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1673                      ;;;
 1674                      ;;; Most of the traps are called in files from libtraps.
 1677  00002338          	.align 2
 1678  00002338          	.proc _exit
 1679  00002338          	.global _exit
 1680  00002338          	_exit:
 1681  00002338  44000300	trap	#0x300
 1682  0000233c  4be00000	jr	r31
 1683  00002340  54000000	nop
 1684  00002344          	.endproc _exit
 1686                      ; for the benefit of gcc.
 1687  00002344          	.proc ___main
 1688  00002344          	.global ___main
 1689  00002344          	___main:
 1690  00002344  4be00000	jr	r31
 1691  00002348  54000000	nop
 1692  0000234c          	.endproc ___main
 1693  0000234c          	.text
 1694  0000234c          	.global _etext
 1695  0000234c          	_etext:
 1696  0000234c          	.align 3
 1697  00002350          	.data
 1698  0000318a          	.global _edata
 1699  0000318a          	_edata:
