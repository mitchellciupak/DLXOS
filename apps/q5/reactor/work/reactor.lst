 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 221
    4                      ; Text size: 4360
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  25640a00	.ascii "%d\n\000"
   83  00003004          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage: \000"
   85  00003008  653a2000	
   86  0000300c          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003010  6e646c65	
   88  00003014  5f746f5f	
   88  00003018  73686172	
   88  0000301c  65645f6d	
   88  00003020  656d6f72	
   88  00003024  795f7061	
   88  00003028  67653e20	
   88  0000302c  3c68616e	
   88  00003030  646c655f	
   88  00003034  746f5f70	
   88  00003038  6167655f	
   88  0000303c  6d617070	
   88  00003040  65645f73	
   88  00003044  656d6170	
   88  00003048  686f7265	
   88  0000304c  3e0a00  	
   89  0000304f          	.align 2
   90  00003050          	LC3_LF0:
   91  00003050  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  00003054  64206e6f	
   91  00003058  74206d61	
   91  0000305c  70207468	
   91  00003060  65207669	
   91  00003064  72747561	
   91  00003068  6c206164	
   91  0000306c  64726573	
   91  00003070  7320746f	
   91  00003074  20746865	
   91  00003078  206d656d	
   91  0000307c  6f727920	
   91  00003080  696e2000	
   92  00003084          	.align 2
   93  00003084          	LC4_LF0:
   94  00003084  2c206578	.ascii ", exiting...\n\000"
   94  00003088  6974696e	
   94  0000308c  672e2e2e	
   94  00003090  0a00    	
   95  00003092          	.align 2
   96  00003094          	LC5_LF0:
   97  00003094  52656163	.ascii "Reactor: PID %d is complete.\n\000"
   97  00003098  746f723a	
   97  0000309c  20504944	
   97  000030a0  20256420	
   97  000030a4  69732063	
   97  000030a8  6f6d706c	
   97  000030ac  6574652e	
   97  000030b0  0a00    	
   98  000030b2          	.align 2
   99  000030b4          	LC6_LF0:
  100  000030b4  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  100  000030b8  73656d61	
  100  000030bc  70686f72	
  100  000030c0  6520735f	
  100  000030c4  70726f63	
  100  000030c8  735f636f	
  100  000030cc  6d706c65	
  100  000030d0  74656420	
  100  000030d4  28256429	
  100  000030d8  20696e20	
  100  000030dc  00      	
  101  000030dd          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc40004	lw	r4,4(r30)
  113  000010ec  0c001010	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  23bdfff8	addi	r29,r29,#-8
  116  000010f8  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  117  000010fc  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  118  00001100  afa50000	sw	(r29),r5
  119  00001104  afa20004	sw	4(r29),r2
  120  00001108  0c0001ec	jal	_Printf
  121  0000110c  54000000	nop; not filled.
  122  00001110  2041fffc	addi	r1,r2,#-4
  123  00001114  23bd0008	addi	r29,r29,#8
  124  00001118  6c210001	sgtui	r1,r1,#1
  125  0000111c  1020004c	beqz	r1,L14_LF0
  126  00001120  54000000	nop; not filled.
  127  00001124  23bdfff8	addi	r29,r29,#-8
  128  00001128  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  129  0000112c  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  130  00001130  afa50000	sw	(r29),r5
  131  00001134  0c0001c0	jal	_Printf
  132  00001138  54000000	nop; not filled.
  133  0000113c  8c850000	lw	r5,(r4)
  134  00001140  afa50000	sw	(r29),r5
  135  00001144  0c0001b0	jal	_Printf
  136  00001148  54000000	nop; not filled.
  137  0000114c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  138  00001150  24a5300c	addui	r5,r5,(LC2_LF0)&0xffff
  139  00001154  afa50000	sw	(r29),r5
  140  00001158  0c00019c	jal	_Printf
  141  0000115c  54000000	nop; not filled.
  142  00001160  0c000248	jal	_Exit
  143  00001164  54000000	nop; not filled.
  144  00001168  23bd0008	addi	r29,r29,#8
  145  0000116c          	L14_LF0:
  146  0000116c  23bdfff0	addi	r29,r29,#-16
  147  00001170  8c850004	lw	r5,4(r4)
  148  00001174  afa50000	sw	(r29),r5
  149  00001178  20050000	addi	r5,r0,#0
  150  0000117c  afa50004	sw	4(r29),r5
  151  00001180  2005000a	addi	r5,r0,#10
  152  00001184  afa50008	sw	8(r29),r5
  153  00001188  0c000acc	jal	_dstrtol
  154  0000118c  54000000	nop; not filled.
  155  00001190  00011020	add	r2,r0,r1
  156  00001194  8c850008	lw	r5,8(r4)
  157  00001198  afa50000	sw	(r29),r5
  158  0000119c  20050000	addi	r5,r0,#0
  159  000011a0  afa50004	sw	4(r29),r5
  160  000011a4  2005000a	addi	r5,r0,#10
  161  000011a8  afa50008	sw	8(r29),r5
  162  000011ac  0c000aa8	jal	_dstrtol
  163  000011b0  54000000	nop; not filled.
  164  000011b4  00011820	add	r3,r0,r1
  165  000011b8  afa20000	sw	(r29),r2
  166  000011bc  0c000168	jal	_shmat
  167  000011c0  54000000	nop; not filled.
  168  000011c4  23bd0010	addi	r29,r29,#16
  169  000011c8  64210000	snei	r1,r1,#0
  170  000011cc  1420004c	bnez	r1,L15_LF0
  171  000011d0  54000000	nop; not filled.
  172  000011d4  23bdfff8	addi	r29,r29,#-8
  173  000011d8  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  174  000011dc  24a53050	addui	r5,r5,(LC3_LF0)&0xffff
  175  000011e0  afa50000	sw	(r29),r5
  176  000011e4  0c000110	jal	_Printf
  177  000011e8  54000000	nop; not filled.
  178  000011ec  8c850000	lw	r5,(r4)
  179  000011f0  afa50000	sw	(r29),r5
  180  000011f4  0c000100	jal	_Printf
  181  000011f8  54000000	nop; not filled.
  182  000011fc  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  183  00001200  24a53084	addui	r5,r5,(LC4_LF0)&0xffff
  184  00001204  afa50000	sw	(r29),r5
  185  00001208  0c0000ec	jal	_Printf
  186  0000120c  54000000	nop; not filled.
  187  00001210  0c000198	jal	_Exit
  188  00001214  54000000	nop; not filled.
  189  00001218  23bd0008	addi	r29,r29,#8
  190  0000121c          	L15_LF0:
  191  0000121c  0c0000e4	jal	_getpid
  192  00001220  54000000	nop; not filled.
  193  00001224  23bdfff8	addi	r29,r29,#-8
  194  00001228  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  195  0000122c  24a53094	addui	r5,r5,(LC5_LF0)&0xffff
  196  00001230  afa50000	sw	(r29),r5
  197  00001234  afa10004	sw	4(r29),r1
  198  00001238  0c0000bc	jal	_Printf
  199  0000123c  54000000	nop; not filled.
  200  00001240  afa30000	sw	(r29),r3
  201  00001244  0c000104	jal	_sem_signal
  202  00001248  54000000	nop; not filled.
  203  0000124c  23bd0008	addi	r29,r29,#8
  204  00001250  64210001	snei	r1,r1,#1
  205  00001254  10200050	beqz	r1,L16_LF0
  206  00001258  54000000	nop; not filled.
  207  0000125c  23bdfff8	addi	r29,r29,#-8
  208  00001260  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  209  00001264  24a530b4	addui	r5,r5,(LC6_LF0)&0xffff
  210  00001268  afa50000	sw	(r29),r5
  211  0000126c  afa30004	sw	4(r29),r3
  212  00001270  0c000084	jal	_Printf
  213  00001274  54000000	nop; not filled.
  214  00001278  8c840000	lw	r4,(r4)
  215  0000127c  afa40000	sw	(r29),r4
  216  00001280  0c000074	jal	_Printf
  217  00001284  54000000	nop; not filled.
  218  00001288  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  219  0000128c  24a53084	addui	r5,r5,(LC4_LF0)&0xffff
  220  00001290  afa50000	sw	(r29),r5
  221  00001294  0c000060	jal	_Printf
  222  00001298  54000000	nop; not filled.
  223  0000129c  0c00010c	jal	_Exit
  224  000012a0  54000000	nop; not filled.
  225  000012a4  23bd0008	addi	r29,r29,#8
  226  000012a8          	L16_LF0:
  227  000012a8  0c000e48	jal	_exit
  228  000012ac  54000000	nop
  229  000012b0          	.endproc _main
  230                      ;;;
  231                      ;;; Stub functions for DLX traps.
  232                      ;;;
  233                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  234                      ;;;
  235                      ;;; The traps such as Open and Close
  236                      ;;; (note the capital letters) are for use by user programs.  The traps
  237                      ;;; with names such as open and close (lower case) are for use by the OS.
  238                      ;;;
  241  000012b0          	.align 2
  243                      ;;; The following are the traps to be used by user-level programs
  244                      ;;;
  246  000012b0          	.align 2
  247  000012b0          	.proc _Open
  248  000012b0          	.global _Open
  249  000012b0          	_Open:
  250                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  251                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  252                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  253  000012b0  44000213	trap	#0x213
  254  000012b4  4be00000	jr	r31
  255  000012b8  54000000	nop
  256  000012bc          	.endproc _Open
  258  000012bc          	.proc _Close
  259  000012bc          	.global _Close
  260  000012bc          	_Close:
  261  000012bc  44000214	trap	#0x214
  262  000012c0  4be00000	jr	r31
  263  000012c4  54000000	nop
  264  000012c8          	.endproc _Close
  266  000012c8          	.proc _Read
  267  000012c8          	.global _Read
  268  000012c8          	_Read:
  269  000012c8  44000210	trap	#0x210
  270  000012cc  4be00000	jr	r31
  271  000012d0  54000000	nop
  272  000012d4          	.endproc _Read
  274  000012d4          	.proc _Write
  275  000012d4          	.global _Write
  276  000012d4          	_Write:
  277  000012d4  44000211	trap	#0x211
  278  000012d8  4be00000	jr	r31
  279  000012dc  54000000	nop
  280  000012e0          	.endproc _Write
  282  000012e0          	.proc _Lseek
  283  000012e0          	.global _Lseek
  284  000012e0          	_Lseek:
  285  000012e0  44000212	trap	#0x212
  286  000012e4  4be00000	jr	r31
  287  000012e8  54000000	nop
  288  000012ec          	.endproc _Lseek
  290  000012ec          	.proc _Putchar
  291  000012ec          	.global _Putchar
  292  000012ec          	_Putchar:
  293  000012ec  44000280	trap	#0x280
  294  000012f0  4be00000	jr	r31
  295  000012f4  54000000	nop
  296  000012f8          	.endproc _Putchar
  298  000012f8          	.proc _Printf
  299  000012f8          	.global _Printf
  300  000012f8          	_Printf:
  301  000012f8  44000201	trap	#0x201
  302  000012fc  4be00000	jr	r31
  303  00001300  54000000	nop
  304  00001304          	.endproc _Printf
  306  00001304          	.proc _getpid
  307  00001304          	.global _getpid
  308  00001304          	_getpid:
  309  00001304  44000431	trap	#0x431
  310  00001308  4be00000	jr	r31
  311  0000130c  54000000	nop
  312  00001310          	.endproc _getpid
  314  00001310          	.proc _process_create
  315  00001310          	.global _process_create
  316  00001310          	_process_create:
  317  00001310  44000432	trap	#0x432
  318  00001314  4be00000	jr	r31
  319  00001318  54000000	nop
  320  0000131c          	.endproc _process_create
  322  0000131c          	.proc _shmget
  323  0000131c          	.global _shmget
  324  0000131c          	_shmget:
  325  0000131c  44000440	trap	#0x440
  326  00001320  4be00000	jr	r31
  327  00001324  54000000	nop
  328  00001328          	.endproc _shmget
  330  00001328          	.proc _shmat
  331  00001328          	.global _shmat
  332  00001328          	_shmat:
  333  00001328  44000441	trap	#0x441
  334  0000132c  4be00000	jr	r31
  335  00001330  54000000	nop
  336  00001334          	.endproc _shmat
  338  00001334          	.proc _sem_create
  339  00001334          	.global _sem_create
  340  00001334          	_sem_create:
  341  00001334  44000450	trap	#0x450
  342  00001338  4be00000	jr	r31
  343  0000133c  54000000	nop
  344  00001340          	.endproc _sem_create
  346  00001340          	.proc _sem_wait
  347  00001340          	.global _sem_wait
  348  00001340          	_sem_wait:
  349  00001340  44000451	trap	#0x451
  350  00001344  4be00000	jr	r31
  351  00001348  54000000	nop
  352  0000134c          	.endproc _sem_wait
  354  0000134c          	.proc _sem_signal
  355  0000134c          	.global _sem_signal
  356  0000134c          	_sem_signal:
  357  0000134c  44000452	trap	#0x452
  358  00001350  4be00000	jr	r31
  359  00001354  54000000	nop
  360  00001358          	.endproc _sem_signal
  362  00001358          	.proc _lock_create
  363  00001358          	.global _lock_create
  364  00001358          	_lock_create:
  365  00001358  44000453	trap	#0x453
  366  0000135c  4be00000	jr	r31
  367  00001360  54000000	nop
  368  00001364          	.endproc _lock_create
  370  00001364          	.proc _lock_acquire
  371  00001364          	.global _lock_acquire
  372  00001364          	_lock_acquire:
  373  00001364  44000454	trap	#0x454
  374  00001368  4be00000	jr	r31
  375  0000136c  54000000	nop
  376  00001370          	.endproc _lock_acquire
  378  00001370          	.proc _lock_release
  379  00001370          	.global _lock_release
  380  00001370          	_lock_release:
  381  00001370  44000455	trap	#0x455
  382  00001374  4be00000	jr	r31
  383  00001378  54000000	nop
  384  0000137c          	.endproc _lock_release
  386  0000137c          	.proc _cond_create
  387  0000137c          	.global _cond_create
  388  0000137c          	_cond_create:
  389  0000137c  44000456	trap	#0x456
  390  00001380  4be00000	jr	r31
  391  00001384  54000000	nop
  392  00001388          	.endproc _cond_create
  394  00001388          	.proc _cond_wait
  395  00001388          	.global _cond_wait
  396  00001388          	_cond_wait:
  397  00001388  44000457	trap	#0x457
  398  0000138c  4be00000	jr	r31
  399  00001390  54000000	nop
  400  00001394          	.endproc _cond_wait
  402  00001394          	.proc _cond_signal
  403  00001394          	.global _cond_signal
  404  00001394          	_cond_signal:
  405  00001394  44000458	trap	#0x458
  406  00001398  4be00000	jr	r31
  407  0000139c  54000000	nop
  408  000013a0          	.endproc _cond_signal
  410  000013a0          	.proc _cond_broadcast
  411  000013a0          	.global _cond_broadcast
  412  000013a0          	_cond_broadcast:
  413  000013a0  44000455	trap	#0x455
  414  000013a4  4be00000	jr	r31
  415  000013a8  54000000	nop
  416  000013ac          	.endproc _cond_broadcast
  418  000013ac          	.proc _Exit
  419  000013ac          	.global _Exit
  420  000013ac          	_Exit:
  421  000013ac  44000500	trap	#0x500
  422  000013b0  4be00000	jr	r31
  423  000013b4  54000000	nop
  424  000013b8          	.endproc _Exit
  425                      ; Compiled by GCC
  427  000013b8          	.align 2
  428  000013b8          	.proc _isspace
  429  000013b8          	.global _isspace
  430  000013b8          	_isspace:
  431                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  432  000013b8  afbefffc	sw	-4(r29),r30; push fp
  433  000013bc  001df020	add	r30,r0,r29; fp = sp
  434  000013c0  afbffff8	sw	-8(r29),r31; push ret addr
  435  000013c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  436  000013c8  afa20000	sw	0(r29),r2
  437  000013cc  afa30004	sw	4(r29),r3
  438  000013d0  afa40008	sw	8(r29),r4
  439  000013d4  83c20003	lb	r2,3(r30)
  440  000013d8  20010000	addi	r1,r0,#0
  441  000013dc  304300ff	andi	r3,r2,#0x00ff
  442  000013e0  60640020	seqi	r4,r3,#32
  443  000013e4  1480002c	bnez	r4,L3_LF2
  444  000013e8  54000000	nop; delay slot nop
  445  000013ec  304300ff	andi	r3,r2,#0x00ff
  446  000013f0  60640009	seqi	r4,r3,#9
  447  000013f4  1480001c	bnez	r4,L3_LF2
  448  000013f8  54000000	nop; delay slot nop
  449  000013fc  304300ff	andi	r3,r2,#0x00ff
  450  00001400  6064000a	seqi	r4,r3,#10
  451  00001404  1480000c	bnez	r4,L3_LF2
  452  00001408  54000000	nop; delay slot nop
  453  0000140c  08000008	j	L2_LF2
  454  00001410  54000000	nop; delay slot nop
  455  00001414          	L3_LF2:
  456  00001414  20010001	addi	r1,r0,#1
  457  00001418          	L2_LF2:
  458  00001418  08000004	j	L1_LF2
  459  0000141c  54000000	nop; delay slot nop
  460  00001420          	L1_LF2:
  461  00001420  8fa20000	lw	r2,0(r29)
  462  00001424  8fa30004	lw	r3,4(r29)
  463  00001428  8fa40008	lw	r4,8(r29)
  464  0000142c  8fdffff8	lw	r31,-8(r30)
  465  00001430  001ee820	add	r29,r0,r30
  466  00001434  8fdefffc	lw	r30,-4(r30)
  467  00001438  4be00000	jr	r31
  468  0000143c  54000000	nop
  469  00001440          	.endproc _isspace
  470  00001440          	.align 2
  471  00001440          	.proc _isxdigit
  472  00001440          	.global _isxdigit
  473  00001440          	_isxdigit:
  474                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  475  00001440  afbefffc	sw	-4(r29),r30; push fp
  476  00001444  001df020	add	r30,r0,r29; fp = sp
  477  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  478  0000144c  2fbd0018	subui	r29,r29,#24; alloc local storage
  479  00001450  afa20000	sw	0(r29),r2
  480  00001454  afa30004	sw	4(r29),r3
  481  00001458  afa40008	sw	8(r29),r4
  482  0000145c  83c20003	lb	r2,3(r30)
  483  00001460  20010000	addi	r1,r0,#0
  484  00001464  304300ff	andi	r3,r2,#0x00ff
  485  00001468  6c64002f	sgtui	r4,r3,#47
  486  0000146c  1080001c	beqz	r4,L7_LF2
  487  00001470  54000000	nop; delay slot nop
  488  00001474  304300ff	andi	r3,r2,#0x00ff
  489  00001478  70640039	sleui	r4,r3,#57
  490  0000147c  1480005c	bnez	r4,L6_LF2
  491  00001480  54000000	nop; delay slot nop
  492  00001484  08000004	j	L7_LF2
  493  00001488  54000000	nop; delay slot nop
  494  0000148c          	L7_LF2:
  495  0000148c  304300ff	andi	r3,r2,#0x00ff
  496  00001490  6c640060	sgtui	r4,r3,#96
  497  00001494  1080001c	beqz	r4,L8_LF2
  498  00001498  54000000	nop; delay slot nop
  499  0000149c  304300ff	andi	r3,r2,#0x00ff
  500  000014a0  70640066	sleui	r4,r3,#102
  501  000014a4  14800034	bnez	r4,L6_LF2
  502  000014a8  54000000	nop; delay slot nop
  503  000014ac  08000004	j	L8_LF2
  504  000014b0  54000000	nop; delay slot nop
  505  000014b4          	L8_LF2:
  506  000014b4  304300ff	andi	r3,r2,#0x00ff
  507  000014b8  6c640040	sgtui	r4,r3,#64
  508  000014bc  10800020	beqz	r4,L5_LF2
  509  000014c0  54000000	nop; delay slot nop
  510  000014c4  304300ff	andi	r3,r2,#0x00ff
  511  000014c8  70640041	sleui	r4,r3,#65
  512  000014cc  1480000c	bnez	r4,L6_LF2
  513  000014d0  54000000	nop; delay slot nop
  514  000014d4  08000008	j	L5_LF2
  515  000014d8  54000000	nop; delay slot nop
  516  000014dc          	L6_LF2:
  517  000014dc  20010001	addi	r1,r0,#1
  518  000014e0          	L5_LF2:
  519  000014e0  08000004	j	L4_LF2
  520  000014e4  54000000	nop; delay slot nop
  521  000014e8          	L4_LF2:
  522  000014e8  8fa20000	lw	r2,0(r29)
  523  000014ec  8fa30004	lw	r3,4(r29)
  524  000014f0  8fa40008	lw	r4,8(r29)
  525  000014f4  8fdffff8	lw	r31,-8(r30)
  526  000014f8  001ee820	add	r29,r0,r30
  527  000014fc  8fdefffc	lw	r30,-4(r30)
  528  00001500  4be00000	jr	r31
  529  00001504  54000000	nop
  530  00001508          	.endproc _isxdigit
  531  00001508          	.align 2
  532  00001508          	.proc _dstrcpy
  533  00001508          	.global _dstrcpy
  534  00001508          	_dstrcpy:
  535                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  536  00001508  afbefffc	sw	-4(r29),r30; push fp
  537  0000150c  001df020	add	r30,r0,r29; fp = sp
  538  00001510  afbffff8	sw	-8(r29),r31; push ret addr
  539  00001514  2fbd0018	subui	r29,r29,#24; alloc local storage
  540  00001518  afa20000	sw	0(r29),r2
  541  0000151c  afa30004	sw	4(r29),r3
  542  00001520  8fc10000	lw	r1,(r30)
  543  00001524  afc1fff4	sw	-12(r30),r1
  544  00001528          	L10_LF2:
  545  00001528  8fc10000	lw	r1,(r30)
  546  0000152c  20220001	addi	r2,r1,#1
  547  00001530  afc20000	sw	(r30),r2
  548  00001534  8fc20004	lw	r2,4(r30)
  549  00001538  20430001	addi	r3,r2,#1
  550  0000153c  afc30004	sw	4(r30),r3
  551  00001540  80420000	lb	r2,(r2)
  552  00001544  a0220000	sb	(r1),r2
  553  00001548  a3c2fff3	sb	-13(r30),r2
  554  0000154c          	L12_LF2:
  555  0000154c  93c1fff3	lbu	r1,-13(r30)
  556  00001550  64220000	snei	r2,r1,#0
  557  00001554  1440000c	bnez	r2,L13_LF2
  558  00001558  54000000	nop; delay slot nop
  559  0000155c  0800000c	j	L11_LF2
  560  00001560  54000000	nop; delay slot nop
  561  00001564          	L13_LF2:
  562  00001564  0bffffc0	j	L10_LF2
  563  00001568  54000000	nop; delay slot nop
  564  0000156c          	L11_LF2:
  565  0000156c  8fc1fff4	lw	r1,-12(r30)
  566  00001570  08000004	j	L9_LF2
  567  00001574  54000000	nop; delay slot nop
  568  00001578          	L9_LF2:
  569  00001578  8fa20000	lw	r2,0(r29)
  570  0000157c  8fa30004	lw	r3,4(r29)
  571  00001580  8fdffff8	lw	r31,-8(r30)
  572  00001584  001ee820	add	r29,r0,r30
  573  00001588  8fdefffc	lw	r30,-4(r30)
  574  0000158c  4be00000	jr	r31
  575  00001590  54000000	nop
  576  00001594          	.endproc _dstrcpy
  577  00001594          	.align 2
  578  00001594          	.proc _dstrncpy
  579  00001594          	.global _dstrncpy
  580  00001594          	_dstrncpy:
  581                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  582  00001594  afbefffc	sw	-4(r29),r30; push fp
  583  00001598  001df020	add	r30,r0,r29; fp = sp
  584  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  585  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  000015a4  afa20000	sw	0(r29),r2
  587  000015a8  afa30004	sw	4(r29),r3
  588  000015ac  8fc10000	lw	r1,(r30)
  589  000015b0  afc1fff4	sw	-12(r30),r1
  590  000015b4          	L15_LF2:
  591  000015b4  8fc10008	lw	r1,8(r30)
  592  000015b8  2022ffff	addi	r2,r1,#-1
  593  000015bc  afc20008	sw	8(r30),r2
  594  000015c0  70210000	slei	r1,r1,#0
  595  000015c4  1020000c	beqz	r1,L18_LF2
  596  000015c8  54000000	nop; delay slot nop
  597  000015cc  08000048	j	L16_LF2
  598  000015d0  54000000	nop; delay slot nop
  599  000015d4          	L18_LF2:
  600  000015d4  8fc10000	lw	r1,(r30)
  601  000015d8  20220001	addi	r2,r1,#1
  602  000015dc  afc20000	sw	(r30),r2
  603  000015e0  8fc20004	lw	r2,4(r30)
  604  000015e4  20430001	addi	r3,r2,#1
  605  000015e8  afc30004	sw	4(r30),r3
  606  000015ec  80420000	lb	r2,(r2)
  607  000015f0  a0220000	sb	(r1),r2
  608  000015f4  a3c2fff3	sb	-13(r30),r2
  609  000015f8          	L17_LF2:
  610  000015f8  93c1fff3	lbu	r1,-13(r30)
  611  000015fc  64220000	snei	r2,r1,#0
  612  00001600  1440000c	bnez	r2,L19_LF2
  613  00001604  54000000	nop; delay slot nop
  614  00001608  0800000c	j	L16_LF2
  615  0000160c  54000000	nop; delay slot nop
  616  00001610          	L19_LF2:
  617  00001610  0bffffa0	j	L15_LF2
  618  00001614  54000000	nop; delay slot nop
  619  00001618          	L16_LF2:
  620  00001618  8fc1fff4	lw	r1,-12(r30)
  621  0000161c  08000004	j	L14_LF2
  622  00001620  54000000	nop; delay slot nop
  623  00001624          	L14_LF2:
  624  00001624  8fa20000	lw	r2,0(r29)
  625  00001628  8fa30004	lw	r3,4(r29)
  626  0000162c  8fdffff8	lw	r31,-8(r30)
  627  00001630  001ee820	add	r29,r0,r30
  628  00001634  8fdefffc	lw	r30,-4(r30)
  629  00001638  4be00000	jr	r31
  630  0000163c  54000000	nop
  631  00001640          	.endproc _dstrncpy
  632  00001640          	.align 2
  633  00001640          	.proc _dstrcat
  634  00001640          	.global _dstrcat
  635  00001640          	_dstrcat:
  636                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  637  00001640  afbefffc	sw	-4(r29),r30; push fp
  638  00001644  001df020	add	r30,r0,r29; fp = sp
  639  00001648  afbffff8	sw	-8(r29),r31; push ret addr
  640  0000164c  2fbd0018	subui	r29,r29,#24; alloc local storage
  641  00001650  afa20000	sw	0(r29),r2
  642  00001654  8fc10000	lw	r1,(r30)
  643  00001658  afc1fff4	sw	-12(r30),r1
  644  0000165c          	L21_LF2:
  645  0000165c  8fc10000	lw	r1,(r30)
  646  00001660  90220000	lbu	r2,(r1)
  647  00001664  64410000	snei	r1,r2,#0
  648  00001668  1420000c	bnez	r1,L23_LF2
  649  0000166c  54000000	nop; delay slot nop
  650  00001670  0800001c	j	L22_LF2
  651  00001674  54000000	nop; delay slot nop
  652  00001678          	L23_LF2:
  653  00001678  8fc20000	lw	r2,(r30)
  654  0000167c  20410001	addi	r1,r2,#1
  655  00001680  00011020	add	r2,r0,r1
  656  00001684  afc20000	sw	(r30),r2
  657  00001688  0bffffd0	j	L21_LF2
  658  0000168c  54000000	nop; delay slot nop
  659  00001690          	L22_LF2:
  660  00001690  23bdfff8	addi	r29,r29,#-8
  661  00001694  001d0820	add	r1,r0,r29
  662  00001698  8fc20000	lw	r2,(r30)
  663  0000169c  ac220000	sw	(r1),r2
  664  000016a0  8fc20004	lw	r2,4(r30)
  665  000016a4  ac220004	sw	4(r1),r2
  666  000016a8  0ffffe5c	jal	_dstrcpy
  667  000016ac  54000000	nop; delay slot nop
  668  000016b0  23bd0008	addi	r29,r29,#8
  669  000016b4  8fc1fff4	lw	r1,-12(r30)
  670  000016b8  08000004	j	L20_LF2
  671  000016bc  54000000	nop; delay slot nop
  672  000016c0          	L20_LF2:
  673  000016c0  8fa20000	lw	r2,0(r29)
  674  000016c4  8fdffff8	lw	r31,-8(r30)
  675  000016c8  001ee820	add	r29,r0,r30
  676  000016cc  8fdefffc	lw	r30,-4(r30)
  677  000016d0  4be00000	jr	r31
  678  000016d4  54000000	nop
  679  000016d8          	.endproc _dstrcat
  680  000016d8          	.align 2
  681  000016d8          	.proc _dstrncmp
  682  000016d8          	.global _dstrncmp
  683  000016d8          	_dstrncmp:
  684                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  685  000016d8  afbefffc	sw	-4(r29),r30; push fp
  686  000016dc  001df020	add	r30,r0,r29; fp = sp
  687  000016e0  afbffff8	sw	-8(r29),r31; push ret addr
  688  000016e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  689  000016e8  afa20000	sw	0(r29),r2
  690  000016ec  afa30004	sw	4(r29),r3
  691  000016f0  54000000	nop
  692  000016f4  20010000	addi	r1,r0,#0
  693  000016f8  afc1fff4	sw	-12(r30),r1
  694  000016fc          	L25_LF2:
  695  000016fc  8fc1fff4	lw	r1,-12(r30)
  696  00001700  8fc20008	lw	r2,8(r30)
  697  00001704  0022082a	slt	r1,r1,r2
  698  00001708  1420000c	bnez	r1,L28_LF2
  699  0000170c  54000000	nop; delay slot nop
  700  00001710  08000088	j	L26_LF2
  701  00001714  54000000	nop; delay slot nop
  702  00001718          	L28_LF2:
  703  00001718  8fc10004	lw	r1,4(r30)
  704  0000171c  90220000	lbu	r2,(r1)
  705  00001720  64410000	snei	r1,r2,#0
  706  00001724  14200018	bnez	r1,L29_LF2
  707  00001728  54000000	nop; delay slot nop
  708  0000172c  20010000	addi	r1,r0,#0
  709  00001730  080000d8	j	L24_LF2
  710  00001734  54000000	nop; delay slot nop
  711  00001738  08000028	j	L30_LF2
  712  0000173c  54000000	nop; delay slot nop
  713  00001740          	L29_LF2:
  714  00001740  8fc10000	lw	r1,(r30)
  715  00001744  8fc20004	lw	r2,4(r30)
  716  00001748  90210000	lbu	r1,(r1)
  717  0000174c  90420000	lbu	r2,(r2)
  718  00001750  00220829	sne	r1,r1,r2
  719  00001754  1020000c	beqz	r1,L30_LF2
  720  00001758  54000000	nop; delay slot nop
  721  0000175c  0800003c	j	L26_LF2
  722  00001760  54000000	nop; delay slot nop
  723  00001764          	L31_LF2:
  724  00001764          	L30_LF2:
  725  00001764  8fc20000	lw	r2,(r30)
  726  00001768  20410001	addi	r1,r2,#1
  727  0000176c  00011020	add	r2,r0,r1
  728  00001770  afc20000	sw	(r30),r2
  729  00001774  8fc20004	lw	r2,4(r30)
  730  00001778  20410001	addi	r1,r2,#1
  731  0000177c  00011020	add	r2,r0,r1
  732  00001780  afc20004	sw	4(r30),r2
  733  00001784          	L27_LF2:
  734  00001784  8fc2fff4	lw	r2,-12(r30)
  735  00001788  20410001	addi	r1,r2,#1
  736  0000178c  00011020	add	r2,r0,r1
  737  00001790  afc2fff4	sw	-12(r30),r2
  738  00001794  0bffff64	j	L25_LF2
  739  00001798  54000000	nop; delay slot nop
  740  0000179c          	L26_LF2:
  741  0000179c  8fc1fff4	lw	r1,-12(r30)
  742  000017a0  8fc20008	lw	r2,8(r30)
  743  000017a4  00220828	seq	r1,r1,r2
  744  000017a8  10200018	beqz	r1,L32_LF2
  745  000017ac  54000000	nop; delay slot nop
  746  000017b0  20010000	addi	r1,r0,#0
  747  000017b4  08000054	j	L24_LF2
  748  000017b8  54000000	nop; delay slot nop
  749  000017bc  0800004c	j	L33_LF2
  750  000017c0  54000000	nop; delay slot nop
  751  000017c4          	L32_LF2:
  752  000017c4  8fc20000	lw	r2,(r30)
  753  000017c8  90410000	lbu	r1,(r2)
  754  000017cc  8fc20004	lw	r2,4(r30)
  755  000017d0  90430000	lbu	r3,(r2)
  756  000017d4  00230822	sub	r1,r1,r3
  757  000017d8  74220000	sgei	r2,r1,#0
  758  000017dc  10400020	beqz	r2,L34_LF2
  759  000017e0  54000000	nop; delay slot nop
  760  000017e4  8fc10000	lw	r1,(r30)
  761  000017e8  8fc20004	lw	r2,4(r30)
  762  000017ec  90210000	lbu	r1,(r1)
  763  000017f0  90420000	lbu	r2,(r2)
  764  000017f4  00220829	sne	r1,r1,r2
  765  000017f8  08000008	j	L35_LF2
  766  000017fc  54000000	nop; delay slot nop
  767  00001800          	L34_LF2:
  768  00001800  2001ffff	addi	r1,r0,#-1
  769  00001804          	L35_LF2:
  770  00001804  08000004	j	L24_LF2
  771  00001808  54000000	nop; delay slot nop
  772  0000180c          	L33_LF2:
  773  0000180c          	L24_LF2:
  774  0000180c  8fa20000	lw	r2,0(r29)
  775  00001810  8fa30004	lw	r3,4(r29)
  776  00001814  8fdffff8	lw	r31,-8(r30)
  777  00001818  001ee820	add	r29,r0,r30
  778  0000181c  8fdefffc	lw	r30,-4(r30)
  779  00001820  4be00000	jr	r31
  780  00001824  54000000	nop
  781  00001828          	.endproc _dstrncmp
  782  00001828          	.align 2
  783  00001828          	.proc _dstrlen
  784  00001828          	.global _dstrlen
  785  00001828          	_dstrlen:
  786                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  787  00001828  afbefffc	sw	-4(r29),r30; push fp
  788  0000182c  001df020	add	r30,r0,r29; fp = sp
  789  00001830  afbffff8	sw	-8(r29),r31; push ret addr
  790  00001834  2fbd0018	subui	r29,r29,#24; alloc local storage
  791  00001838  afa20000	sw	0(r29),r2
  792  0000183c  20010000	addi	r1,r0,#0
  793  00001840  afc1fff4	sw	-12(r30),r1
  794  00001844          	L37_LF2:
  795  00001844  8fc10000	lw	r1,(r30)
  796  00001848  20220001	addi	r2,r1,#1
  797  0000184c  afc20000	sw	(r30),r2
  798  00001850  90210000	lbu	r1,(r1)
  799  00001854  64220000	snei	r2,r1,#0
  800  00001858  1440000c	bnez	r2,L39_LF2
  801  0000185c  54000000	nop; delay slot nop
  802  00001860  0800001c	j	L38_LF2
  803  00001864  54000000	nop; delay slot nop
  804  00001868          	L39_LF2:
  805  00001868  8fc2fff4	lw	r2,-12(r30)
  806  0000186c  20410001	addi	r1,r2,#1
  807  00001870  00011020	add	r2,r0,r1
  808  00001874  afc2fff4	sw	-12(r30),r2
  809  00001878  0bffffc8	j	L37_LF2
  810  0000187c  54000000	nop; delay slot nop
  811  00001880          	L38_LF2:
  812  00001880  8fc1fff4	lw	r1,-12(r30)
  813  00001884  08000004	j	L36_LF2
  814  00001888  54000000	nop; delay slot nop
  815  0000188c          	L36_LF2:
  816  0000188c  8fa20000	lw	r2,0(r29)
  817  00001890  8fdffff8	lw	r31,-8(r30)
  818  00001894  001ee820	add	r29,r0,r30
  819  00001898  8fdefffc	lw	r30,-4(r30)
  820  0000189c  4be00000	jr	r31
  821  000018a0  54000000	nop
  822  000018a4          	.endproc _dstrlen
  823  000018a4          	.align 2
  824  000018a4          	.proc _dstrstr
  825  000018a4          	.global _dstrstr
  826  000018a4          	_dstrstr:
  827                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  828  000018a4  afbefffc	sw	-4(r29),r30; push fp
  829  000018a8  001df020	add	r30,r0,r29; fp = sp
  830  000018ac  afbffff8	sw	-8(r29),r31; push ret addr
  831  000018b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  832  000018b4  afa20000	sw	0(r29),r2
  833  000018b8  23bdfff8	addi	r29,r29,#-8
  834  000018bc  001d0820	add	r1,r0,r29
  835  000018c0  8fc20004	lw	r2,4(r30)
  836  000018c4  ac220000	sw	(r1),r2
  837  000018c8  0fffff5c	jal	_dstrlen
  838  000018cc  54000000	nop; delay slot nop
  839  000018d0  23bd0008	addi	r29,r29,#8
  840  000018d4  afc1fff4	sw	-12(r30),r1
  841  000018d8          	L41_LF2:
  842  000018d8  8fc10000	lw	r1,(r30)
  843  000018dc  90220000	lbu	r2,(r1)
  844  000018e0  64410000	snei	r1,r2,#0
  845  000018e4  1420000c	bnez	r1,L43_LF2
  846  000018e8  54000000	nop; delay slot nop
  847  000018ec  08000060	j	L42_LF2
  848  000018f0  54000000	nop; delay slot nop
  849  000018f4          	L43_LF2:
  850  000018f4  23bdfff0	addi	r29,r29,#-16
  851  000018f8  001d0820	add	r1,r0,r29
  852  000018fc  8fc20000	lw	r2,(r30)
  853  00001900  ac220000	sw	(r1),r2
  854  00001904  8fc20004	lw	r2,4(r30)
  855  00001908  ac220004	sw	4(r1),r2
  856  0000190c  8fc2fff4	lw	r2,-12(r30)
  857  00001910  ac220008	sw	8(r1),r2
  858  00001914  0ffffdc0	jal	_dstrncmp
  859  00001918  54000000	nop; delay slot nop
  860  0000191c  23bd0010	addi	r29,r29,#16
  861  00001920  64220000	snei	r2,r1,#0
  862  00001924  14400010	bnez	r2,L44_LF2
  863  00001928  54000000	nop; delay slot nop
  864  0000192c  8fc10000	lw	r1,(r30)
  865  00001930  08000028	j	L40_LF2
  866  00001934  54000000	nop; delay slot nop
  867  00001938          	L44_LF2:
  868  00001938  8fc20000	lw	r2,(r30)
  869  0000193c  20410001	addi	r1,r2,#1
  870  00001940  00011020	add	r2,r0,r1
  871  00001944  afc20000	sw	(r30),r2
  872  00001948  0bffff8c	j	L41_LF2
  873  0000194c  54000000	nop; delay slot nop
  874  00001950          	L42_LF2:
  875  00001950  20010000	addi	r1,r0,#0
  876  00001954  08000004	j	L40_LF2
  877  00001958  54000000	nop; delay slot nop
  878  0000195c          	L40_LF2:
  879  0000195c  8fa20000	lw	r2,0(r29)
  880  00001960  8fdffff8	lw	r31,-8(r30)
  881  00001964  001ee820	add	r29,r0,r30
  882  00001968  8fdefffc	lw	r30,-4(r30)
  883  0000196c  4be00000	jr	r31
  884  00001970  54000000	nop
  885  00001974          	.endproc _dstrstr
  886  00001974          	.align 2
  887  00001974          	.proc _dmindex
  888  00001974          	.global _dmindex
  889  00001974          	_dmindex:
  890                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  891  00001974  afbefffc	sw	-4(r29),r30; push fp
  892  00001978  001df020	add	r30,r0,r29; fp = sp
  893  0000197c  afbffff8	sw	-8(r29),r31; push ret addr
  894  00001980  2fbd0018	subui	r29,r29,#24; alloc local storage
  895  00001984  afa20000	sw	0(r29),r2
  896  00001988  54000000	nop
  897  0000198c          	L46_LF2:
  898  0000198c  8fc10000	lw	r1,(r30)
  899  00001990  90220000	lbu	r2,(r1)
  900  00001994  64410000	snei	r1,r2,#0
  901  00001998  1420000c	bnez	r1,L48_LF2
  902  0000199c  54000000	nop; delay slot nop
  903  000019a0  08000070	j	L47_LF2
  904  000019a4  54000000	nop; delay slot nop
  905  000019a8          	L48_LF2:
  906  000019a8  8fc10004	lw	r1,4(r30)
  907  000019ac  afc1fff4	sw	-12(r30),r1
  908  000019b0          	L49_LF2:
  909  000019b0  8fc1fff4	lw	r1,-12(r30)
  910  000019b4  90220000	lbu	r2,(r1)
  911  000019b8  64410000	snei	r1,r2,#0
  912  000019bc  1420000c	bnez	r1,L52_LF2
  913  000019c0  54000000	nop; delay slot nop
  914  000019c4  08000044	j	L50_LF2
  915  000019c8  54000000	nop; delay slot nop
  916  000019cc          	L52_LF2:
  917  000019cc  8fc10000	lw	r1,(r30)
  918  000019d0  8fc2fff4	lw	r2,-12(r30)
  919  000019d4  90210000	lbu	r1,(r1)
  920  000019d8  90420000	lbu	r2,(r2)
  921  000019dc  00220828	seq	r1,r1,r2
  922  000019e0  10200010	beqz	r1,L51_LF2
  923  000019e4  54000000	nop; delay slot nop
  924  000019e8  8fc10000	lw	r1,(r30)
  925  000019ec  08000030	j	L45_LF2
  926  000019f0  54000000	nop; delay slot nop
  927  000019f4          	L53_LF2:
  928  000019f4          	L51_LF2:
  929  000019f4  8fc2fff4	lw	r2,-12(r30)
  930  000019f8  20410001	addi	r1,r2,#1
  931  000019fc  00011020	add	r2,r0,r1
  932  00001a00  afc2fff4	sw	-12(r30),r2
  933  00001a04  0bffffa8	j	L49_LF2
  934  00001a08  54000000	nop; delay slot nop
  935  00001a0c          	L50_LF2:
  936  00001a0c  0bffff7c	j	L46_LF2
  937  00001a10  54000000	nop; delay slot nop
  938  00001a14          	L47_LF2:
  939  00001a14  20010000	addi	r1,r0,#0
  940  00001a18  08000004	j	L45_LF2
  941  00001a1c  54000000	nop; delay slot nop
  942  00001a20          	L45_LF2:
  943  00001a20  8fa20000	lw	r2,0(r29)
  944  00001a24  8fdffff8	lw	r31,-8(r30)
  945  00001a28  001ee820	add	r29,r0,r30
  946  00001a2c  8fdefffc	lw	r30,-4(r30)
  947  00001a30  4be00000	jr	r31
  948  00001a34  54000000	nop
  949  00001a38          	.endproc _dmindex
  950  00001a38          	.align 2
  951  00001a38          	.proc _dindex
  952  00001a38          	.global _dindex
  953  00001a38          	_dindex:
  954                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  955  00001a38  afbefffc	sw	-4(r29),r30; push fp
  956  00001a3c  001df020	add	r30,r0,r29; fp = sp
  957  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
  958  00001a44  2fbd0010	subui	r29,r29,#16; alloc local storage
  959  00001a48  afa20000	sw	0(r29),r2
  960  00001a4c  54000000	nop
  961  00001a50          	L55_LF2:
  962  00001a50  8fc10000	lw	r1,(r30)
  963  00001a54  90220000	lbu	r2,(r1)
  964  00001a58  64410000	snei	r1,r2,#0
  965  00001a5c  1420000c	bnez	r1,L57_LF2
  966  00001a60  54000000	nop; delay slot nop
  967  00001a64  08000040	j	L56_LF2
  968  00001a68  54000000	nop; delay slot nop
  969  00001a6c          	L57_LF2:
  970  00001a6c  8fc10000	lw	r1,(r30)
  971  00001a70  90220000	lbu	r2,(r1)
  972  00001a74  8fc10004	lw	r1,4(r30)
  973  00001a78  00411028	seq	r2,r2,r1
  974  00001a7c  10400010	beqz	r2,L58_LF2
  975  00001a80  54000000	nop; delay slot nop
  976  00001a84  8fc10000	lw	r1,(r30)
  977  00001a88  08000028	j	L54_LF2
  978  00001a8c  54000000	nop; delay slot nop
  979  00001a90          	L58_LF2:
  980  00001a90  8fc20000	lw	r2,(r30)
  981  00001a94  20410001	addi	r1,r2,#1
  982  00001a98  00011020	add	r2,r0,r1
  983  00001a9c  afc20000	sw	(r30),r2
  984  00001aa0  0bffffac	j	L55_LF2
  985  00001aa4  54000000	nop; delay slot nop
  986  00001aa8          	L56_LF2:
  987  00001aa8  20010000	addi	r1,r0,#0
  988  00001aac  08000004	j	L54_LF2
  989  00001ab0  54000000	nop; delay slot nop
  990  00001ab4          	L54_LF2:
  991  00001ab4  8fa20000	lw	r2,0(r29)
  992  00001ab8  8fdffff8	lw	r31,-8(r30)
  993  00001abc  001ee820	add	r29,r0,r30
  994  00001ac0  8fdefffc	lw	r30,-4(r30)
  995  00001ac4  4be00000	jr	r31
  996  00001ac8  54000000	nop
  997  00001acc          	.endproc _dindex
  998  00001acc          	.align 2
  999  00001acc          	.proc _ditoa
 1000  00001acc          	.global _ditoa
 1001  00001acc          	_ditoa:
 1002                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1003  00001acc  afbefffc	sw	-4(r29),r30; push fp
 1004  00001ad0  001df020	add	r30,r0,r29; fp = sp
 1005  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
 1006  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1007  00001adc  afa20000	sw	0(r29),r2
 1008  00001ae0  afa30004	sw	4(r29),r3
 1009  00001ae4  8fc10000	lw	r1,(r30)
 1010  00001ae8  68220000	slti	r2,r1,#0
 1011  00001aec  1040002c	beqz	r2,L60_LF2
 1012  00001af0  54000000	nop; delay slot nop
 1013  00001af4  8fc10004	lw	r1,4(r30)
 1014  00001af8  20220001	addi	r2,r1,#1
 1015  00001afc  afc20004	sw	4(r30),r2
 1016  00001b00  2002002d	addi	r2,r0,(#0x2d)&0xff
 1017  00001b04  a0220000	sb	(r1),r2
 1018  00001b08  8fc10000	lw	r1,(r30)
 1019  00001b0c  00011022	sub	r2,r0,r1
 1020  00001b10  afc20000	sw	(r30),r2
 1021  00001b14  08000118	j	L61_LF2
 1022  00001b18  54000000	nop; delay slot nop
 1023  00001b1c          	L60_LF2:
 1024  00001b1c  8fc10000	lw	r1,(r30)
 1025  00001b20  64220000	snei	r2,r1,#0
 1026  00001b24  14400020	bnez	r2,L62_LF2
 1027  00001b28  54000000	nop; delay slot nop
 1028  00001b2c  8fc10004	lw	r1,4(r30)
 1029  00001b30  20220001	addi	r2,r1,#1
 1030  00001b34  afc20004	sw	4(r30),r2
 1031  00001b38  20020030	addi	r2,r0,(#0x30)&0xff
 1032  00001b3c  a0220000	sb	(r1),r2
 1033  00001b40  080000ec	j	L61_LF2
 1034  00001b44  54000000	nop; delay slot nop
 1035  00001b48          	L62_LF2:
 1036  00001b48  20010001	addi	r1,r0,#1
 1037  00001b4c  afc1fff4	sw	-12(r30),r1
 1038  00001b50          	L64_LF2:
 1039  00001b50  8fc1fff4	lw	r1,-12(r30)
 1040  00001b54  8fc20000	lw	r2,(r30)
 1041  00001b58  0022082c	sle	r1,r1,r2
 1042  00001b5c  1420000c	bnez	r1,L66_LF2
 1043  00001b60  54000000	nop; delay slot nop
 1044  00001b64  08000024	j	L65_LF2
 1045  00001b68  54000000	nop; delay slot nop
 1046  00001b6c          	L67_LF2:
 1047  00001b6c          	L66_LF2:
 1048  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1049  00001b70  00011820	add	r3,r0,r1
 1050  00001b74  50620002	slli	r2,r3,#0x2
 1051  00001b78  00411020	add	r2,r2,r1
 1052  00001b7c  50410001	slli	r1,r2,#0x1
 1053  00001b80  afc1fff4	sw	-12(r30),r1
 1054  00001b84  0bffffc8	j	L64_LF2
 1055  00001b88  54000000	nop; delay slot nop
 1056  00001b8c          	L65_LF2:
 1057  00001b8c  54000000	nop
 1058  00001b90          	L68_LF2:
 1059  00001b90  8fc1fff4	lw	r1,-12(r30)
 1060  00001b94  2002000a	addi	r2,r0,#10
 1061  00001b98  00200035	movi2fp	f0,r1
 1062  00001b9c  00400835	movi2fp	f1,r2
 1063  00001ba0  0401000f	div	f0,f0,f1
 1064  00001ba4  00000834	movfp2i	r1,f0
 1065  00001ba8  afc1fff4	sw	-12(r30),r1
 1066  00001bac  8fc10004	lw	r1,4(r30)
 1067  00001bb0  20220001	addi	r2,r1,#1
 1068  00001bb4  afc20004	sw	4(r30),r2
 1069  00001bb8  8fc20000	lw	r2,(r30)
 1070  00001bbc  8fc3fff4	lw	r3,-12(r30)
 1071  00001bc0  00400035	movi2fp	f0,r2
 1072  00001bc4  00600835	movi2fp	f1,r3
 1073  00001bc8  0401000f	div	f0,f0,f1
 1074  00001bcc  00001034	movfp2i	r2,f0
 1075  00001bd0  00021820	add	r3,r0,r2
 1076  00001bd4  20620030	addi	r2,r3,#48
 1077  00001bd8  a0220000	sb	(r1),r2
 1078  00001bdc  8fc10000	lw	r1,(r30)
 1079  00001be0  8fc3fff4	lw	r3,-12(r30)
 1080  00001be4  00200035	movi2fp	f0,r1
 1081  00001be8  00600835	movi2fp	f1,r3
 1082  00001bec  0401000f	div	f0,f0,f1
 1083  00001bf0  00001034	movfp2i	r2,f0
 1084  00001bf4  8fc3fff4	lw	r3,-12(r30)
 1085  00001bf8  00400035	movi2fp	f0,r2
 1086  00001bfc  00600835	movi2fp	f1,r3
 1087  00001c00  0401000e	mult	f0,f0,f1
 1088  00001c04  00001034	movfp2i	r2,f0
 1089  00001c08  00220822	sub	r1,r1,r2
 1090  00001c0c  afc10000	sw	(r30),r1
 1091  00001c10          	L70_LF2:
 1092  00001c10  8fc1fff4	lw	r1,-12(r30)
 1093  00001c14  6c220001	sgti	r2,r1,#1
 1094  00001c18  1440000c	bnez	r2,L71_LF2
 1095  00001c1c  54000000	nop; delay slot nop
 1096  00001c20  0800000c	j	L61_LF2
 1097  00001c24  54000000	nop; delay slot nop
 1098  00001c28          	L71_LF2:
 1099  00001c28  0bffff64	j	L68_LF2
 1100  00001c2c  54000000	nop; delay slot nop
 1101  00001c30          	L69_LF2:
 1102  00001c30          	L63_LF2:
 1103  00001c30          	L61_LF2:
 1104  00001c30  8fc10004	lw	r1,4(r30)
 1105  00001c34  20020000	addi	r2,r0,(#0x0)&0xff
 1106  00001c38  a0220000	sb	(r1),r2
 1107  00001c3c          	L59_LF2:
 1108  00001c3c  8fa20000	lw	r2,0(r29)
 1109  00001c40  8fa30004	lw	r3,4(r29)
 1110  00001c44  8fdffff8	lw	r31,-8(r30)
 1111  00001c48  001ee820	add	r29,r0,r30
 1112  00001c4c  8fdefffc	lw	r30,-4(r30)
 1113  00001c50  4be00000	jr	r31
 1114  00001c54  54000000	nop
 1115  00001c58          	.endproc _ditoa
 1116  00001c58          	.align 2
 1117  00001c58          	.proc _dstrtol
 1118  00001c58          	.global _dstrtol
 1119  00001c58          	_dstrtol:
 1120                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1121  00001c58  afbefffc	sw	-4(r29),r30; push fp
 1122  00001c5c  001df020	add	r30,r0,r29; fp = sp
 1123  00001c60  afbffff8	sw	-8(r29),r31; push ret addr
 1124  00001c64  2fbd0020	subui	r29,r29,#32; alloc local storage
 1125  00001c68  afa20000	sw	0(r29),r2
 1126  00001c6c  20010000	addi	r1,r0,#0
 1127  00001c70  afc1fff4	sw	-12(r30),r1
 1128  00001c74          	L73_LF2:
 1129  00001c74  8fc10000	lw	r1,(r30)
 1130  00001c78  90220000	lbu	r2,(r1)
 1131  00001c7c  60410020	seqi	r1,r2,#32
 1132  00001c80  14200034	bnez	r1,L75_LF2
 1133  00001c84  54000000	nop; delay slot nop
 1134  00001c88  8fc10000	lw	r1,(r30)
 1135  00001c8c  90220000	lbu	r2,(r1)
 1136  00001c90  60410009	seqi	r1,r2,#9
 1137  00001c94  14200020	bnez	r1,L75_LF2
 1138  00001c98  54000000	nop; delay slot nop
 1139  00001c9c  8fc10000	lw	r1,(r30)
 1140  00001ca0  90220000	lbu	r2,(r1)
 1141  00001ca4  6041000a	seqi	r1,r2,#10
 1142  00001ca8  1420000c	bnez	r1,L75_LF2
 1143  00001cac  54000000	nop; delay slot nop
 1144  00001cb0  0800001c	j	L74_LF2
 1145  00001cb4  54000000	nop; delay slot nop
 1146  00001cb8          	L75_LF2:
 1147  00001cb8  8fc20000	lw	r2,(r30)
 1148  00001cbc  20410001	addi	r1,r2,#1
 1149  00001cc0  00011020	add	r2,r0,r1
 1150  00001cc4  afc20000	sw	(r30),r2
 1151  00001cc8  0bffffa8	j	L73_LF2
 1152  00001ccc  54000000	nop; delay slot nop
 1153  00001cd0          	L74_LF2:
 1154  00001cd0  8fc10004	lw	r1,4(r30)
 1155  00001cd4  64220000	snei	r2,r1,#0
 1156  00001cd8  10400010	beqz	r2,L76_LF2
 1157  00001cdc  54000000	nop; delay slot nop
 1158  00001ce0  8fc10004	lw	r1,4(r30)
 1159  00001ce4  8fc20000	lw	r2,(r30)
 1160  00001ce8  ac220000	sw	(r1),r2
 1161  00001cec          	L76_LF2:
 1162  00001cec  8fc10000	lw	r1,(r30)
 1163  00001cf0  90220000	lbu	r2,(r1)
 1164  00001cf4  64410000	snei	r1,r2,#0
 1165  00001cf8  14200010	bnez	r1,L77_LF2
 1166  00001cfc  54000000	nop; delay slot nop
 1167  00001d00  8fc1fff4	lw	r1,-12(r30)
 1168  00001d04  08000294	j	L72_LF2
 1169  00001d08  54000000	nop; delay slot nop
 1170  00001d0c          	L77_LF2:
 1171  00001d0c  8fc10000	lw	r1,(r30)
 1172  00001d10  90220000	lbu	r2,(r1)
 1173  00001d14  6041002d	seqi	r1,r2,#45
 1174  00001d18  10200024	beqz	r1,L78_LF2
 1175  00001d1c  54000000	nop; delay slot nop
 1176  00001d20  2001ffff	addi	r1,r0,#-1
 1177  00001d24  afc1ffec	sw	-20(r30),r1
 1178  00001d28  8fc20000	lw	r2,(r30)
 1179  00001d2c  20410001	addi	r1,r2,#1
 1180  00001d30  00011020	add	r2,r0,r1
 1181  00001d34  afc20000	sw	(r30),r2
 1182  00001d38  0800000c	j	L79_LF2
 1183  00001d3c  54000000	nop; delay slot nop
 1184  00001d40          	L78_LF2:
 1185  00001d40  20010001	addi	r1,r0,#1
 1186  00001d44  afc1ffec	sw	-20(r30),r1
 1187  00001d48          	L79_LF2:
 1188  00001d48  8fc10008	lw	r1,8(r30)
 1189  00001d4c  64220000	snei	r2,r1,#0
 1190  00001d50  14400090	bnez	r2,L80_LF2
 1191  00001d54  54000000	nop; delay slot nop
 1192  00001d58  8fc10000	lw	r1,(r30)
 1193  00001d5c  90220000	lbu	r2,(r1)
 1194  00001d60  60410030	seqi	r1,r2,#48
 1195  00001d64  10200074	beqz	r1,L81_LF2
 1196  00001d68  54000000	nop; delay slot nop
 1197  00001d6c  8fc20000	lw	r2,(r30)
 1198  00001d70  20410001	addi	r1,r2,#1
 1199  00001d74  00011020	add	r2,r0,r1
 1200  00001d78  afc20000	sw	(r30),r2
 1201  00001d7c  8fc10000	lw	r1,(r30)
 1202  00001d80  90220000	lbu	r2,(r1)
 1203  00001d84  60410078	seqi	r1,r2,#120
 1204  00001d88  14200020	bnez	r1,L83_LF2
 1205  00001d8c  54000000	nop; delay slot nop
 1206  00001d90  8fc10000	lw	r1,(r30)
 1207  00001d94  90220000	lbu	r2,(r1)
 1208  00001d98  60410058	seqi	r1,r2,#88
 1209  00001d9c  1420000c	bnez	r1,L83_LF2
 1210  00001da0  54000000	nop; delay slot nop
 1211  00001da4  08000024	j	L82_LF2
 1212  00001da8  54000000	nop; delay slot nop
 1213  00001dac          	L83_LF2:
 1214  00001dac  20010010	addi	r1,r0,#16
 1215  00001db0  afc10008	sw	8(r30),r1
 1216  00001db4  8fc20000	lw	r2,(r30)
 1217  00001db8  20410001	addi	r1,r2,#1
 1218  00001dbc  00011020	add	r2,r0,r1
 1219  00001dc0  afc20000	sw	(r30),r2
 1220  00001dc4  0800000c	j	L84_LF2
 1221  00001dc8  54000000	nop; delay slot nop
 1222  00001dcc          	L82_LF2:
 1223  00001dcc  20010008	addi	r1,r0,#8
 1224  00001dd0  afc10008	sw	8(r30),r1
 1225  00001dd4          	L84_LF2:
 1226  00001dd4  0800000c	j	L80_LF2
 1227  00001dd8  54000000	nop; delay slot nop
 1228  00001ddc          	L81_LF2:
 1229  00001ddc  2001000a	addi	r1,r0,#10
 1230  00001de0  afc10008	sw	8(r30),r1
 1231  00001de4          	L85_LF2:
 1232  00001de4          	L80_LF2:
 1233  00001de4  8fc10008	lw	r1,8(r30)
 1234  00001de8  70220000	slei	r2,r1,#0
 1235  00001dec  1440001c	bnez	r2,L87_LF2
 1236  00001df0  54000000	nop; delay slot nop
 1237  00001df4  8fc10008	lw	r1,8(r30)
 1238  00001df8  6c220010	sgti	r2,r1,#16
 1239  00001dfc  1440000c	bnez	r2,L87_LF2
 1240  00001e00  54000000	nop; delay slot nop
 1241  00001e04  08000010	j	L86_LF2
 1242  00001e08  54000000	nop; delay slot nop
 1243  00001e0c          	L87_LF2:
 1244  00001e0c  8fc1fff4	lw	r1,-12(r30)
 1245  00001e10  08000188	j	L72_LF2
 1246  00001e14  54000000	nop; delay slot nop
 1247  00001e18          	L86_LF2:
 1248  00001e18  54000000	nop
 1249  00001e1c          	L88_LF2:
 1250  00001e1c  8fc10000	lw	r1,(r30)
 1251  00001e20  90220000	lbu	r2,(r1)
 1252  00001e24  6c41002f	sgtui	r1,r2,#47
 1253  00001e28  10200030	beqz	r1,L91_LF2
 1254  00001e2c  54000000	nop; delay slot nop
 1255  00001e30  8fc10000	lw	r1,(r30)
 1256  00001e34  90220000	lbu	r2,(r1)
 1257  00001e38  70410039	sleui	r1,r2,#57
 1258  00001e3c  1020001c	beqz	r1,L91_LF2
 1259  00001e40  54000000	nop; delay slot nop
 1260  00001e44  8fc10000	lw	r1,(r30)
 1261  00001e48  90220000	lbu	r2,(r1)
 1262  00001e4c  2041ffd0	addi	r1,r2,#-48
 1263  00001e50  afc1fff0	sw	-16(r30),r1
 1264  00001e54  0800008c	j	L92_LF2
 1265  00001e58  54000000	nop; delay slot nop
 1266  00001e5c          	L91_LF2:
 1267  00001e5c  8fc10000	lw	r1,(r30)
 1268  00001e60  90220000	lbu	r2,(r1)
 1269  00001e64  6c410060	sgtui	r1,r2,#96
 1270  00001e68  10200030	beqz	r1,L93_LF2
 1271  00001e6c  54000000	nop; delay slot nop
 1272  00001e70  8fc10000	lw	r1,(r30)
 1273  00001e74  90220000	lbu	r2,(r1)
 1274  00001e78  7041007a	sleui	r1,r2,#122
 1275  00001e7c  1020001c	beqz	r1,L93_LF2
 1276  00001e80  54000000	nop; delay slot nop
 1277  00001e84  8fc10000	lw	r1,(r30)
 1278  00001e88  90220000	lbu	r2,(r1)
 1279  00001e8c  2041ffa9	addi	r1,r2,#-87
 1280  00001e90  afc1fff0	sw	-16(r30),r1
 1281  00001e94  0800004c	j	L92_LF2
 1282  00001e98  54000000	nop; delay slot nop
 1283  00001e9c          	L93_LF2:
 1284  00001e9c  8fc10000	lw	r1,(r30)
 1285  00001ea0  90220000	lbu	r2,(r1)
 1286  00001ea4  6c410040	sgtui	r1,r2,#64
 1287  00001ea8  10200030	beqz	r1,L95_LF2
 1288  00001eac  54000000	nop; delay slot nop
 1289  00001eb0  8fc10000	lw	r1,(r30)
 1290  00001eb4  90220000	lbu	r2,(r1)
 1291  00001eb8  7041005a	sleui	r1,r2,#90
 1292  00001ebc  1020001c	beqz	r1,L95_LF2
 1293  00001ec0  54000000	nop; delay slot nop
 1294  00001ec4  8fc10000	lw	r1,(r30)
 1295  00001ec8  90220000	lbu	r2,(r1)
 1296  00001ecc  2041ffc9	addi	r1,r2,#-55
 1297  00001ed0  afc1fff0	sw	-16(r30),r1
 1298  00001ed4  0800000c	j	L92_LF2
 1299  00001ed8  54000000	nop; delay slot nop
 1300  00001edc          	L95_LF2:
 1301  00001edc  200103e8	addi	r1,r0,#1000
 1302  00001ee0  afc1fff0	sw	-16(r30),r1
 1303  00001ee4          	L96_LF2:
 1304  00001ee4          	L94_LF2:
 1305  00001ee4          	L92_LF2:
 1306  00001ee4  8fc1fff0	lw	r1,-16(r30)
 1307  00001ee8  8fc20008	lw	r2,8(r30)
 1308  00001eec  0022082a	slt	r1,r1,r2
 1309  00001ef0  10200040	beqz	r1,L90_LF2
 1310  00001ef4  54000000	nop; delay slot nop
 1311  00001ef8  8fc1fff4	lw	r1,-12(r30)
 1312  00001efc  8fc20008	lw	r2,8(r30)
 1313  00001f00  00200035	movi2fp	f0,r1
 1314  00001f04  00400835	movi2fp	f1,r2
 1315  00001f08  0401000e	mult	f0,f0,f1
 1316  00001f0c  00000834	movfp2i	r1,f0
 1317  00001f10  afc1fff4	sw	-12(r30),r1
 1318  00001f14  8fc1fff4	lw	r1,-12(r30)
 1319  00001f18  8fc2fff0	lw	r2,-16(r30)
 1320  00001f1c  00220820	add	r1,r1,r2
 1321  00001f20  afc1fff4	sw	-12(r30),r1
 1322  00001f24  8fc20000	lw	r2,(r30)
 1323  00001f28  20410001	addi	r1,r2,#1
 1324  00001f2c  00011020	add	r2,r0,r1
 1325  00001f30  afc20000	sw	(r30),r2
 1326  00001f34          	L97_LF2:
 1327  00001f34          	L90_LF2:
 1328  00001f34  8fc1fff0	lw	r1,-16(r30)
 1329  00001f38  8fc20008	lw	r2,8(r30)
 1330  00001f3c  0022082a	slt	r1,r1,r2
 1331  00001f40  1420000c	bnez	r1,L98_LF2
 1332  00001f44  54000000	nop; delay slot nop
 1333  00001f48  0800000c	j	L89_LF2
 1334  00001f4c  54000000	nop; delay slot nop
 1335  00001f50          	L98_LF2:
 1336  00001f50  0bfffec8	j	L88_LF2
 1337  00001f54  54000000	nop; delay slot nop
 1338  00001f58          	L89_LF2:
 1339  00001f58  8fc10004	lw	r1,4(r30)
 1340  00001f5c  64220000	snei	r2,r1,#0
 1341  00001f60  10400010	beqz	r2,L99_LF2
 1342  00001f64  54000000	nop; delay slot nop
 1343  00001f68  8fc10004	lw	r1,4(r30)
 1344  00001f6c  8fc20000	lw	r2,(r30)
 1345  00001f70  ac220000	sw	(r1),r2
 1346  00001f74          	L99_LF2:
 1347  00001f74  8fc1fff4	lw	r1,-12(r30)
 1348  00001f78  8fc2ffec	lw	r2,-20(r30)
 1349  00001f7c  00200035	movi2fp	f0,r1
 1350  00001f80  00400835	movi2fp	f1,r2
 1351  00001f84  0401000e	mult	f0,f0,f1
 1352  00001f88  00000834	movfp2i	r1,f0
 1353  00001f8c  afc1fff4	sw	-12(r30),r1
 1354  00001f90  8fc1fff4	lw	r1,-12(r30)
 1355  00001f94  08000004	j	L72_LF2
 1356  00001f98  54000000	nop; delay slot nop
 1357  00001f9c          	L72_LF2:
 1358  00001f9c  8fa20000	lw	r2,0(r29)
 1359  00001fa0  8fdffff8	lw	r31,-8(r30)
 1360  00001fa4  001ee820	add	r29,r0,r30
 1361  00001fa8  8fdefffc	lw	r30,-4(r30)
 1362  00001fac  4be00000	jr	r31
 1363  00001fb0  54000000	nop
 1364  00001fb4          	.endproc _dstrtol
 1365  00001fb4          	.align 2
 1366  00001fb4          	.proc _bcopy
 1367  00001fb4          	.global _bcopy
 1368  00001fb4          	_bcopy:
 1369                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1370  00001fb4  afbefffc	sw	-4(r29),r30; push fp
 1371  00001fb8  001df020	add	r30,r0,r29; fp = sp
 1372  00001fbc  afbffff8	sw	-8(r29),r31; push ret addr
 1373  00001fc0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1374  00001fc4  afa20000	sw	0(r29),r2
 1375  00001fc8  afa30004	sw	4(r29),r3
 1376  00001fcc  54000000	nop
 1377  00001fd0          	L101_LF2:
 1378  00001fd0  8fc10008	lw	r1,8(r30)
 1379  00001fd4  2022ffff	addi	r2,r1,#-1
 1380  00001fd8  afc20008	sw	8(r30),r2
 1381  00001fdc  6c210000	sgti	r1,r1,#0
 1382  00001fe0  1420000c	bnez	r1,L103_LF2
 1383  00001fe4  54000000	nop; delay slot nop
 1384  00001fe8  0800002c	j	L102_LF2
 1385  00001fec  54000000	nop; delay slot nop
 1386  00001ff0          	L103_LF2:
 1387  00001ff0  8fc10004	lw	r1,4(r30)
 1388  00001ff4  20220001	addi	r2,r1,#1
 1389  00001ff8  afc20004	sw	4(r30),r2
 1390  00001ffc  8fc20000	lw	r2,(r30)
 1391  00002000  20430001	addi	r3,r2,#1
 1392  00002004  afc30000	sw	(r30),r3
 1393  00002008  80420000	lb	r2,(r2)
 1394  0000200c  a0220000	sb	(r1),r2
 1395  00002010  0bffffbc	j	L101_LF2
 1396  00002014  54000000	nop; delay slot nop
 1397  00002018          	L102_LF2:
 1398  00002018          	L100_LF2:
 1399  00002018  8fa20000	lw	r2,0(r29)
 1400  0000201c  8fa30004	lw	r3,4(r29)
 1401  00002020  8fdffff8	lw	r31,-8(r30)
 1402  00002024  001ee820	add	r29,r0,r30
 1403  00002028  8fdefffc	lw	r30,-4(r30)
 1404  0000202c  4be00000	jr	r31
 1405  00002030  54000000	nop
 1406  00002034          	.endproc _bcopy
 1407  00002034          	.align 2
 1408  00002034          	.proc _bzero
 1409  00002034          	.global _bzero
 1410  00002034          	_bzero:
 1411                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1412  00002034  afbefffc	sw	-4(r29),r30; push fp
 1413  00002038  001df020	add	r30,r0,r29; fp = sp
 1414  0000203c  afbffff8	sw	-8(r29),r31; push ret addr
 1415  00002040  2fbd0010	subui	r29,r29,#16; alloc local storage
 1416  00002044  afa20000	sw	0(r29),r2
 1417  00002048  54000000	nop
 1418  0000204c          	L105_LF2:
 1419  0000204c  8fc10004	lw	r1,4(r30)
 1420  00002050  2022ffff	addi	r2,r1,#-1
 1421  00002054  afc20004	sw	4(r30),r2
 1422  00002058  6c210000	sgti	r1,r1,#0
 1423  0000205c  1420000c	bnez	r1,L107_LF2
 1424  00002060  54000000	nop; delay slot nop
 1425  00002064  08000020	j	L106_LF2
 1426  00002068  54000000	nop; delay slot nop
 1427  0000206c          	L107_LF2:
 1428  0000206c  8fc10000	lw	r1,(r30)
 1429  00002070  20220001	addi	r2,r1,#1
 1430  00002074  afc20000	sw	(r30),r2
 1431  00002078  20020000	addi	r2,r0,(#0x0)&0xff
 1432  0000207c  a0220000	sb	(r1),r2
 1433  00002080  0bffffc8	j	L105_LF2
 1434  00002084  54000000	nop; delay slot nop
 1435  00002088          	L106_LF2:
 1436  00002088          	L104_LF2:
 1437  00002088  8fa20000	lw	r2,0(r29)
 1438  0000208c  8fdffff8	lw	r31,-8(r30)
 1439  00002090  001ee820	add	r29,r0,r30
 1440  00002094  8fdefffc	lw	r30,-4(r30)
 1441  00002098  4be00000	jr	r31
 1442  0000209c  54000000	nop
 1443  000020a0          	.endproc _bzero
 1444  000020a0          	.align 2
 1445  000020a0          	.proc _min
 1446  000020a0          	.global _min
 1447  000020a0          	_min:
 1448                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1449  000020a0  afbefffc	sw	-4(r29),r30; push fp
 1450  000020a4  001df020	add	r30,r0,r29; fp = sp
 1451  000020a8  afbffff8	sw	-8(r29),r31; push ret addr
 1452  000020ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1453  000020b0  afa20000	sw	0(r29),r2
 1454  000020b4  afa30004	sw	4(r29),r3
 1455  000020b8  8fc10000	lw	r1,(r30)
 1456  000020bc  8fc20004	lw	r2,4(r30)
 1457  000020c0  0022182c	sle	r3,r1,r2
 1458  000020c4  14600008	bnez	r3,L109_LF2
 1459  000020c8  54000000	nop; delay slot nop
 1460  000020cc  8fc10004	lw	r1,4(r30)
 1461  000020d0          	L109_LF2:
 1462  000020d0  08000004	j	L108_LF2
 1463  000020d4  54000000	nop; delay slot nop
 1464  000020d8          	L108_LF2:
 1465  000020d8  8fa20000	lw	r2,0(r29)
 1466  000020dc  8fa30004	lw	r3,4(r29)
 1467  000020e0  8fdffff8	lw	r31,-8(r30)
 1468  000020e4  001ee820	add	r29,r0,r30
 1469  000020e8  8fdefffc	lw	r30,-4(r30)
 1470  000020ec  4be00000	jr	r31
 1471  000020f0  54000000	nop
 1472  000020f4          	.endproc _min
 1473                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1474                      ;;;
 1475                      ;;; Most of the traps are called in files from libtraps.
 1478  000020f4          	.align 2
 1479  000020f4          	.proc _exit
 1480  000020f4          	.global _exit
 1481  000020f4          	_exit:
 1482  000020f4  44000300	trap	#0x300
 1483  000020f8  4be00000	jr	r31
 1484  000020fc  54000000	nop
 1485  00002100          	.endproc _exit
 1487                      ; for the benefit of gcc.
 1488  00002100          	.proc ___main
 1489  00002100          	.global ___main
 1490  00002100          	___main:
 1491  00002100  4be00000	jr	r31
 1492  00002104  54000000	nop
 1493  00002108          	.endproc ___main
 1494  00002108          	.text
 1495  00002108          	.global _etext
 1496  00002108          	_etext:
 1497  00002108          	.align 3
 1498  00002108          	.data
 1499  000030dd          	.global _edata
 1500  000030dd          	_edata:
