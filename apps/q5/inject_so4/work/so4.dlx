; Linked by DLX-LD.
; MemSize 20480
; Data size: 0
; Text size: 3672
; Stack size: 8192
.text 0x1000
.data 0x2000
;;;
;;; Stub functions for DLX traps.
;;;
;;; Ethan L. Miller, 1999.  Released to the public domain.
;;;
;;; The traps such as Open and Close
;;; (note the capital letters) are for use by user programs.  The traps
;;; with names such as open and close (lower case) are for use by the OS.
;;;

.text
.align 2

;;; The following are the traps to be used by user-level programs
;;;

.align 2
.proc _Open
.global _Open
_Open:
;;; Note that trap #0x213 actually causes a trap vector in the OS of
;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
	trap	#0x213
	jr	r31
	nop
.endproc _Open

.proc _Close
.global _Close
_Close:
	trap	#0x214
	jr	r31
	nop
.endproc _Close

.proc _Read
.global _Read
_Read:
	trap	#0x210
	jr	r31
	nop
.endproc _Read

.proc _Write
.global _Write
_Write:
	trap	#0x211
	jr	r31
	nop
.endproc _Write

.proc _Lseek
.global _Lseek
_Lseek:
	trap	#0x212
	jr	r31
	nop
.endproc _Lseek

.proc _Putchar
.global _Putchar
_Putchar:
	trap	#0x280
	jr	r31
	nop
.endproc _Putchar

.proc _Printf
.global _Printf
_Printf:
	trap	#0x201
	jr	r31
	nop
.endproc _Printf

.proc _getpid
.global _getpid
_getpid:
	trap	#0x431
	jr	r31
	nop
.endproc _getpid

.proc _process_create
.global _process_create
_process_create:
	trap	#0x432
	jr	r31
	nop
.endproc _process_create

.proc _shmget
.global _shmget
_shmget:
	trap	#0x440
	jr	r31
	nop
.endproc _shmget

.proc _shmat
.global _shmat
_shmat:
	trap	#0x441
	jr	r31
	nop
.endproc _shmat

.proc _sem_create
.global _sem_create
_sem_create:
	trap	#0x450
	jr	r31
	nop
.endproc _sem_create

.proc _sem_wait
.global _sem_wait
_sem_wait:
	trap	#0x451
	jr	r31
	nop
.endproc _sem_wait

.proc _sem_signal
.global _sem_signal
_sem_signal:
	trap	#0x452
	jr	r31
	nop
.endproc _sem_signal

.proc _lock_create
.global _lock_create
_lock_create:
	trap	#0x453
	jr	r31
	nop
.endproc _lock_create

.proc _lock_acquire
.global _lock_acquire
_lock_acquire:
	trap	#0x454
	jr	r31
	nop
.endproc _lock_acquire

.proc _lock_release
.global _lock_release
_lock_release:
	trap	#0x455
	jr	r31
	nop
.endproc _lock_release

.proc _cond_create
.global _cond_create
_cond_create:
	trap	#0x456
	jr	r31
	nop
.endproc _cond_create

.proc _cond_wait
.global _cond_wait
_cond_wait:
	trap	#0x457
	jr	r31
	nop
.endproc _cond_wait

.proc _cond_signal
.global _cond_signal
_cond_signal:
	trap	#0x458
	jr	r31
	nop
.endproc _cond_signal

.proc _cond_broadcast
.global _cond_broadcast
_cond_broadcast:
	trap	#0x455
	jr	r31
	nop
.endproc _cond_broadcast

.proc _Exit
.global _Exit
_Exit:
	trap	#0x500
	jr	r31
	nop
.endproc _Exit
; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3_LF1
	nop; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3_LF1
	nop; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3_LF1
	nop; delay slot nop
	j	L2_LF1
	nop; delay slot nop
L3_LF1:
	addi	r1,r0,#1
L2_LF1:
	j	L1_LF1
	nop; delay slot nop
L1_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7_LF1
	nop; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6_LF1
	nop; delay slot nop
	j	L7_LF1
	nop; delay slot nop
L7_LF1:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8_LF1
	nop; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6_LF1
	nop; delay slot nop
	j	L8_LF1
	nop; delay slot nop
L8_LF1:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5_LF1
	nop; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6_LF1
	nop; delay slot nop
	j	L5_LF1
	nop; delay slot nop
L6_LF1:
	addi	r1,r0,#1
L5_LF1:
	j	L4_LF1
	nop; delay slot nop
L4_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _dstrcpy
.global _dstrcpy
_dstrcpy:
;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	sw	-12(r30),r1
L10_LF1:
	lw	r1,(r30)
	addi	r2,r1,#1
	sw	(r30),r2
	lw	r2,4(r30)
	addi	r3,r2,#1
	sw	4(r30),r3
	lb	r2,(r2)
	sb	(r1),r2
	sb	-13(r30),r2
L12_LF1:
	lbu	r1,-13(r30)
	snei	r2,r1,#0
	bnez	r2,L13_LF1
	nop; delay slot nop
	j	L11_LF1
	nop; delay slot nop
L13_LF1:
	j	L10_LF1
	nop; delay slot nop
L11_LF1:
	lw	r1,-12(r30)
	j	L9_LF1
	nop; delay slot nop
L9_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcpy
.align 2
.proc _dstrncpy
.global _dstrncpy
_dstrncpy:
;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	sw	-12(r30),r1
L15_LF1:
	lw	r1,8(r30)
	addi	r2,r1,#-1
	sw	8(r30),r2
	slei	r1,r1,#0
	beqz	r1,L18_LF1
	nop; delay slot nop
	j	L16_LF1
	nop; delay slot nop
L18_LF1:
	lw	r1,(r30)
	addi	r2,r1,#1
	sw	(r30),r2
	lw	r2,4(r30)
	addi	r3,r2,#1
	sw	4(r30),r3
	lb	r2,(r2)
	sb	(r1),r2
	sb	-13(r30),r2
L17_LF1:
	lbu	r1,-13(r30)
	snei	r2,r1,#0
	bnez	r2,L19_LF1
	nop; delay slot nop
	j	L16_LF1
	nop; delay slot nop
L19_LF1:
	j	L15_LF1
	nop; delay slot nop
L16_LF1:
	lw	r1,-12(r30)
	j	L14_LF1
	nop; delay slot nop
L14_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncpy
.align 2
.proc _dstrcat
.global _dstrcat
_dstrcat:
;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	sw	-12(r30),r1
L21_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L23_LF1
	nop; delay slot nop
	j	L22_LF1
	nop; delay slot nop
L23_LF1:
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L21_LF1
	nop; delay slot nop
L22_LF1:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	jal	_dstrcpy
	nop; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	j	L20_LF1
	nop; delay slot nop
L20_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcat
.align 2
.proc _dstrncmp
.global _dstrncmp
_dstrncmp:
;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L25_LF1:
	lw	r1,-12(r30)
	lw	r2,8(r30)
	slt	r1,r1,r2
	bnez	r1,L28_LF1
	nop; delay slot nop
	j	L26_LF1
	nop; delay slot nop
L28_LF1:
	lw	r1,4(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L29_LF1
	nop; delay slot nop
	addi	r1,r0,#0
	j	L24_LF1
	nop; delay slot nop
	j	L30_LF1
	nop; delay slot nop
L29_LF1:
	lw	r1,(r30)
	lw	r2,4(r30)
	lbu	r1,(r1)
	lbu	r2,(r2)
	sne	r1,r1,r2
	beqz	r1,L30_LF1
	nop; delay slot nop
	j	L26_LF1
	nop; delay slot nop
L31_LF1:
L30_LF1:
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	lw	r2,4(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	4(r30),r2
L27_LF1:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L25_LF1
	nop; delay slot nop
L26_LF1:
	lw	r1,-12(r30)
	lw	r2,8(r30)
	seq	r1,r1,r2
	beqz	r1,L32_LF1
	nop; delay slot nop
	addi	r1,r0,#0
	j	L24_LF1
	nop; delay slot nop
	j	L33_LF1
	nop; delay slot nop
L32_LF1:
	lw	r2,(r30)
	lbu	r1,(r2)
	lw	r2,4(r30)
	lbu	r3,(r2)
	sub	r1,r1,r3
	sgei	r2,r1,#0
	beqz	r2,L34_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lw	r2,4(r30)
	lbu	r1,(r1)
	lbu	r2,(r2)
	sne	r1,r1,r2
	j	L35_LF1
	nop; delay slot nop
L34_LF1:
	addi	r1,r0,#-1
L35_LF1:
	j	L24_LF1
	nop; delay slot nop
L33_LF1:
L24_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncmp
.align 2
.proc _dstrlen
.global _dstrlen
_dstrlen:
;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-12(r30),r1
L37_LF1:
	lw	r1,(r30)
	addi	r2,r1,#1
	sw	(r30),r2
	lbu	r1,(r1)
	snei	r2,r1,#0
	bnez	r2,L39_LF1
	nop; delay slot nop
	j	L38_LF1
	nop; delay slot nop
L39_LF1:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L37_LF1
	nop; delay slot nop
L38_LF1:
	lw	r1,-12(r30)
	j	L36_LF1
	nop; delay slot nop
L36_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrlen
.align 2
.proc _dstrstr
.global _dstrstr
_dstrstr:
;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	jal	_dstrlen
	nop; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
L41_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L43_LF1
	nop; delay slot nop
	j	L42_LF1
	nop; delay slot nop
L43_LF1:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-12(r30)
	sw	8(r1),r2
	jal	_dstrncmp
	nop; delay slot nop
	addi	r29,r29,#16
	snei	r2,r1,#0
	bnez	r2,L44_LF1
	nop; delay slot nop
	lw	r1,(r30)
	j	L40_LF1
	nop; delay slot nop
L44_LF1:
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L41_LF1
	nop; delay slot nop
L42_LF1:
	addi	r1,r0,#0
	j	L40_LF1
	nop; delay slot nop
L40_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrstr
.align 2
.proc _dmindex
.global _dmindex
_dmindex:
;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	nop
L46_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L48_LF1
	nop; delay slot nop
	j	L47_LF1
	nop; delay slot nop
L48_LF1:
	lw	r1,4(r30)
	sw	-12(r30),r1
L49_LF1:
	lw	r1,-12(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L52_LF1
	nop; delay slot nop
	j	L50_LF1
	nop; delay slot nop
L52_LF1:
	lw	r1,(r30)
	lw	r2,-12(r30)
	lbu	r1,(r1)
	lbu	r2,(r2)
	seq	r1,r1,r2
	beqz	r1,L51_LF1
	nop; delay slot nop
	lw	r1,(r30)
	j	L45_LF1
	nop; delay slot nop
L53_LF1:
L51_LF1:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L49_LF1
	nop; delay slot nop
L50_LF1:
	j	L46_LF1
	nop; delay slot nop
L47_LF1:
	addi	r1,r0,#0
	j	L45_LF1
	nop; delay slot nop
L45_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dmindex
.align 2
.proc _dindex
.global _dindex
_dindex:
;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	nop
L55_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L57_LF1
	nop; delay slot nop
	j	L56_LF1
	nop; delay slot nop
L57_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	lw	r1,4(r30)
	seq	r2,r2,r1
	beqz	r2,L58_LF1
	nop; delay slot nop
	lw	r1,(r30)
	j	L54_LF1
	nop; delay slot nop
L58_LF1:
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L55_LF1
	nop; delay slot nop
L56_LF1:
	addi	r1,r0,#0
	j	L54_LF1
	nop; delay slot nop
L54_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dindex
.align 2
.proc _ditoa
.global _ditoa
_ditoa:
;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L60_LF1
	nop; delay slot nop
	lw	r1,4(r30)
	addi	r2,r1,#1
	sw	4(r30),r2
	addi	r2,r0,(#0x2d)&0xff
	sb	(r1),r2
	lw	r1,(r30)
	sub	r2,r0,r1
	sw	(r30),r2
	j	L61_LF1
	nop; delay slot nop
L60_LF1:
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L62_LF1
	nop; delay slot nop
	lw	r1,4(r30)
	addi	r2,r1,#1
	sw	4(r30),r2
	addi	r2,r0,(#0x30)&0xff
	sb	(r1),r2
	j	L61_LF1
	nop; delay slot nop
L62_LF1:
	addi	r1,r0,#1
	sw	-12(r30),r1
L64_LF1:
	lw	r1,-12(r30)
	lw	r2,(r30)
	sle	r1,r1,r2
	bnez	r1,L66_LF1
	nop; delay slot nop
	j	L65_LF1
	nop; delay slot nop
L67_LF1:
L66_LF1:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x1
	sw	-12(r30),r1
	j	L64_LF1
	nop; delay slot nop
L65_LF1:
	nop
L68_LF1:
	lw	r1,-12(r30)
	addi	r2,r0,#10
	movi2fp	f0,r1
	movi2fp	f1,r2
	div	f0,f0,f1
	movfp2i	r1,f0
	sw	-12(r30),r1
	lw	r1,4(r30)
	addi	r2,r1,#1
	sw	4(r30),r2
	lw	r2,(r30)
	lw	r3,-12(r30)
	movi2fp	f0,r2
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r3,r0,r2
	addi	r2,r3,#48
	sb	(r1),r2
	lw	r1,(r30)
	lw	r3,-12(r30)
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,-12(r30)
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	sub	r1,r1,r2
	sw	(r30),r1
L70_LF1:
	lw	r1,-12(r30)
	sgti	r2,r1,#1
	bnez	r2,L71_LF1
	nop; delay slot nop
	j	L61_LF1
	nop; delay slot nop
L71_LF1:
	j	L68_LF1
	nop; delay slot nop
L69_LF1:
L63_LF1:
L61_LF1:
	lw	r1,4(r30)
	addi	r2,r0,(#0x0)&0xff
	sb	(r1),r2
L59_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ditoa
.align 2
.proc _dstrtol
.global _dstrtol
_dstrtol:
;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-12(r30),r1
L73_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#32
	bnez	r1,L75_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#9
	bnez	r1,L75_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#10
	bnez	r1,L75_LF1
	nop; delay slot nop
	j	L74_LF1
	nop; delay slot nop
L75_LF1:
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L73_LF1
	nop; delay slot nop
L74_LF1:
	lw	r1,4(r30)
	snei	r2,r1,#0
	beqz	r2,L76_LF1
	nop; delay slot nop
	lw	r1,4(r30)
	lw	r2,(r30)
	sw	(r1),r2
L76_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L77_LF1
	nop; delay slot nop
	lw	r1,-12(r30)
	j	L72_LF1
	nop; delay slot nop
L77_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#45
	beqz	r1,L78_LF1
	nop; delay slot nop
	addi	r1,r0,#-1
	sw	-20(r30),r1
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L79_LF1
	nop; delay slot nop
L78_LF1:
	addi	r1,r0,#1
	sw	-20(r30),r1
L79_LF1:
	lw	r1,8(r30)
	snei	r2,r1,#0
	bnez	r2,L80_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#48
	beqz	r1,L81_LF1
	nop; delay slot nop
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#120
	bnez	r1,L83_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	seqi	r1,r2,#88
	bnez	r1,L83_LF1
	nop; delay slot nop
	j	L82_LF1
	nop; delay slot nop
L83_LF1:
	addi	r1,r0,#16
	sw	8(r30),r1
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
	j	L84_LF1
	nop; delay slot nop
L82_LF1:
	addi	r1,r0,#8
	sw	8(r30),r1
L84_LF1:
	j	L80_LF1
	nop; delay slot nop
L81_LF1:
	addi	r1,r0,#10
	sw	8(r30),r1
L85_LF1:
L80_LF1:
	lw	r1,8(r30)
	slei	r2,r1,#0
	bnez	r2,L87_LF1
	nop; delay slot nop
	lw	r1,8(r30)
	sgti	r2,r1,#16
	bnez	r2,L87_LF1
	nop; delay slot nop
	j	L86_LF1
	nop; delay slot nop
L87_LF1:
	lw	r1,-12(r30)
	j	L72_LF1
	nop; delay slot nop
L86_LF1:
	nop
L88_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	sgtui	r1,r2,#47
	beqz	r1,L91_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	sleui	r1,r2,#57
	beqz	r1,L91_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	addi	r1,r2,#-48
	sw	-16(r30),r1
	j	L92_LF1
	nop; delay slot nop
L91_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	sgtui	r1,r2,#96
	beqz	r1,L93_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	sleui	r1,r2,#122
	beqz	r1,L93_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	addi	r1,r2,#-87
	sw	-16(r30),r1
	j	L92_LF1
	nop; delay slot nop
L93_LF1:
	lw	r1,(r30)
	lbu	r2,(r1)
	sgtui	r1,r2,#64
	beqz	r1,L95_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	sleui	r1,r2,#90
	beqz	r1,L95_LF1
	nop; delay slot nop
	lw	r1,(r30)
	lbu	r2,(r1)
	addi	r1,r2,#-55
	sw	-16(r30),r1
	j	L92_LF1
	nop; delay slot nop
L95_LF1:
	addi	r1,r0,#1000
	sw	-16(r30),r1
L96_LF1:
L94_LF1:
L92_LF1:
	lw	r1,-16(r30)
	lw	r2,8(r30)
	slt	r1,r1,r2
	beqz	r1,L90_LF1
	nop; delay slot nop
	lw	r1,-12(r30)
	lw	r2,8(r30)
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	sw	-12(r30),r1
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	add	r1,r1,r2
	sw	-12(r30),r1
	lw	r2,(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	(r30),r2
L97_LF1:
L90_LF1:
	lw	r1,-16(r30)
	lw	r2,8(r30)
	slt	r1,r1,r2
	bnez	r1,L98_LF1
	nop; delay slot nop
	j	L89_LF1
	nop; delay slot nop
L98_LF1:
	j	L88_LF1
	nop; delay slot nop
L89_LF1:
	lw	r1,4(r30)
	snei	r2,r1,#0
	beqz	r2,L99_LF1
	nop; delay slot nop
	lw	r1,4(r30)
	lw	r2,(r30)
	sw	(r1),r2
L99_LF1:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	sw	-12(r30),r1
	lw	r1,-12(r30)
	j	L72_LF1
	nop; delay slot nop
L72_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrtol
.align 2
.proc _bcopy
.global _bcopy
_bcopy:
;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	nop
L101_LF1:
	lw	r1,8(r30)
	addi	r2,r1,#-1
	sw	8(r30),r2
	sgti	r1,r1,#0
	bnez	r1,L103_LF1
	nop; delay slot nop
	j	L102_LF1
	nop; delay slot nop
L103_LF1:
	lw	r1,4(r30)
	addi	r2,r1,#1
	sw	4(r30),r2
	lw	r2,(r30)
	addi	r3,r2,#1
	sw	(r30),r3
	lb	r2,(r2)
	sb	(r1),r2
	j	L101_LF1
	nop; delay slot nop
L102_LF1:
L100_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bcopy
.align 2
.proc _bzero
.global _bzero
_bzero:
;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	nop
L105_LF1:
	lw	r1,4(r30)
	addi	r2,r1,#-1
	sw	4(r30),r2
	sgti	r1,r1,#0
	bnez	r1,L107_LF1
	nop; delay slot nop
	j	L106_LF1
	nop; delay slot nop
L107_LF1:
	lw	r1,(r30)
	addi	r2,r1,#1
	sw	(r30),r2
	addi	r2,r0,(#0x0)&0xff
	sb	(r1),r2
	j	L105_LF1
	nop; delay slot nop
L106_LF1:
L104_LF1:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bzero
.align 2
.proc _min
.global _min
_min:
;  Function 'min'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	lw	r2,4(r30)
	sle	r3,r1,r2
	bnez	r3,L109_LF1
	nop; delay slot nop
	lw	r1,4(r30)
L109_LF1:
	j	L108_LF1
	nop; delay slot nop
L108_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _min
;;; Ethan L. Miller, 1999.  Released to the public domain
;;;
;;; Most of the traps are called in files from libtraps.


.align 2
.proc _exit
.global _exit
_exit:
	trap	#0x300
	jr	r31
	nop
.endproc _exit

; for the benefit of gcc.
.proc ___main
.global ___main
___main:
	jr	r31
	nop
.endproc ___main
.text
.global _etext
_etext:
.align 3
.data
.global _edata
_edata:
