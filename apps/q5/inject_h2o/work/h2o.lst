 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 233
    4                      ; Text size: 4344
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   88  00003050  64206e6f	
   88  00003054  74206d61	
   88  00003058  70207468	
   88  0000305c  65207669	
   88  00003060  72747561	
   88  00003064  6c206164	
   88  00003068  64726573	
   88  0000306c  7320746f	
   88  00003070  20746865	
   88  00003074  206d656d	
   88  00003078  6f727920	
   88  0000307c  696e2000	
   89  00003080          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  2c206578	.ascii ", exiting...\n\000"
   91  00003084  6974696e	
   91  00003088  672e2e2e	
   91  0000308c  0a00    	
   92  0000308e          	.align 2
   93  00003090          	LC4_LF0:
   94  00003090  48324f20	.ascii "H2O injected into Radeon atmosphere, PID: %d\n\000"
   94  00003094  696e6a65	
   94  00003098  63746564	
   94  0000309c  20696e74	
   94  000030a0  6f205261	
   94  000030a4  64656f6e	
   94  000030a8  2061746d	
   94  000030ac  6f737068	
   94  000030b0  6572652c	
   94  000030b4  20504944	
   94  000030b8  3a202564	
   94  000030bc  0a00    	
   95  000030be          	.align 2
   96  000030c0          	LC5_LF0:
   97  000030c0  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   97  000030c4  73656d61	
   97  000030c8  70686f72	
   97  000030cc  6520735f	
   97  000030d0  70726f63	
   97  000030d4  735f636f	
   97  000030d8  6d706c65	
   97  000030dc  74656420	
   97  000030e0  28256429	
   97  000030e4  20696e20	
   97  000030e8  00      	
   98  000030e9          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c001000	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410003	snei	r1,r2,#3
  113  000010f8  1020004c	beqz	r1,L14_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  117  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  118  0000110c  afa50000	sw	(r29),r5
  119  00001110  0c0001d4	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  8c650000	lw	r5,(r3)
  122  0000111c  afa50000	sw	(r29),r5
  123  00001120  0c0001c4	jal	_Printf
  124  00001124  54000000	nop; not filled.
  125  00001128  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  126  0000112c  24a53008	addui	r5,r5,(LC1_LF0)&0xffff
  127  00001130  afa50000	sw	(r29),r5
  128  00001134  0c0001b0	jal	_Printf
  129  00001138  54000000	nop; not filled.
  130  0000113c  0c00025c	jal	_Exit
  131  00001140  54000000	nop; not filled.
  132  00001144  23bd0008	addi	r29,r29,#8
  133  00001148          	L14_LF0:
  134  00001148  23bdfff0	addi	r29,r29,#-16
  135  0000114c  8c650004	lw	r5,4(r3)
  136  00001150  afa50000	sw	(r29),r5
  137  00001154  20050000	addi	r5,r0,#0
  138  00001158  afa50004	sw	4(r29),r5
  139  0000115c  2005000a	addi	r5,r0,#10
  140  00001160  afa50008	sw	8(r29),r5
  141  00001164  0c000ae0	jal	_dstrtol
  142  00001168  54000000	nop; not filled.
  143  0000116c  00011020	add	r2,r0,r1
  144  00001170  8c650008	lw	r5,8(r3)
  145  00001174  afa50000	sw	(r29),r5
  146  00001178  20050000	addi	r5,r0,#0
  147  0000117c  afa50004	sw	4(r29),r5
  148  00001180  2005000a	addi	r5,r0,#10
  149  00001184  afa50008	sw	8(r29),r5
  150  00001188  0c000abc	jal	_dstrtol
  151  0000118c  54000000	nop; not filled.
  152  00001190  00012020	add	r4,r0,r1
  153  00001194  afa20000	sw	(r29),r2
  154  00001198  0c00017c	jal	_shmat
  155  0000119c  54000000	nop; not filled.
  156  000011a0  00011020	add	r2,r0,r1
  157  000011a4  23bd0010	addi	r29,r29,#16
  158  000011a8  64410000	snei	r1,r2,#0
  159  000011ac  1420004c	bnez	r1,L15_LF0
  160  000011b0  54000000	nop; not filled.
  161  000011b4  23bdfff8	addi	r29,r29,#-8
  162  000011b8  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  163  000011bc  24a5304c	addui	r5,r5,(LC2_LF0)&0xffff
  164  000011c0  afa50000	sw	(r29),r5
  165  000011c4  0c000120	jal	_Printf
  166  000011c8  54000000	nop; not filled.
  167  000011cc  8c650000	lw	r5,(r3)
  168  000011d0  afa50000	sw	(r29),r5
  169  000011d4  0c000110	jal	_Printf
  170  000011d8  54000000	nop; not filled.
  171  000011dc  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  172  000011e0  24a53080	addui	r5,r5,(LC3_LF0)&0xffff
  173  000011e4  afa50000	sw	(r29),r5
  174  000011e8  0c0000fc	jal	_Printf
  175  000011ec  54000000	nop; not filled.
  176  000011f0  0c0001a8	jal	_Exit
  177  000011f4  54000000	nop; not filled.
  178  000011f8  23bd0008	addi	r29,r29,#8
  179  000011fc          	L15_LF0:
  180  000011fc  23bdfff8	addi	r29,r29,#-8
  181  00001200  8c420000	lw	r2,(r2)
  182  00001204  afa20000	sw	(r29),r2
  183  00001208  0c000130	jal	_sem_signal
  184  0000120c  54000000	nop; not filled.
  185  00001210  0c0000e0	jal	_getpid
  186  00001214  54000000	nop; not filled.
  187  00001218  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  188  0000121c  24a53090	addui	r5,r5,(LC4_LF0)&0xffff
  189  00001220  afa50000	sw	(r29),r5
  190  00001224  afa10004	sw	4(r29),r1
  191  00001228  0c0000bc	jal	_Printf
  192  0000122c  54000000	nop; not filled.
  193  00001230  afa40000	sw	(r29),r4
  194  00001234  0c000104	jal	_sem_signal
  195  00001238  54000000	nop; not filled.
  196  0000123c  23bd0008	addi	r29,r29,#8
  197  00001240  64210001	snei	r1,r1,#1
  198  00001244  10200050	beqz	r1,L16_LF0
  199  00001248  54000000	nop; not filled.
  200  0000124c  23bdfff8	addi	r29,r29,#-8
  201  00001250  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  202  00001254  24a530c0	addui	r5,r5,(LC5_LF0)&0xffff
  203  00001258  afa50000	sw	(r29),r5
  204  0000125c  afa40004	sw	4(r29),r4
  205  00001260  0c000084	jal	_Printf
  206  00001264  54000000	nop; not filled.
  207  00001268  8c630000	lw	r3,(r3)
  208  0000126c  afa30000	sw	(r29),r3
  209  00001270  0c000074	jal	_Printf
  210  00001274  54000000	nop; not filled.
  211  00001278  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  212  0000127c  24a53080	addui	r5,r5,(LC3_LF0)&0xffff
  213  00001280  afa50000	sw	(r29),r5
  214  00001284  0c000060	jal	_Printf
  215  00001288  54000000	nop; not filled.
  216  0000128c  0c00010c	jal	_Exit
  217  00001290  54000000	nop; not filled.
  218  00001294  23bd0008	addi	r29,r29,#8
  219  00001298          	L16_LF0:
  220  00001298  0c000e48	jal	_exit
  221  0000129c  54000000	nop
  222  000012a0          	.endproc _main
  223                      ;;;
  224                      ;;; Stub functions for DLX traps.
  225                      ;;;
  226                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  227                      ;;;
  228                      ;;; The traps such as Open and Close
  229                      ;;; (note the capital letters) are for use by user programs.  The traps
  230                      ;;; with names such as open and close (lower case) are for use by the OS.
  231                      ;;;
  234  000012a0          	.align 2
  236                      ;;; The following are the traps to be used by user-level programs
  237                      ;;;
  239  000012a0          	.align 2
  240  000012a0          	.proc _Open
  241  000012a0          	.global _Open
  242  000012a0          	_Open:
  243                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  244                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  245                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  246  000012a0  44000213	trap	#0x213
  247  000012a4  4be00000	jr	r31
  248  000012a8  54000000	nop
  249  000012ac          	.endproc _Open
  251  000012ac          	.proc _Close
  252  000012ac          	.global _Close
  253  000012ac          	_Close:
  254  000012ac  44000214	trap	#0x214
  255  000012b0  4be00000	jr	r31
  256  000012b4  54000000	nop
  257  000012b8          	.endproc _Close
  259  000012b8          	.proc _Read
  260  000012b8          	.global _Read
  261  000012b8          	_Read:
  262  000012b8  44000210	trap	#0x210
  263  000012bc  4be00000	jr	r31
  264  000012c0  54000000	nop
  265  000012c4          	.endproc _Read
  267  000012c4          	.proc _Write
  268  000012c4          	.global _Write
  269  000012c4          	_Write:
  270  000012c4  44000211	trap	#0x211
  271  000012c8  4be00000	jr	r31
  272  000012cc  54000000	nop
  273  000012d0          	.endproc _Write
  275  000012d0          	.proc _Lseek
  276  000012d0          	.global _Lseek
  277  000012d0          	_Lseek:
  278  000012d0  44000212	trap	#0x212
  279  000012d4  4be00000	jr	r31
  280  000012d8  54000000	nop
  281  000012dc          	.endproc _Lseek
  283  000012dc          	.proc _Putchar
  284  000012dc          	.global _Putchar
  285  000012dc          	_Putchar:
  286  000012dc  44000280	trap	#0x280
  287  000012e0  4be00000	jr	r31
  288  000012e4  54000000	nop
  289  000012e8          	.endproc _Putchar
  291  000012e8          	.proc _Printf
  292  000012e8          	.global _Printf
  293  000012e8          	_Printf:
  294  000012e8  44000201	trap	#0x201
  295  000012ec  4be00000	jr	r31
  296  000012f0  54000000	nop
  297  000012f4          	.endproc _Printf
  299  000012f4          	.proc _getpid
  300  000012f4          	.global _getpid
  301  000012f4          	_getpid:
  302  000012f4  44000431	trap	#0x431
  303  000012f8  4be00000	jr	r31
  304  000012fc  54000000	nop
  305  00001300          	.endproc _getpid
  307  00001300          	.proc _process_create
  308  00001300          	.global _process_create
  309  00001300          	_process_create:
  310  00001300  44000432	trap	#0x432
  311  00001304  4be00000	jr	r31
  312  00001308  54000000	nop
  313  0000130c          	.endproc _process_create
  315  0000130c          	.proc _shmget
  316  0000130c          	.global _shmget
  317  0000130c          	_shmget:
  318  0000130c  44000440	trap	#0x440
  319  00001310  4be00000	jr	r31
  320  00001314  54000000	nop
  321  00001318          	.endproc _shmget
  323  00001318          	.proc _shmat
  324  00001318          	.global _shmat
  325  00001318          	_shmat:
  326  00001318  44000441	trap	#0x441
  327  0000131c  4be00000	jr	r31
  328  00001320  54000000	nop
  329  00001324          	.endproc _shmat
  331  00001324          	.proc _sem_create
  332  00001324          	.global _sem_create
  333  00001324          	_sem_create:
  334  00001324  44000450	trap	#0x450
  335  00001328  4be00000	jr	r31
  336  0000132c  54000000	nop
  337  00001330          	.endproc _sem_create
  339  00001330          	.proc _sem_wait
  340  00001330          	.global _sem_wait
  341  00001330          	_sem_wait:
  342  00001330  44000451	trap	#0x451
  343  00001334  4be00000	jr	r31
  344  00001338  54000000	nop
  345  0000133c          	.endproc _sem_wait
  347  0000133c          	.proc _sem_signal
  348  0000133c          	.global _sem_signal
  349  0000133c          	_sem_signal:
  350  0000133c  44000452	trap	#0x452
  351  00001340  4be00000	jr	r31
  352  00001344  54000000	nop
  353  00001348          	.endproc _sem_signal
  355  00001348          	.proc _lock_create
  356  00001348          	.global _lock_create
  357  00001348          	_lock_create:
  358  00001348  44000453	trap	#0x453
  359  0000134c  4be00000	jr	r31
  360  00001350  54000000	nop
  361  00001354          	.endproc _lock_create
  363  00001354          	.proc _lock_acquire
  364  00001354          	.global _lock_acquire
  365  00001354          	_lock_acquire:
  366  00001354  44000454	trap	#0x454
  367  00001358  4be00000	jr	r31
  368  0000135c  54000000	nop
  369  00001360          	.endproc _lock_acquire
  371  00001360          	.proc _lock_release
  372  00001360          	.global _lock_release
  373  00001360          	_lock_release:
  374  00001360  44000455	trap	#0x455
  375  00001364  4be00000	jr	r31
  376  00001368  54000000	nop
  377  0000136c          	.endproc _lock_release
  379  0000136c          	.proc _cond_create
  380  0000136c          	.global _cond_create
  381  0000136c          	_cond_create:
  382  0000136c  44000456	trap	#0x456
  383  00001370  4be00000	jr	r31
  384  00001374  54000000	nop
  385  00001378          	.endproc _cond_create
  387  00001378          	.proc _cond_wait
  388  00001378          	.global _cond_wait
  389  00001378          	_cond_wait:
  390  00001378  44000457	trap	#0x457
  391  0000137c  4be00000	jr	r31
  392  00001380  54000000	nop
  393  00001384          	.endproc _cond_wait
  395  00001384          	.proc _cond_signal
  396  00001384          	.global _cond_signal
  397  00001384          	_cond_signal:
  398  00001384  44000458	trap	#0x458
  399  00001388  4be00000	jr	r31
  400  0000138c  54000000	nop
  401  00001390          	.endproc _cond_signal
  403  00001390          	.proc _cond_broadcast
  404  00001390          	.global _cond_broadcast
  405  00001390          	_cond_broadcast:
  406  00001390  44000455	trap	#0x455
  407  00001394  4be00000	jr	r31
  408  00001398  54000000	nop
  409  0000139c          	.endproc _cond_broadcast
  411  0000139c          	.proc _Exit
  412  0000139c          	.global _Exit
  413  0000139c          	_Exit:
  414  0000139c  44000500	trap	#0x500
  415  000013a0  4be00000	jr	r31
  416  000013a4  54000000	nop
  417  000013a8          	.endproc _Exit
  418                      ; Compiled by GCC
  420  000013a8          	.align 2
  421  000013a8          	.proc _isspace
  422  000013a8          	.global _isspace
  423  000013a8          	_isspace:
  424                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  425  000013a8  afbefffc	sw	-4(r29),r30; push fp
  426  000013ac  001df020	add	r30,r0,r29; fp = sp
  427  000013b0  afbffff8	sw	-8(r29),r31; push ret addr
  428  000013b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  429  000013b8  afa20000	sw	0(r29),r2
  430  000013bc  afa30004	sw	4(r29),r3
  431  000013c0  afa40008	sw	8(r29),r4
  432  000013c4  83c20003	lb	r2,3(r30)
  433  000013c8  20010000	addi	r1,r0,#0
  434  000013cc  304300ff	andi	r3,r2,#0x00ff
  435  000013d0  60640020	seqi	r4,r3,#32
  436  000013d4  1480002c	bnez	r4,L3_LF2
  437  000013d8  54000000	nop; delay slot nop
  438  000013dc  304300ff	andi	r3,r2,#0x00ff
  439  000013e0  60640009	seqi	r4,r3,#9
  440  000013e4  1480001c	bnez	r4,L3_LF2
  441  000013e8  54000000	nop; delay slot nop
  442  000013ec  304300ff	andi	r3,r2,#0x00ff
  443  000013f0  6064000a	seqi	r4,r3,#10
  444  000013f4  1480000c	bnez	r4,L3_LF2
  445  000013f8  54000000	nop; delay slot nop
  446  000013fc  08000008	j	L2_LF2
  447  00001400  54000000	nop; delay slot nop
  448  00001404          	L3_LF2:
  449  00001404  20010001	addi	r1,r0,#1
  450  00001408          	L2_LF2:
  451  00001408  08000004	j	L1_LF2
  452  0000140c  54000000	nop; delay slot nop
  453  00001410          	L1_LF2:
  454  00001410  8fa20000	lw	r2,0(r29)
  455  00001414  8fa30004	lw	r3,4(r29)
  456  00001418  8fa40008	lw	r4,8(r29)
  457  0000141c  8fdffff8	lw	r31,-8(r30)
  458  00001420  001ee820	add	r29,r0,r30
  459  00001424  8fdefffc	lw	r30,-4(r30)
  460  00001428  4be00000	jr	r31
  461  0000142c  54000000	nop
  462  00001430          	.endproc _isspace
  463  00001430          	.align 2
  464  00001430          	.proc _isxdigit
  465  00001430          	.global _isxdigit
  466  00001430          	_isxdigit:
  467                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  468  00001430  afbefffc	sw	-4(r29),r30; push fp
  469  00001434  001df020	add	r30,r0,r29; fp = sp
  470  00001438  afbffff8	sw	-8(r29),r31; push ret addr
  471  0000143c  2fbd0018	subui	r29,r29,#24; alloc local storage
  472  00001440  afa20000	sw	0(r29),r2
  473  00001444  afa30004	sw	4(r29),r3
  474  00001448  afa40008	sw	8(r29),r4
  475  0000144c  83c20003	lb	r2,3(r30)
  476  00001450  20010000	addi	r1,r0,#0
  477  00001454  304300ff	andi	r3,r2,#0x00ff
  478  00001458  6c64002f	sgtui	r4,r3,#47
  479  0000145c  1080001c	beqz	r4,L7_LF2
  480  00001460  54000000	nop; delay slot nop
  481  00001464  304300ff	andi	r3,r2,#0x00ff
  482  00001468  70640039	sleui	r4,r3,#57
  483  0000146c  1480005c	bnez	r4,L6_LF2
  484  00001470  54000000	nop; delay slot nop
  485  00001474  08000004	j	L7_LF2
  486  00001478  54000000	nop; delay slot nop
  487  0000147c          	L7_LF2:
  488  0000147c  304300ff	andi	r3,r2,#0x00ff
  489  00001480  6c640060	sgtui	r4,r3,#96
  490  00001484  1080001c	beqz	r4,L8_LF2
  491  00001488  54000000	nop; delay slot nop
  492  0000148c  304300ff	andi	r3,r2,#0x00ff
  493  00001490  70640066	sleui	r4,r3,#102
  494  00001494  14800034	bnez	r4,L6_LF2
  495  00001498  54000000	nop; delay slot nop
  496  0000149c  08000004	j	L8_LF2
  497  000014a0  54000000	nop; delay slot nop
  498  000014a4          	L8_LF2:
  499  000014a4  304300ff	andi	r3,r2,#0x00ff
  500  000014a8  6c640040	sgtui	r4,r3,#64
  501  000014ac  10800020	beqz	r4,L5_LF2
  502  000014b0  54000000	nop; delay slot nop
  503  000014b4  304300ff	andi	r3,r2,#0x00ff
  504  000014b8  70640041	sleui	r4,r3,#65
  505  000014bc  1480000c	bnez	r4,L6_LF2
  506  000014c0  54000000	nop; delay slot nop
  507  000014c4  08000008	j	L5_LF2
  508  000014c8  54000000	nop; delay slot nop
  509  000014cc          	L6_LF2:
  510  000014cc  20010001	addi	r1,r0,#1
  511  000014d0          	L5_LF2:
  512  000014d0  08000004	j	L4_LF2
  513  000014d4  54000000	nop; delay slot nop
  514  000014d8          	L4_LF2:
  515  000014d8  8fa20000	lw	r2,0(r29)
  516  000014dc  8fa30004	lw	r3,4(r29)
  517  000014e0  8fa40008	lw	r4,8(r29)
  518  000014e4  8fdffff8	lw	r31,-8(r30)
  519  000014e8  001ee820	add	r29,r0,r30
  520  000014ec  8fdefffc	lw	r30,-4(r30)
  521  000014f0  4be00000	jr	r31
  522  000014f4  54000000	nop
  523  000014f8          	.endproc _isxdigit
  524  000014f8          	.align 2
  525  000014f8          	.proc _dstrcpy
  526  000014f8          	.global _dstrcpy
  527  000014f8          	_dstrcpy:
  528                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  529  000014f8  afbefffc	sw	-4(r29),r30; push fp
  530  000014fc  001df020	add	r30,r0,r29; fp = sp
  531  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  532  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  533  00001508  afa20000	sw	0(r29),r2
  534  0000150c  afa30004	sw	4(r29),r3
  535  00001510  8fc10000	lw	r1,(r30)
  536  00001514  afc1fff4	sw	-12(r30),r1
  537  00001518          	L10_LF2:
  538  00001518  8fc10000	lw	r1,(r30)
  539  0000151c  20220001	addi	r2,r1,#1
  540  00001520  afc20000	sw	(r30),r2
  541  00001524  8fc20004	lw	r2,4(r30)
  542  00001528  20430001	addi	r3,r2,#1
  543  0000152c  afc30004	sw	4(r30),r3
  544  00001530  80420000	lb	r2,(r2)
  545  00001534  a0220000	sb	(r1),r2
  546  00001538  a3c2fff3	sb	-13(r30),r2
  547  0000153c          	L12_LF2:
  548  0000153c  93c1fff3	lbu	r1,-13(r30)
  549  00001540  64220000	snei	r2,r1,#0
  550  00001544  1440000c	bnez	r2,L13_LF2
  551  00001548  54000000	nop; delay slot nop
  552  0000154c  0800000c	j	L11_LF2
  553  00001550  54000000	nop; delay slot nop
  554  00001554          	L13_LF2:
  555  00001554  0bffffc0	j	L10_LF2
  556  00001558  54000000	nop; delay slot nop
  557  0000155c          	L11_LF2:
  558  0000155c  8fc1fff4	lw	r1,-12(r30)
  559  00001560  08000004	j	L9_LF2
  560  00001564  54000000	nop; delay slot nop
  561  00001568          	L9_LF2:
  562  00001568  8fa20000	lw	r2,0(r29)
  563  0000156c  8fa30004	lw	r3,4(r29)
  564  00001570  8fdffff8	lw	r31,-8(r30)
  565  00001574  001ee820	add	r29,r0,r30
  566  00001578  8fdefffc	lw	r30,-4(r30)
  567  0000157c  4be00000	jr	r31
  568  00001580  54000000	nop
  569  00001584          	.endproc _dstrcpy
  570  00001584          	.align 2
  571  00001584          	.proc _dstrncpy
  572  00001584          	.global _dstrncpy
  573  00001584          	_dstrncpy:
  574                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  575  00001584  afbefffc	sw	-4(r29),r30; push fp
  576  00001588  001df020	add	r30,r0,r29; fp = sp
  577  0000158c  afbffff8	sw	-8(r29),r31; push ret addr
  578  00001590  2fbd0018	subui	r29,r29,#24; alloc local storage
  579  00001594  afa20000	sw	0(r29),r2
  580  00001598  afa30004	sw	4(r29),r3
  581  0000159c  8fc10000	lw	r1,(r30)
  582  000015a0  afc1fff4	sw	-12(r30),r1
  583  000015a4          	L15_LF2:
  584  000015a4  8fc10008	lw	r1,8(r30)
  585  000015a8  2022ffff	addi	r2,r1,#-1
  586  000015ac  afc20008	sw	8(r30),r2
  587  000015b0  70210000	slei	r1,r1,#0
  588  000015b4  1020000c	beqz	r1,L18_LF2
  589  000015b8  54000000	nop; delay slot nop
  590  000015bc  08000048	j	L16_LF2
  591  000015c0  54000000	nop; delay slot nop
  592  000015c4          	L18_LF2:
  593  000015c4  8fc10000	lw	r1,(r30)
  594  000015c8  20220001	addi	r2,r1,#1
  595  000015cc  afc20000	sw	(r30),r2
  596  000015d0  8fc20004	lw	r2,4(r30)
  597  000015d4  20430001	addi	r3,r2,#1
  598  000015d8  afc30004	sw	4(r30),r3
  599  000015dc  80420000	lb	r2,(r2)
  600  000015e0  a0220000	sb	(r1),r2
  601  000015e4  a3c2fff3	sb	-13(r30),r2
  602  000015e8          	L17_LF2:
  603  000015e8  93c1fff3	lbu	r1,-13(r30)
  604  000015ec  64220000	snei	r2,r1,#0
  605  000015f0  1440000c	bnez	r2,L19_LF2
  606  000015f4  54000000	nop; delay slot nop
  607  000015f8  0800000c	j	L16_LF2
  608  000015fc  54000000	nop; delay slot nop
  609  00001600          	L19_LF2:
  610  00001600  0bffffa0	j	L15_LF2
  611  00001604  54000000	nop; delay slot nop
  612  00001608          	L16_LF2:
  613  00001608  8fc1fff4	lw	r1,-12(r30)
  614  0000160c  08000004	j	L14_LF2
  615  00001610  54000000	nop; delay slot nop
  616  00001614          	L14_LF2:
  617  00001614  8fa20000	lw	r2,0(r29)
  618  00001618  8fa30004	lw	r3,4(r29)
  619  0000161c  8fdffff8	lw	r31,-8(r30)
  620  00001620  001ee820	add	r29,r0,r30
  621  00001624  8fdefffc	lw	r30,-4(r30)
  622  00001628  4be00000	jr	r31
  623  0000162c  54000000	nop
  624  00001630          	.endproc _dstrncpy
  625  00001630          	.align 2
  626  00001630          	.proc _dstrcat
  627  00001630          	.global _dstrcat
  628  00001630          	_dstrcat:
  629                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  630  00001630  afbefffc	sw	-4(r29),r30; push fp
  631  00001634  001df020	add	r30,r0,r29; fp = sp
  632  00001638  afbffff8	sw	-8(r29),r31; push ret addr
  633  0000163c  2fbd0018	subui	r29,r29,#24; alloc local storage
  634  00001640  afa20000	sw	0(r29),r2
  635  00001644  8fc10000	lw	r1,(r30)
  636  00001648  afc1fff4	sw	-12(r30),r1
  637  0000164c          	L21_LF2:
  638  0000164c  8fc10000	lw	r1,(r30)
  639  00001650  90220000	lbu	r2,(r1)
  640  00001654  64410000	snei	r1,r2,#0
  641  00001658  1420000c	bnez	r1,L23_LF2
  642  0000165c  54000000	nop; delay slot nop
  643  00001660  0800001c	j	L22_LF2
  644  00001664  54000000	nop; delay slot nop
  645  00001668          	L23_LF2:
  646  00001668  8fc20000	lw	r2,(r30)
  647  0000166c  20410001	addi	r1,r2,#1
  648  00001670  00011020	add	r2,r0,r1
  649  00001674  afc20000	sw	(r30),r2
  650  00001678  0bffffd0	j	L21_LF2
  651  0000167c  54000000	nop; delay slot nop
  652  00001680          	L22_LF2:
  653  00001680  23bdfff8	addi	r29,r29,#-8
  654  00001684  001d0820	add	r1,r0,r29
  655  00001688  8fc20000	lw	r2,(r30)
  656  0000168c  ac220000	sw	(r1),r2
  657  00001690  8fc20004	lw	r2,4(r30)
  658  00001694  ac220004	sw	4(r1),r2
  659  00001698  0ffffe5c	jal	_dstrcpy
  660  0000169c  54000000	nop; delay slot nop
  661  000016a0  23bd0008	addi	r29,r29,#8
  662  000016a4  8fc1fff4	lw	r1,-12(r30)
  663  000016a8  08000004	j	L20_LF2
  664  000016ac  54000000	nop; delay slot nop
  665  000016b0          	L20_LF2:
  666  000016b0  8fa20000	lw	r2,0(r29)
  667  000016b4  8fdffff8	lw	r31,-8(r30)
  668  000016b8  001ee820	add	r29,r0,r30
  669  000016bc  8fdefffc	lw	r30,-4(r30)
  670  000016c0  4be00000	jr	r31
  671  000016c4  54000000	nop
  672  000016c8          	.endproc _dstrcat
  673  000016c8          	.align 2
  674  000016c8          	.proc _dstrncmp
  675  000016c8          	.global _dstrncmp
  676  000016c8          	_dstrncmp:
  677                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  678  000016c8  afbefffc	sw	-4(r29),r30; push fp
  679  000016cc  001df020	add	r30,r0,r29; fp = sp
  680  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  681  000016d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  682  000016d8  afa20000	sw	0(r29),r2
  683  000016dc  afa30004	sw	4(r29),r3
  684  000016e0  54000000	nop
  685  000016e4  20010000	addi	r1,r0,#0
  686  000016e8  afc1fff4	sw	-12(r30),r1
  687  000016ec          	L25_LF2:
  688  000016ec  8fc1fff4	lw	r1,-12(r30)
  689  000016f0  8fc20008	lw	r2,8(r30)
  690  000016f4  0022082a	slt	r1,r1,r2
  691  000016f8  1420000c	bnez	r1,L28_LF2
  692  000016fc  54000000	nop; delay slot nop
  693  00001700  08000088	j	L26_LF2
  694  00001704  54000000	nop; delay slot nop
  695  00001708          	L28_LF2:
  696  00001708  8fc10004	lw	r1,4(r30)
  697  0000170c  90220000	lbu	r2,(r1)
  698  00001710  64410000	snei	r1,r2,#0
  699  00001714  14200018	bnez	r1,L29_LF2
  700  00001718  54000000	nop; delay slot nop
  701  0000171c  20010000	addi	r1,r0,#0
  702  00001720  080000d8	j	L24_LF2
  703  00001724  54000000	nop; delay slot nop
  704  00001728  08000028	j	L30_LF2
  705  0000172c  54000000	nop; delay slot nop
  706  00001730          	L29_LF2:
  707  00001730  8fc10000	lw	r1,(r30)
  708  00001734  8fc20004	lw	r2,4(r30)
  709  00001738  90210000	lbu	r1,(r1)
  710  0000173c  90420000	lbu	r2,(r2)
  711  00001740  00220829	sne	r1,r1,r2
  712  00001744  1020000c	beqz	r1,L30_LF2
  713  00001748  54000000	nop; delay slot nop
  714  0000174c  0800003c	j	L26_LF2
  715  00001750  54000000	nop; delay slot nop
  716  00001754          	L31_LF2:
  717  00001754          	L30_LF2:
  718  00001754  8fc20000	lw	r2,(r30)
  719  00001758  20410001	addi	r1,r2,#1
  720  0000175c  00011020	add	r2,r0,r1
  721  00001760  afc20000	sw	(r30),r2
  722  00001764  8fc20004	lw	r2,4(r30)
  723  00001768  20410001	addi	r1,r2,#1
  724  0000176c  00011020	add	r2,r0,r1
  725  00001770  afc20004	sw	4(r30),r2
  726  00001774          	L27_LF2:
  727  00001774  8fc2fff4	lw	r2,-12(r30)
  728  00001778  20410001	addi	r1,r2,#1
  729  0000177c  00011020	add	r2,r0,r1
  730  00001780  afc2fff4	sw	-12(r30),r2
  731  00001784  0bffff64	j	L25_LF2
  732  00001788  54000000	nop; delay slot nop
  733  0000178c          	L26_LF2:
  734  0000178c  8fc1fff4	lw	r1,-12(r30)
  735  00001790  8fc20008	lw	r2,8(r30)
  736  00001794  00220828	seq	r1,r1,r2
  737  00001798  10200018	beqz	r1,L32_LF2
  738  0000179c  54000000	nop; delay slot nop
  739  000017a0  20010000	addi	r1,r0,#0
  740  000017a4  08000054	j	L24_LF2
  741  000017a8  54000000	nop; delay slot nop
  742  000017ac  0800004c	j	L33_LF2
  743  000017b0  54000000	nop; delay slot nop
  744  000017b4          	L32_LF2:
  745  000017b4  8fc20000	lw	r2,(r30)
  746  000017b8  90410000	lbu	r1,(r2)
  747  000017bc  8fc20004	lw	r2,4(r30)
  748  000017c0  90430000	lbu	r3,(r2)
  749  000017c4  00230822	sub	r1,r1,r3
  750  000017c8  74220000	sgei	r2,r1,#0
  751  000017cc  10400020	beqz	r2,L34_LF2
  752  000017d0  54000000	nop; delay slot nop
  753  000017d4  8fc10000	lw	r1,(r30)
  754  000017d8  8fc20004	lw	r2,4(r30)
  755  000017dc  90210000	lbu	r1,(r1)
  756  000017e0  90420000	lbu	r2,(r2)
  757  000017e4  00220829	sne	r1,r1,r2
  758  000017e8  08000008	j	L35_LF2
  759  000017ec  54000000	nop; delay slot nop
  760  000017f0          	L34_LF2:
  761  000017f0  2001ffff	addi	r1,r0,#-1
  762  000017f4          	L35_LF2:
  763  000017f4  08000004	j	L24_LF2
  764  000017f8  54000000	nop; delay slot nop
  765  000017fc          	L33_LF2:
  766  000017fc          	L24_LF2:
  767  000017fc  8fa20000	lw	r2,0(r29)
  768  00001800  8fa30004	lw	r3,4(r29)
  769  00001804  8fdffff8	lw	r31,-8(r30)
  770  00001808  001ee820	add	r29,r0,r30
  771  0000180c  8fdefffc	lw	r30,-4(r30)
  772  00001810  4be00000	jr	r31
  773  00001814  54000000	nop
  774  00001818          	.endproc _dstrncmp
  775  00001818          	.align 2
  776  00001818          	.proc _dstrlen
  777  00001818          	.global _dstrlen
  778  00001818          	_dstrlen:
  779                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  780  00001818  afbefffc	sw	-4(r29),r30; push fp
  781  0000181c  001df020	add	r30,r0,r29; fp = sp
  782  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  783  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  784  00001828  afa20000	sw	0(r29),r2
  785  0000182c  20010000	addi	r1,r0,#0
  786  00001830  afc1fff4	sw	-12(r30),r1
  787  00001834          	L37_LF2:
  788  00001834  8fc10000	lw	r1,(r30)
  789  00001838  20220001	addi	r2,r1,#1
  790  0000183c  afc20000	sw	(r30),r2
  791  00001840  90210000	lbu	r1,(r1)
  792  00001844  64220000	snei	r2,r1,#0
  793  00001848  1440000c	bnez	r2,L39_LF2
  794  0000184c  54000000	nop; delay slot nop
  795  00001850  0800001c	j	L38_LF2
  796  00001854  54000000	nop; delay slot nop
  797  00001858          	L39_LF2:
  798  00001858  8fc2fff4	lw	r2,-12(r30)
  799  0000185c  20410001	addi	r1,r2,#1
  800  00001860  00011020	add	r2,r0,r1
  801  00001864  afc2fff4	sw	-12(r30),r2
  802  00001868  0bffffc8	j	L37_LF2
  803  0000186c  54000000	nop; delay slot nop
  804  00001870          	L38_LF2:
  805  00001870  8fc1fff4	lw	r1,-12(r30)
  806  00001874  08000004	j	L36_LF2
  807  00001878  54000000	nop; delay slot nop
  808  0000187c          	L36_LF2:
  809  0000187c  8fa20000	lw	r2,0(r29)
  810  00001880  8fdffff8	lw	r31,-8(r30)
  811  00001884  001ee820	add	r29,r0,r30
  812  00001888  8fdefffc	lw	r30,-4(r30)
  813  0000188c  4be00000	jr	r31
  814  00001890  54000000	nop
  815  00001894          	.endproc _dstrlen
  816  00001894          	.align 2
  817  00001894          	.proc _dstrstr
  818  00001894          	.global _dstrstr
  819  00001894          	_dstrstr:
  820                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  821  00001894  afbefffc	sw	-4(r29),r30; push fp
  822  00001898  001df020	add	r30,r0,r29; fp = sp
  823  0000189c  afbffff8	sw	-8(r29),r31; push ret addr
  824  000018a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  825  000018a4  afa20000	sw	0(r29),r2
  826  000018a8  23bdfff8	addi	r29,r29,#-8
  827  000018ac  001d0820	add	r1,r0,r29
  828  000018b0  8fc20004	lw	r2,4(r30)
  829  000018b4  ac220000	sw	(r1),r2
  830  000018b8  0fffff5c	jal	_dstrlen
  831  000018bc  54000000	nop; delay slot nop
  832  000018c0  23bd0008	addi	r29,r29,#8
  833  000018c4  afc1fff4	sw	-12(r30),r1
  834  000018c8          	L41_LF2:
  835  000018c8  8fc10000	lw	r1,(r30)
  836  000018cc  90220000	lbu	r2,(r1)
  837  000018d0  64410000	snei	r1,r2,#0
  838  000018d4  1420000c	bnez	r1,L43_LF2
  839  000018d8  54000000	nop; delay slot nop
  840  000018dc  08000060	j	L42_LF2
  841  000018e0  54000000	nop; delay slot nop
  842  000018e4          	L43_LF2:
  843  000018e4  23bdfff0	addi	r29,r29,#-16
  844  000018e8  001d0820	add	r1,r0,r29
  845  000018ec  8fc20000	lw	r2,(r30)
  846  000018f0  ac220000	sw	(r1),r2
  847  000018f4  8fc20004	lw	r2,4(r30)
  848  000018f8  ac220004	sw	4(r1),r2
  849  000018fc  8fc2fff4	lw	r2,-12(r30)
  850  00001900  ac220008	sw	8(r1),r2
  851  00001904  0ffffdc0	jal	_dstrncmp
  852  00001908  54000000	nop; delay slot nop
  853  0000190c  23bd0010	addi	r29,r29,#16
  854  00001910  64220000	snei	r2,r1,#0
  855  00001914  14400010	bnez	r2,L44_LF2
  856  00001918  54000000	nop; delay slot nop
  857  0000191c  8fc10000	lw	r1,(r30)
  858  00001920  08000028	j	L40_LF2
  859  00001924  54000000	nop; delay slot nop
  860  00001928          	L44_LF2:
  861  00001928  8fc20000	lw	r2,(r30)
  862  0000192c  20410001	addi	r1,r2,#1
  863  00001930  00011020	add	r2,r0,r1
  864  00001934  afc20000	sw	(r30),r2
  865  00001938  0bffff8c	j	L41_LF2
  866  0000193c  54000000	nop; delay slot nop
  867  00001940          	L42_LF2:
  868  00001940  20010000	addi	r1,r0,#0
  869  00001944  08000004	j	L40_LF2
  870  00001948  54000000	nop; delay slot nop
  871  0000194c          	L40_LF2:
  872  0000194c  8fa20000	lw	r2,0(r29)
  873  00001950  8fdffff8	lw	r31,-8(r30)
  874  00001954  001ee820	add	r29,r0,r30
  875  00001958  8fdefffc	lw	r30,-4(r30)
  876  0000195c  4be00000	jr	r31
  877  00001960  54000000	nop
  878  00001964          	.endproc _dstrstr
  879  00001964          	.align 2
  880  00001964          	.proc _dmindex
  881  00001964          	.global _dmindex
  882  00001964          	_dmindex:
  883                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  884  00001964  afbefffc	sw	-4(r29),r30; push fp
  885  00001968  001df020	add	r30,r0,r29; fp = sp
  886  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  887  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  888  00001974  afa20000	sw	0(r29),r2
  889  00001978  54000000	nop
  890  0000197c          	L46_LF2:
  891  0000197c  8fc10000	lw	r1,(r30)
  892  00001980  90220000	lbu	r2,(r1)
  893  00001984  64410000	snei	r1,r2,#0
  894  00001988  1420000c	bnez	r1,L48_LF2
  895  0000198c  54000000	nop; delay slot nop
  896  00001990  08000070	j	L47_LF2
  897  00001994  54000000	nop; delay slot nop
  898  00001998          	L48_LF2:
  899  00001998  8fc10004	lw	r1,4(r30)
  900  0000199c  afc1fff4	sw	-12(r30),r1
  901  000019a0          	L49_LF2:
  902  000019a0  8fc1fff4	lw	r1,-12(r30)
  903  000019a4  90220000	lbu	r2,(r1)
  904  000019a8  64410000	snei	r1,r2,#0
  905  000019ac  1420000c	bnez	r1,L52_LF2
  906  000019b0  54000000	nop; delay slot nop
  907  000019b4  08000044	j	L50_LF2
  908  000019b8  54000000	nop; delay slot nop
  909  000019bc          	L52_LF2:
  910  000019bc  8fc10000	lw	r1,(r30)
  911  000019c0  8fc2fff4	lw	r2,-12(r30)
  912  000019c4  90210000	lbu	r1,(r1)
  913  000019c8  90420000	lbu	r2,(r2)
  914  000019cc  00220828	seq	r1,r1,r2
  915  000019d0  10200010	beqz	r1,L51_LF2
  916  000019d4  54000000	nop; delay slot nop
  917  000019d8  8fc10000	lw	r1,(r30)
  918  000019dc  08000030	j	L45_LF2
  919  000019e0  54000000	nop; delay slot nop
  920  000019e4          	L53_LF2:
  921  000019e4          	L51_LF2:
  922  000019e4  8fc2fff4	lw	r2,-12(r30)
  923  000019e8  20410001	addi	r1,r2,#1
  924  000019ec  00011020	add	r2,r0,r1
  925  000019f0  afc2fff4	sw	-12(r30),r2
  926  000019f4  0bffffa8	j	L49_LF2
  927  000019f8  54000000	nop; delay slot nop
  928  000019fc          	L50_LF2:
  929  000019fc  0bffff7c	j	L46_LF2
  930  00001a00  54000000	nop; delay slot nop
  931  00001a04          	L47_LF2:
  932  00001a04  20010000	addi	r1,r0,#0
  933  00001a08  08000004	j	L45_LF2
  934  00001a0c  54000000	nop; delay slot nop
  935  00001a10          	L45_LF2:
  936  00001a10  8fa20000	lw	r2,0(r29)
  937  00001a14  8fdffff8	lw	r31,-8(r30)
  938  00001a18  001ee820	add	r29,r0,r30
  939  00001a1c  8fdefffc	lw	r30,-4(r30)
  940  00001a20  4be00000	jr	r31
  941  00001a24  54000000	nop
  942  00001a28          	.endproc _dmindex
  943  00001a28          	.align 2
  944  00001a28          	.proc _dindex
  945  00001a28          	.global _dindex
  946  00001a28          	_dindex:
  947                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  948  00001a28  afbefffc	sw	-4(r29),r30; push fp
  949  00001a2c  001df020	add	r30,r0,r29; fp = sp
  950  00001a30  afbffff8	sw	-8(r29),r31; push ret addr
  951  00001a34  2fbd0010	subui	r29,r29,#16; alloc local storage
  952  00001a38  afa20000	sw	0(r29),r2
  953  00001a3c  54000000	nop
  954  00001a40          	L55_LF2:
  955  00001a40  8fc10000	lw	r1,(r30)
  956  00001a44  90220000	lbu	r2,(r1)
  957  00001a48  64410000	snei	r1,r2,#0
  958  00001a4c  1420000c	bnez	r1,L57_LF2
  959  00001a50  54000000	nop; delay slot nop
  960  00001a54  08000040	j	L56_LF2
  961  00001a58  54000000	nop; delay slot nop
  962  00001a5c          	L57_LF2:
  963  00001a5c  8fc10000	lw	r1,(r30)
  964  00001a60  90220000	lbu	r2,(r1)
  965  00001a64  8fc10004	lw	r1,4(r30)
  966  00001a68  00411028	seq	r2,r2,r1
  967  00001a6c  10400010	beqz	r2,L58_LF2
  968  00001a70  54000000	nop; delay slot nop
  969  00001a74  8fc10000	lw	r1,(r30)
  970  00001a78  08000028	j	L54_LF2
  971  00001a7c  54000000	nop; delay slot nop
  972  00001a80          	L58_LF2:
  973  00001a80  8fc20000	lw	r2,(r30)
  974  00001a84  20410001	addi	r1,r2,#1
  975  00001a88  00011020	add	r2,r0,r1
  976  00001a8c  afc20000	sw	(r30),r2
  977  00001a90  0bffffac	j	L55_LF2
  978  00001a94  54000000	nop; delay slot nop
  979  00001a98          	L56_LF2:
  980  00001a98  20010000	addi	r1,r0,#0
  981  00001a9c  08000004	j	L54_LF2
  982  00001aa0  54000000	nop; delay slot nop
  983  00001aa4          	L54_LF2:
  984  00001aa4  8fa20000	lw	r2,0(r29)
  985  00001aa8  8fdffff8	lw	r31,-8(r30)
  986  00001aac  001ee820	add	r29,r0,r30
  987  00001ab0  8fdefffc	lw	r30,-4(r30)
  988  00001ab4  4be00000	jr	r31
  989  00001ab8  54000000	nop
  990  00001abc          	.endproc _dindex
  991  00001abc          	.align 2
  992  00001abc          	.proc _ditoa
  993  00001abc          	.global _ditoa
  994  00001abc          	_ditoa:
  995                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  996  00001abc  afbefffc	sw	-4(r29),r30; push fp
  997  00001ac0  001df020	add	r30,r0,r29; fp = sp
  998  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
  999  00001ac8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1000  00001acc  afa20000	sw	0(r29),r2
 1001  00001ad0  afa30004	sw	4(r29),r3
 1002  00001ad4  8fc10000	lw	r1,(r30)
 1003  00001ad8  68220000	slti	r2,r1,#0
 1004  00001adc  1040002c	beqz	r2,L60_LF2
 1005  00001ae0  54000000	nop; delay slot nop
 1006  00001ae4  8fc10004	lw	r1,4(r30)
 1007  00001ae8  20220001	addi	r2,r1,#1
 1008  00001aec  afc20004	sw	4(r30),r2
 1009  00001af0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1010  00001af4  a0220000	sb	(r1),r2
 1011  00001af8  8fc10000	lw	r1,(r30)
 1012  00001afc  00011022	sub	r2,r0,r1
 1013  00001b00  afc20000	sw	(r30),r2
 1014  00001b04  08000118	j	L61_LF2
 1015  00001b08  54000000	nop; delay slot nop
 1016  00001b0c          	L60_LF2:
 1017  00001b0c  8fc10000	lw	r1,(r30)
 1018  00001b10  64220000	snei	r2,r1,#0
 1019  00001b14  14400020	bnez	r2,L62_LF2
 1020  00001b18  54000000	nop; delay slot nop
 1021  00001b1c  8fc10004	lw	r1,4(r30)
 1022  00001b20  20220001	addi	r2,r1,#1
 1023  00001b24  afc20004	sw	4(r30),r2
 1024  00001b28  20020030	addi	r2,r0,(#0x30)&0xff
 1025  00001b2c  a0220000	sb	(r1),r2
 1026  00001b30  080000ec	j	L61_LF2
 1027  00001b34  54000000	nop; delay slot nop
 1028  00001b38          	L62_LF2:
 1029  00001b38  20010001	addi	r1,r0,#1
 1030  00001b3c  afc1fff4	sw	-12(r30),r1
 1031  00001b40          	L64_LF2:
 1032  00001b40  8fc1fff4	lw	r1,-12(r30)
 1033  00001b44  8fc20000	lw	r2,(r30)
 1034  00001b48  0022082c	sle	r1,r1,r2
 1035  00001b4c  1420000c	bnez	r1,L66_LF2
 1036  00001b50  54000000	nop; delay slot nop
 1037  00001b54  08000024	j	L65_LF2
 1038  00001b58  54000000	nop; delay slot nop
 1039  00001b5c          	L67_LF2:
 1040  00001b5c          	L66_LF2:
 1041  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1042  00001b60  00011820	add	r3,r0,r1
 1043  00001b64  50620002	slli	r2,r3,#0x2
 1044  00001b68  00411020	add	r2,r2,r1
 1045  00001b6c  50410001	slli	r1,r2,#0x1
 1046  00001b70  afc1fff4	sw	-12(r30),r1
 1047  00001b74  0bffffc8	j	L64_LF2
 1048  00001b78  54000000	nop; delay slot nop
 1049  00001b7c          	L65_LF2:
 1050  00001b7c  54000000	nop
 1051  00001b80          	L68_LF2:
 1052  00001b80  8fc1fff4	lw	r1,-12(r30)
 1053  00001b84  2002000a	addi	r2,r0,#10
 1054  00001b88  00200035	movi2fp	f0,r1
 1055  00001b8c  00400835	movi2fp	f1,r2
 1056  00001b90  0401000f	div	f0,f0,f1
 1057  00001b94  00000834	movfp2i	r1,f0
 1058  00001b98  afc1fff4	sw	-12(r30),r1
 1059  00001b9c  8fc10004	lw	r1,4(r30)
 1060  00001ba0  20220001	addi	r2,r1,#1
 1061  00001ba4  afc20004	sw	4(r30),r2
 1062  00001ba8  8fc20000	lw	r2,(r30)
 1063  00001bac  8fc3fff4	lw	r3,-12(r30)
 1064  00001bb0  00400035	movi2fp	f0,r2
 1065  00001bb4  00600835	movi2fp	f1,r3
 1066  00001bb8  0401000f	div	f0,f0,f1
 1067  00001bbc  00001034	movfp2i	r2,f0
 1068  00001bc0  00021820	add	r3,r0,r2
 1069  00001bc4  20620030	addi	r2,r3,#48
 1070  00001bc8  a0220000	sb	(r1),r2
 1071  00001bcc  8fc10000	lw	r1,(r30)
 1072  00001bd0  8fc3fff4	lw	r3,-12(r30)
 1073  00001bd4  00200035	movi2fp	f0,r1
 1074  00001bd8  00600835	movi2fp	f1,r3
 1075  00001bdc  0401000f	div	f0,f0,f1
 1076  00001be0  00001034	movfp2i	r2,f0
 1077  00001be4  8fc3fff4	lw	r3,-12(r30)
 1078  00001be8  00400035	movi2fp	f0,r2
 1079  00001bec  00600835	movi2fp	f1,r3
 1080  00001bf0  0401000e	mult	f0,f0,f1
 1081  00001bf4  00001034	movfp2i	r2,f0
 1082  00001bf8  00220822	sub	r1,r1,r2
 1083  00001bfc  afc10000	sw	(r30),r1
 1084  00001c00          	L70_LF2:
 1085  00001c00  8fc1fff4	lw	r1,-12(r30)
 1086  00001c04  6c220001	sgti	r2,r1,#1
 1087  00001c08  1440000c	bnez	r2,L71_LF2
 1088  00001c0c  54000000	nop; delay slot nop
 1089  00001c10  0800000c	j	L61_LF2
 1090  00001c14  54000000	nop; delay slot nop
 1091  00001c18          	L71_LF2:
 1092  00001c18  0bffff64	j	L68_LF2
 1093  00001c1c  54000000	nop; delay slot nop
 1094  00001c20          	L69_LF2:
 1095  00001c20          	L63_LF2:
 1096  00001c20          	L61_LF2:
 1097  00001c20  8fc10004	lw	r1,4(r30)
 1098  00001c24  20020000	addi	r2,r0,(#0x0)&0xff
 1099  00001c28  a0220000	sb	(r1),r2
 1100  00001c2c          	L59_LF2:
 1101  00001c2c  8fa20000	lw	r2,0(r29)
 1102  00001c30  8fa30004	lw	r3,4(r29)
 1103  00001c34  8fdffff8	lw	r31,-8(r30)
 1104  00001c38  001ee820	add	r29,r0,r30
 1105  00001c3c  8fdefffc	lw	r30,-4(r30)
 1106  00001c40  4be00000	jr	r31
 1107  00001c44  54000000	nop
 1108  00001c48          	.endproc _ditoa
 1109  00001c48          	.align 2
 1110  00001c48          	.proc _dstrtol
 1111  00001c48          	.global _dstrtol
 1112  00001c48          	_dstrtol:
 1113                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1114  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1115  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1116  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1117  00001c54  2fbd0020	subui	r29,r29,#32; alloc local storage
 1118  00001c58  afa20000	sw	0(r29),r2
 1119  00001c5c  20010000	addi	r1,r0,#0
 1120  00001c60  afc1fff4	sw	-12(r30),r1
 1121  00001c64          	L73_LF2:
 1122  00001c64  8fc10000	lw	r1,(r30)
 1123  00001c68  90220000	lbu	r2,(r1)
 1124  00001c6c  60410020	seqi	r1,r2,#32
 1125  00001c70  14200034	bnez	r1,L75_LF2
 1126  00001c74  54000000	nop; delay slot nop
 1127  00001c78  8fc10000	lw	r1,(r30)
 1128  00001c7c  90220000	lbu	r2,(r1)
 1129  00001c80  60410009	seqi	r1,r2,#9
 1130  00001c84  14200020	bnez	r1,L75_LF2
 1131  00001c88  54000000	nop; delay slot nop
 1132  00001c8c  8fc10000	lw	r1,(r30)
 1133  00001c90  90220000	lbu	r2,(r1)
 1134  00001c94  6041000a	seqi	r1,r2,#10
 1135  00001c98  1420000c	bnez	r1,L75_LF2
 1136  00001c9c  54000000	nop; delay slot nop
 1137  00001ca0  0800001c	j	L74_LF2
 1138  00001ca4  54000000	nop; delay slot nop
 1139  00001ca8          	L75_LF2:
 1140  00001ca8  8fc20000	lw	r2,(r30)
 1141  00001cac  20410001	addi	r1,r2,#1
 1142  00001cb0  00011020	add	r2,r0,r1
 1143  00001cb4  afc20000	sw	(r30),r2
 1144  00001cb8  0bffffa8	j	L73_LF2
 1145  00001cbc  54000000	nop; delay slot nop
 1146  00001cc0          	L74_LF2:
 1147  00001cc0  8fc10004	lw	r1,4(r30)
 1148  00001cc4  64220000	snei	r2,r1,#0
 1149  00001cc8  10400010	beqz	r2,L76_LF2
 1150  00001ccc  54000000	nop; delay slot nop
 1151  00001cd0  8fc10004	lw	r1,4(r30)
 1152  00001cd4  8fc20000	lw	r2,(r30)
 1153  00001cd8  ac220000	sw	(r1),r2
 1154  00001cdc          	L76_LF2:
 1155  00001cdc  8fc10000	lw	r1,(r30)
 1156  00001ce0  90220000	lbu	r2,(r1)
 1157  00001ce4  64410000	snei	r1,r2,#0
 1158  00001ce8  14200010	bnez	r1,L77_LF2
 1159  00001cec  54000000	nop; delay slot nop
 1160  00001cf0  8fc1fff4	lw	r1,-12(r30)
 1161  00001cf4  08000294	j	L72_LF2
 1162  00001cf8  54000000	nop; delay slot nop
 1163  00001cfc          	L77_LF2:
 1164  00001cfc  8fc10000	lw	r1,(r30)
 1165  00001d00  90220000	lbu	r2,(r1)
 1166  00001d04  6041002d	seqi	r1,r2,#45
 1167  00001d08  10200024	beqz	r1,L78_LF2
 1168  00001d0c  54000000	nop; delay slot nop
 1169  00001d10  2001ffff	addi	r1,r0,#-1
 1170  00001d14  afc1ffec	sw	-20(r30),r1
 1171  00001d18  8fc20000	lw	r2,(r30)
 1172  00001d1c  20410001	addi	r1,r2,#1
 1173  00001d20  00011020	add	r2,r0,r1
 1174  00001d24  afc20000	sw	(r30),r2
 1175  00001d28  0800000c	j	L79_LF2
 1176  00001d2c  54000000	nop; delay slot nop
 1177  00001d30          	L78_LF2:
 1178  00001d30  20010001	addi	r1,r0,#1
 1179  00001d34  afc1ffec	sw	-20(r30),r1
 1180  00001d38          	L79_LF2:
 1181  00001d38  8fc10008	lw	r1,8(r30)
 1182  00001d3c  64220000	snei	r2,r1,#0
 1183  00001d40  14400090	bnez	r2,L80_LF2
 1184  00001d44  54000000	nop; delay slot nop
 1185  00001d48  8fc10000	lw	r1,(r30)
 1186  00001d4c  90220000	lbu	r2,(r1)
 1187  00001d50  60410030	seqi	r1,r2,#48
 1188  00001d54  10200074	beqz	r1,L81_LF2
 1189  00001d58  54000000	nop; delay slot nop
 1190  00001d5c  8fc20000	lw	r2,(r30)
 1191  00001d60  20410001	addi	r1,r2,#1
 1192  00001d64  00011020	add	r2,r0,r1
 1193  00001d68  afc20000	sw	(r30),r2
 1194  00001d6c  8fc10000	lw	r1,(r30)
 1195  00001d70  90220000	lbu	r2,(r1)
 1196  00001d74  60410078	seqi	r1,r2,#120
 1197  00001d78  14200020	bnez	r1,L83_LF2
 1198  00001d7c  54000000	nop; delay slot nop
 1199  00001d80  8fc10000	lw	r1,(r30)
 1200  00001d84  90220000	lbu	r2,(r1)
 1201  00001d88  60410058	seqi	r1,r2,#88
 1202  00001d8c  1420000c	bnez	r1,L83_LF2
 1203  00001d90  54000000	nop; delay slot nop
 1204  00001d94  08000024	j	L82_LF2
 1205  00001d98  54000000	nop; delay slot nop
 1206  00001d9c          	L83_LF2:
 1207  00001d9c  20010010	addi	r1,r0,#16
 1208  00001da0  afc10008	sw	8(r30),r1
 1209  00001da4  8fc20000	lw	r2,(r30)
 1210  00001da8  20410001	addi	r1,r2,#1
 1211  00001dac  00011020	add	r2,r0,r1
 1212  00001db0  afc20000	sw	(r30),r2
 1213  00001db4  0800000c	j	L84_LF2
 1214  00001db8  54000000	nop; delay slot nop
 1215  00001dbc          	L82_LF2:
 1216  00001dbc  20010008	addi	r1,r0,#8
 1217  00001dc0  afc10008	sw	8(r30),r1
 1218  00001dc4          	L84_LF2:
 1219  00001dc4  0800000c	j	L80_LF2
 1220  00001dc8  54000000	nop; delay slot nop
 1221  00001dcc          	L81_LF2:
 1222  00001dcc  2001000a	addi	r1,r0,#10
 1223  00001dd0  afc10008	sw	8(r30),r1
 1224  00001dd4          	L85_LF2:
 1225  00001dd4          	L80_LF2:
 1226  00001dd4  8fc10008	lw	r1,8(r30)
 1227  00001dd8  70220000	slei	r2,r1,#0
 1228  00001ddc  1440001c	bnez	r2,L87_LF2
 1229  00001de0  54000000	nop; delay slot nop
 1230  00001de4  8fc10008	lw	r1,8(r30)
 1231  00001de8  6c220010	sgti	r2,r1,#16
 1232  00001dec  1440000c	bnez	r2,L87_LF2
 1233  00001df0  54000000	nop; delay slot nop
 1234  00001df4  08000010	j	L86_LF2
 1235  00001df8  54000000	nop; delay slot nop
 1236  00001dfc          	L87_LF2:
 1237  00001dfc  8fc1fff4	lw	r1,-12(r30)
 1238  00001e00  08000188	j	L72_LF2
 1239  00001e04  54000000	nop; delay slot nop
 1240  00001e08          	L86_LF2:
 1241  00001e08  54000000	nop
 1242  00001e0c          	L88_LF2:
 1243  00001e0c  8fc10000	lw	r1,(r30)
 1244  00001e10  90220000	lbu	r2,(r1)
 1245  00001e14  6c41002f	sgtui	r1,r2,#47
 1246  00001e18  10200030	beqz	r1,L91_LF2
 1247  00001e1c  54000000	nop; delay slot nop
 1248  00001e20  8fc10000	lw	r1,(r30)
 1249  00001e24  90220000	lbu	r2,(r1)
 1250  00001e28  70410039	sleui	r1,r2,#57
 1251  00001e2c  1020001c	beqz	r1,L91_LF2
 1252  00001e30  54000000	nop; delay slot nop
 1253  00001e34  8fc10000	lw	r1,(r30)
 1254  00001e38  90220000	lbu	r2,(r1)
 1255  00001e3c  2041ffd0	addi	r1,r2,#-48
 1256  00001e40  afc1fff0	sw	-16(r30),r1
 1257  00001e44  0800008c	j	L92_LF2
 1258  00001e48  54000000	nop; delay slot nop
 1259  00001e4c          	L91_LF2:
 1260  00001e4c  8fc10000	lw	r1,(r30)
 1261  00001e50  90220000	lbu	r2,(r1)
 1262  00001e54  6c410060	sgtui	r1,r2,#96
 1263  00001e58  10200030	beqz	r1,L93_LF2
 1264  00001e5c  54000000	nop; delay slot nop
 1265  00001e60  8fc10000	lw	r1,(r30)
 1266  00001e64  90220000	lbu	r2,(r1)
 1267  00001e68  7041007a	sleui	r1,r2,#122
 1268  00001e6c  1020001c	beqz	r1,L93_LF2
 1269  00001e70  54000000	nop; delay slot nop
 1270  00001e74  8fc10000	lw	r1,(r30)
 1271  00001e78  90220000	lbu	r2,(r1)
 1272  00001e7c  2041ffa9	addi	r1,r2,#-87
 1273  00001e80  afc1fff0	sw	-16(r30),r1
 1274  00001e84  0800004c	j	L92_LF2
 1275  00001e88  54000000	nop; delay slot nop
 1276  00001e8c          	L93_LF2:
 1277  00001e8c  8fc10000	lw	r1,(r30)
 1278  00001e90  90220000	lbu	r2,(r1)
 1279  00001e94  6c410040	sgtui	r1,r2,#64
 1280  00001e98  10200030	beqz	r1,L95_LF2
 1281  00001e9c  54000000	nop; delay slot nop
 1282  00001ea0  8fc10000	lw	r1,(r30)
 1283  00001ea4  90220000	lbu	r2,(r1)
 1284  00001ea8  7041005a	sleui	r1,r2,#90
 1285  00001eac  1020001c	beqz	r1,L95_LF2
 1286  00001eb0  54000000	nop; delay slot nop
 1287  00001eb4  8fc10000	lw	r1,(r30)
 1288  00001eb8  90220000	lbu	r2,(r1)
 1289  00001ebc  2041ffc9	addi	r1,r2,#-55
 1290  00001ec0  afc1fff0	sw	-16(r30),r1
 1291  00001ec4  0800000c	j	L92_LF2
 1292  00001ec8  54000000	nop; delay slot nop
 1293  00001ecc          	L95_LF2:
 1294  00001ecc  200103e8	addi	r1,r0,#1000
 1295  00001ed0  afc1fff0	sw	-16(r30),r1
 1296  00001ed4          	L96_LF2:
 1297  00001ed4          	L94_LF2:
 1298  00001ed4          	L92_LF2:
 1299  00001ed4  8fc1fff0	lw	r1,-16(r30)
 1300  00001ed8  8fc20008	lw	r2,8(r30)
 1301  00001edc  0022082a	slt	r1,r1,r2
 1302  00001ee0  10200040	beqz	r1,L90_LF2
 1303  00001ee4  54000000	nop; delay slot nop
 1304  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1305  00001eec  8fc20008	lw	r2,8(r30)
 1306  00001ef0  00200035	movi2fp	f0,r1
 1307  00001ef4  00400835	movi2fp	f1,r2
 1308  00001ef8  0401000e	mult	f0,f0,f1
 1309  00001efc  00000834	movfp2i	r1,f0
 1310  00001f00  afc1fff4	sw	-12(r30),r1
 1311  00001f04  8fc1fff4	lw	r1,-12(r30)
 1312  00001f08  8fc2fff0	lw	r2,-16(r30)
 1313  00001f0c  00220820	add	r1,r1,r2
 1314  00001f10  afc1fff4	sw	-12(r30),r1
 1315  00001f14  8fc20000	lw	r2,(r30)
 1316  00001f18  20410001	addi	r1,r2,#1
 1317  00001f1c  00011020	add	r2,r0,r1
 1318  00001f20  afc20000	sw	(r30),r2
 1319  00001f24          	L97_LF2:
 1320  00001f24          	L90_LF2:
 1321  00001f24  8fc1fff0	lw	r1,-16(r30)
 1322  00001f28  8fc20008	lw	r2,8(r30)
 1323  00001f2c  0022082a	slt	r1,r1,r2
 1324  00001f30  1420000c	bnez	r1,L98_LF2
 1325  00001f34  54000000	nop; delay slot nop
 1326  00001f38  0800000c	j	L89_LF2
 1327  00001f3c  54000000	nop; delay slot nop
 1328  00001f40          	L98_LF2:
 1329  00001f40  0bfffec8	j	L88_LF2
 1330  00001f44  54000000	nop; delay slot nop
 1331  00001f48          	L89_LF2:
 1332  00001f48  8fc10004	lw	r1,4(r30)
 1333  00001f4c  64220000	snei	r2,r1,#0
 1334  00001f50  10400010	beqz	r2,L99_LF2
 1335  00001f54  54000000	nop; delay slot nop
 1336  00001f58  8fc10004	lw	r1,4(r30)
 1337  00001f5c  8fc20000	lw	r2,(r30)
 1338  00001f60  ac220000	sw	(r1),r2
 1339  00001f64          	L99_LF2:
 1340  00001f64  8fc1fff4	lw	r1,-12(r30)
 1341  00001f68  8fc2ffec	lw	r2,-20(r30)
 1342  00001f6c  00200035	movi2fp	f0,r1
 1343  00001f70  00400835	movi2fp	f1,r2
 1344  00001f74  0401000e	mult	f0,f0,f1
 1345  00001f78  00000834	movfp2i	r1,f0
 1346  00001f7c  afc1fff4	sw	-12(r30),r1
 1347  00001f80  8fc1fff4	lw	r1,-12(r30)
 1348  00001f84  08000004	j	L72_LF2
 1349  00001f88  54000000	nop; delay slot nop
 1350  00001f8c          	L72_LF2:
 1351  00001f8c  8fa20000	lw	r2,0(r29)
 1352  00001f90  8fdffff8	lw	r31,-8(r30)
 1353  00001f94  001ee820	add	r29,r0,r30
 1354  00001f98  8fdefffc	lw	r30,-4(r30)
 1355  00001f9c  4be00000	jr	r31
 1356  00001fa0  54000000	nop
 1357  00001fa4          	.endproc _dstrtol
 1358  00001fa4          	.align 2
 1359  00001fa4          	.proc _bcopy
 1360  00001fa4          	.global _bcopy
 1361  00001fa4          	_bcopy:
 1362                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1363  00001fa4  afbefffc	sw	-4(r29),r30; push fp
 1364  00001fa8  001df020	add	r30,r0,r29; fp = sp
 1365  00001fac  afbffff8	sw	-8(r29),r31; push ret addr
 1366  00001fb0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1367  00001fb4  afa20000	sw	0(r29),r2
 1368  00001fb8  afa30004	sw	4(r29),r3
 1369  00001fbc  54000000	nop
 1370  00001fc0          	L101_LF2:
 1371  00001fc0  8fc10008	lw	r1,8(r30)
 1372  00001fc4  2022ffff	addi	r2,r1,#-1
 1373  00001fc8  afc20008	sw	8(r30),r2
 1374  00001fcc  6c210000	sgti	r1,r1,#0
 1375  00001fd0  1420000c	bnez	r1,L103_LF2
 1376  00001fd4  54000000	nop; delay slot nop
 1377  00001fd8  0800002c	j	L102_LF2
 1378  00001fdc  54000000	nop; delay slot nop
 1379  00001fe0          	L103_LF2:
 1380  00001fe0  8fc10004	lw	r1,4(r30)
 1381  00001fe4  20220001	addi	r2,r1,#1
 1382  00001fe8  afc20004	sw	4(r30),r2
 1383  00001fec  8fc20000	lw	r2,(r30)
 1384  00001ff0  20430001	addi	r3,r2,#1
 1385  00001ff4  afc30000	sw	(r30),r3
 1386  00001ff8  80420000	lb	r2,(r2)
 1387  00001ffc  a0220000	sb	(r1),r2
 1388  00002000  0bffffbc	j	L101_LF2
 1389  00002004  54000000	nop; delay slot nop
 1390  00002008          	L102_LF2:
 1391  00002008          	L100_LF2:
 1392  00002008  8fa20000	lw	r2,0(r29)
 1393  0000200c  8fa30004	lw	r3,4(r29)
 1394  00002010  8fdffff8	lw	r31,-8(r30)
 1395  00002014  001ee820	add	r29,r0,r30
 1396  00002018  8fdefffc	lw	r30,-4(r30)
 1397  0000201c  4be00000	jr	r31
 1398  00002020  54000000	nop
 1399  00002024          	.endproc _bcopy
 1400  00002024          	.align 2
 1401  00002024          	.proc _bzero
 1402  00002024          	.global _bzero
 1403  00002024          	_bzero:
 1404                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1405  00002024  afbefffc	sw	-4(r29),r30; push fp
 1406  00002028  001df020	add	r30,r0,r29; fp = sp
 1407  0000202c  afbffff8	sw	-8(r29),r31; push ret addr
 1408  00002030  2fbd0010	subui	r29,r29,#16; alloc local storage
 1409  00002034  afa20000	sw	0(r29),r2
 1410  00002038  54000000	nop
 1411  0000203c          	L105_LF2:
 1412  0000203c  8fc10004	lw	r1,4(r30)
 1413  00002040  2022ffff	addi	r2,r1,#-1
 1414  00002044  afc20004	sw	4(r30),r2
 1415  00002048  6c210000	sgti	r1,r1,#0
 1416  0000204c  1420000c	bnez	r1,L107_LF2
 1417  00002050  54000000	nop; delay slot nop
 1418  00002054  08000020	j	L106_LF2
 1419  00002058  54000000	nop; delay slot nop
 1420  0000205c          	L107_LF2:
 1421  0000205c  8fc10000	lw	r1,(r30)
 1422  00002060  20220001	addi	r2,r1,#1
 1423  00002064  afc20000	sw	(r30),r2
 1424  00002068  20020000	addi	r2,r0,(#0x0)&0xff
 1425  0000206c  a0220000	sb	(r1),r2
 1426  00002070  0bffffc8	j	L105_LF2
 1427  00002074  54000000	nop; delay slot nop
 1428  00002078          	L106_LF2:
 1429  00002078          	L104_LF2:
 1430  00002078  8fa20000	lw	r2,0(r29)
 1431  0000207c  8fdffff8	lw	r31,-8(r30)
 1432  00002080  001ee820	add	r29,r0,r30
 1433  00002084  8fdefffc	lw	r30,-4(r30)
 1434  00002088  4be00000	jr	r31
 1435  0000208c  54000000	nop
 1436  00002090          	.endproc _bzero
 1437  00002090          	.align 2
 1438  00002090          	.proc _min
 1439  00002090          	.global _min
 1440  00002090          	_min:
 1441                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1442  00002090  afbefffc	sw	-4(r29),r30; push fp
 1443  00002094  001df020	add	r30,r0,r29; fp = sp
 1444  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1445  0000209c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1446  000020a0  afa20000	sw	0(r29),r2
 1447  000020a4  afa30004	sw	4(r29),r3
 1448  000020a8  8fc10000	lw	r1,(r30)
 1449  000020ac  8fc20004	lw	r2,4(r30)
 1450  000020b0  0022182c	sle	r3,r1,r2
 1451  000020b4  14600008	bnez	r3,L109_LF2
 1452  000020b8  54000000	nop; delay slot nop
 1453  000020bc  8fc10004	lw	r1,4(r30)
 1454  000020c0          	L109_LF2:
 1455  000020c0  08000004	j	L108_LF2
 1456  000020c4  54000000	nop; delay slot nop
 1457  000020c8          	L108_LF2:
 1458  000020c8  8fa20000	lw	r2,0(r29)
 1459  000020cc  8fa30004	lw	r3,4(r29)
 1460  000020d0  8fdffff8	lw	r31,-8(r30)
 1461  000020d4  001ee820	add	r29,r0,r30
 1462  000020d8  8fdefffc	lw	r30,-4(r30)
 1463  000020dc  4be00000	jr	r31
 1464  000020e0  54000000	nop
 1465  000020e4          	.endproc _min
 1466                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1467                      ;;;
 1468                      ;;; Most of the traps are called in files from libtraps.
 1471  000020e4          	.align 2
 1472  000020e4          	.proc _exit
 1473  000020e4          	.global _exit
 1474  000020e4          	_exit:
 1475  000020e4  44000300	trap	#0x300
 1476  000020e8  4be00000	jr	r31
 1477  000020ec  54000000	nop
 1478  000020f0          	.endproc _exit
 1480                      ; for the benefit of gcc.
 1481  000020f0          	.proc ___main
 1482  000020f0          	.global ___main
 1483  000020f0          	___main:
 1484  000020f0  4be00000	jr	r31
 1485  000020f4  54000000	nop
 1486  000020f8          	.endproc ___main
 1487  000020f8          	.text
 1488  000020f8          	.global _etext
 1489  000020f8          	_etext:
 1490  000020f8          	.align 3
 1491  000020f8          	.data
 1492  000030e9          	.global _edata
 1493  000030e9          	_edata:
