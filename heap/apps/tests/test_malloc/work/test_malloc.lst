 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 513
    4                      ; Text size: 5452
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test %d: filling the heap to the brim\n\n\000"
   85  00003038  2025643a	
   85  0000303c  2066696c	
   85  00003040  6c696e67	
   85  00003044  20746865	
   85  00003048  20686561	
   85  0000304c  7020746f	
   85  00003050  20746865	
   85  00003054  20627269	
   85  00003058  6d0a0a00	
   86  0000305c          	.align 2
   87  0000305c          	LC2_LF0:
   88  0000305c  54657374	.ascii "Test %d: freeing full heap\n\n\000"
   88  00003060  2025643a	
   88  00003064  20667265	
   88  00003068  65696e67	
   88  0000306c  2066756c	
   88  00003070  6c206865	
   88  00003074  61700a0a	
   88  00003078  00      	
   89  00003079          	.align 2
   90  0000307c          	LC3_LF0:
   91  0000307c  54657374	.ascii "Test %d: making holes\n\n\000"
   91  00003080  2025643a	
   91  00003084  206d616b	
   91  00003088  696e6720	
   91  0000308c  686f6c65	
   91  00003090  730a0a00	
   92  00003094          	.align 2
   93  00003094          	LC4_LF0:
   94  00003094  73657665	.ascii "seven %d: allocating 40, 60, 129, and 128 bytes!\n\000"
   94  00003098  6e202564	
   94  0000309c  3a20616c	
   94  000030a0  6c6f6361	
   94  000030a4  74696e67	
   94  000030a8  2034302c	
   94  000030ac  2036302c	
   94  000030b0  20313239	
   94  000030b4  2c20616e	
   94  000030b8  64203132	
   94  000030bc  38206279	
   94  000030c0  74657321	
   94  000030c4  0a00    	
   95  000030c6          	.align 2
   96  000030c8          	LC5_LF0:
   97  000030c8  34302061	.ascii "40 addr: %d\n\000"
   97  000030cc  6464723a	
   97  000030d0  2025640a	
   97  000030d4  00      	
   98  000030d5          	.align 2
   99  000030d8          	LC6_LF0:
  100  000030d8  36302061	.ascii "60 addr: %d\n\000"
  100  000030dc  6464723a	
  100  000030e0  2025640a	
  100  000030e4  00      	
  101  000030e5          	.align 2
  102  000030e8          	LC7_LF0:
  103  000030e8  31323920	.ascii "129 addr: %d\n\000"
  103  000030ec  61646472	
  103  000030f0  3a202564	
  103  000030f4  0a00    	
  104  000030f6          	.align 2
  105  000030f8          	LC8_LF0:
  106  000030f8  31323820	.ascii "128 addr: %d\n\000"
  106  000030fc  61646472	
  106  00003100  3a202564	
  106  00003104  0a00    	
  107  00003106          	.align 2
  108  00003108          	LC9_LF0:
  109  00003108  48656c6c	.ascii "Hello world!\000"
  109  0000310c  6f20776f	
  109  00003110  726c6421	
  109  00003114  00      	
  110  00003115          	.align 2
  111  00003118          	LC10_LF0:
  112  00003118  48656c6c	.ascii "Hello world printed from heap memory: %s\n\000"
  112  0000311c  6f20776f	
  112  00003120  726c6420	
  112  00003124  7072696e	
  112  00003128  74656420	
  112  0000312c  66726f6d	
  112  00003130  20686561	
  112  00003134  70206d65	
  112  00003138  6d6f7279	
  112  0000313c  3a202573	
  112  00003140  0a00    	
  113  00003142          	.align 2
  114  00003144          	LC11_LF0:
  115  00003144  666f7274	.ascii "forty\n\000"
  115  00003148  790a00  	
  116  0000314b          	.align 2
  117  0000314c          	LC12_LF0:
  118  0000314c  73697874	.ascii "sixty\n\000"
  118  00003150  790a00  	
  119  00003153          	.align 2
  120  00003154          	LC13_LF0:
  121  00003154  53747269	.ascii "String in 40: %s\000"
  121  00003158  6e672069	
  121  0000315c  6e203430	
  121  00003160  3a202573	
  121  00003164  00      	
  122  00003165          	.align 2
  123  00003168          	LC14_LF0:
  124  00003168  53747269	.ascii "String in 60: %s\000"
  124  0000316c  6e672069	
  124  00003170  6e203630	
  124  00003174  3a202573	
  124  00003178  00      	
  125  00003179          	.align 2
  126  0000317c          	LC15_LF0:
  127  0000317c  46726565	.ascii "Freeing all the allocations\n\000"
  127  00003180  696e6720	
  127  00003184  616c6c20	
  127  00003188  74686520	
  127  0000318c  616c6c6f	
  127  00003190  63617469	
  127  00003194  6f6e730a	
  127  00003198  00      	
  128  00003199          	.align 2
  129  0000319c          	LC16_LF0:
  130  0000319c  6d667265	.ascii "mfree failed!\n\000"
  130  000031a0  65206661	
  130  000031a4  696c6564	
  130  000031a8  210a00  	
  131  000031ab          	.align 2
  132  000031ac          	LC17_LF0:
  133  000031ac  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  133  000031b0  6f5f776f	
  133  000031b4  726c6420	
  133  000031b8  28256429	
  133  000031bc  3a204261	
  133  000031c0  64207365	
  133  000031c4  6d617068	
  133  000031c8  6f726520	
  133  000031cc  735f7072	
  133  000031d0  6f63735f	
  133  000031d4  636f6d70	
  133  000031d8  6c657465	
  133  000031dc  64202825	
  133  000031e0  6429210a	
  133  000031e4  00      	
  134  000031e5          	.align 2
  135  000031e8          	LC18_LF0:
  136  000031e8  74657374	.ascii "test_malloc (%d): Done!\n\000"
  136  000031ec  5f6d616c	
  136  000031f0  6c6f6320	
  136  000031f4  28256429	
  136  000031f8  3a20446f	
  136  000031fc  6e65210a	
  136  00003200  00      	
  137  00003201          	.text
  138  000010d4          	.align 2
  139  000010d4          	.proc _main
  140  000010d4          	.global _main
  141  000010d4          	_main:
  142                      ;  Function 'main'; 512 bytes of locals, 0 regs to save.
  143  000010d4  afbefffc	sw	-4(r29),r30; push fp
  144  000010d8  001df020	add	r30,r0,r29; fp = sp
  145  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  146  000010e0  2fbd0208	subui	r29,r29,#520; alloc local storage
  147  000010e4  8fc20000	lw	r2,(r30)
  148  000010e8  8fc30004	lw	r3,4(r30)
  149  000010ec  0c001454	jal	___main
  150  000010f0  54000000	nop; not filled.
  151  000010f4  64410003	snei	r1,r2,#3
  152  000010f8  10200028	beqz	r1,L14_LF0
  153  000010fc  54000000	nop; not filled.
  154  00001100  23bdfff8	addi	r29,r29,#-8
  155  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  156  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  157  0000110c  afa70000	sw	(r29),r7
  158  00001110  0c000570	jal	_Printf
  159  00001114  54000000	nop; not filled.
  160  00001118  0c000670	jal	_Exit
  161  0000111c  54000000	nop; not filled.
  162  00001120  23bd0008	addi	r29,r29,#8
  163  00001124          	L14_LF0:
  164  00001124  23bdfff0	addi	r29,r29,#-16
  165  00001128  8c670004	lw	r7,4(r3)
  166  0000112c  afa70000	sw	(r29),r7
  167  00001130  20070000	addi	r7,r0,#0
  168  00001134  afa70004	sw	4(r29),r7
  169  00001138  2007000a	addi	r7,r0,#10
  170  0000113c  afa70008	sw	8(r29),r7
  171  00001140  0c000f04	jal	_dstrtol
  172  00001144  54000000	nop; not filled.
  173  00001148  00013020	add	r6,r0,r1
  174  0000114c  8c630008	lw	r3,8(r3)
  175  00001150  afa30000	sw	(r29),r3
  176  00001154  20070000	addi	r7,r0,#0
  177  00001158  afa70004	sw	4(r29),r7
  178  0000115c  2007000a	addi	r7,r0,#10
  179  00001160  afa70008	sw	8(r29),r7
  180  00001164  0c000ee0	jal	_dstrtol
  181  00001168  54000000	nop; not filled.
  182  0000116c  00011020	add	r2,r0,r1
  183  00001170  23bd0010	addi	r29,r29,#16
  184  00001174  60410002	seqi	r1,r2,#2
  185  00001178  102000ac	beqz	r1,L15_LF0
  186  0000117c  54000000	nop; not filled.
  187  00001180  23bdfff8	addi	r29,r29,#-8
  188  00001184  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  189  00001188  24e73034	addui	r7,r7,(LC1_LF0)&0xffff
  190  0000118c  afa70000	sw	(r29),r7
  191  00001190  afa20004	sw	4(r29),r2
  192  00001194  0c0004ec	jal	_Printf
  193  00001198  54000000	nop; not filled.
  194  0000119c  23bd0008	addi	r29,r29,#8
  195  000011a0  23c2fff8	addi	r2,r30,#-8
  196  000011a4  23c301f4	addi	r3,r30,#500
  197  000011a8          	L19_LF0:
  198  000011a8  23bdfff8	addi	r29,r29,#-8
  199  000011ac  20070020	addi	r7,r0,#32
  200  000011b0  afa70000	sw	(r29),r7
  201  000011b4  0c0005e0	jal	_malloc
  202  000011b8  54000000	nop; not filled.
  203  000011bc  ac41fe00	sw	-512(r2),r1
  204  000011c0  23bd0008	addi	r29,r29,#8
  205  000011c4  20420004	addi	r2,r2,#4
  206  000011c8  0043082c	sle	r1,r2,r3
  207  000011cc  1420ffd8	bnez	r1,L19_LF0
  208  000011d0  54000000	nop; not filled.
  209  000011d4  23bdfff8	addi	r29,r29,#-8
  210  000011d8  20070001	addi	r7,r0,#1
  211  000011dc  afa70000	sw	(r29),r7
  212  000011e0  0c0005b4	jal	_malloc
  213  000011e4  54000000	nop; not filled.
  214  000011e8  20020000	addi	r2,r0,#0
  215  000011ec  23bd0008	addi	r29,r29,#8
  216  000011f0  23c3fff8	addi	r3,r30,#-8
  217  000011f4          	L24_LF0:
  218  000011f4  23bdfff8	addi	r29,r29,#-8
  219  000011f8  8c67fe00	lw	r7,-512(r3)
  220  000011fc  afa70000	sw	(r29),r7
  221  00001200  0c00059c	jal	_mfree
  222  00001204  54000000	nop; not filled.
  223  00001208  23bd0008	addi	r29,r29,#8
  224  0000120c  20630004	addi	r3,r3,#4
  225  00001210  20420001	addi	r2,r2,#1
  226  00001214  7041007f	slei	r1,r2,#127
  227  00001218  1020039c	beqz	r1,L26_LF0
  228  0000121c  54000000	nop; not filled.
  229  00001220  0bffffd0	j	L24_LF0
  230  00001224  54000000	nop; not filled.
  231  00001228          	L15_LF0:
  232  00001228  60410001	seqi	r1,r2,#1
  233  0000122c  1020005c	beqz	r1,L27_LF0
  234  00001230  54000000	nop; not filled.
  235  00001234  23bdfff8	addi	r29,r29,#-8
  236  00001238  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  237  0000123c  24e7305c	addui	r7,r7,(LC2_LF0)&0xffff
  238  00001240  afa70000	sw	(r29),r7
  239  00001244  afa20004	sw	4(r29),r2
  240  00001248  0c000438	jal	_Printf
  241  0000124c  54000000	nop; not filled.
  242  00001250  20071000	addi	r7,r0,#4096
  243  00001254  afa70000	sw	(r29),r7
  244  00001258  0c00053c	jal	_malloc
  245  0000125c  54000000	nop; not filled.
  246  00001260  afc1fdf8	sw	-520(r30),r1
  247  00001264  afa10000	sw	(r29),r1
  248  00001268  0c000534	jal	_mfree
  249  0000126c  54000000	nop; not filled.
  250  00001270  20070002	addi	r7,r0,#2
  251  00001274  afa70000	sw	(r29),r7
  252  00001278  0c00051c	jal	_malloc
  253  0000127c  54000000	nop; not filled.
  254  00001280  afc1fdfc	sw	-516(r30),r1
  255  00001284  0800032c	j	L37_LF0
  256  00001288  54000000	nop; not filled.
  257  0000128c          	L27_LF0:
  258  0000128c  60410005	seqi	r1,r2,#5
  259  00001290  102000b4	beqz	r1,L29_LF0
  260  00001294  54000000	nop; not filled.
  261  00001298  23bdfff8	addi	r29,r29,#-8
  262  0000129c  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  263  000012a0  24e7307c	addui	r7,r7,(LC3_LF0)&0xffff
  264  000012a4  afa70000	sw	(r29),r7
  265  000012a8  afa20004	sw	4(r29),r2
  266  000012ac  0c0003d4	jal	_Printf
  267  000012b0  54000000	nop; not filled.
  268  000012b4  20070020	addi	r7,r0,#32
  269  000012b8  afa70000	sw	(r29),r7
  270  000012bc  0c0004d8	jal	_malloc
  271  000012c0  54000000	nop; not filled.
  272  000012c4  afc1fdf8	sw	-520(r30),r1
  273  000012c8  20070040	addi	r7,r0,#64
  274  000012cc  afa70000	sw	(r29),r7
  275  000012d0  0c0004c4	jal	_malloc
  276  000012d4  54000000	nop; not filled.
  277  000012d8  afc1fdfc	sw	-516(r30),r1
  278  000012dc  afa70000	sw	(r29),r7
  279  000012e0  0c0004b4	jal	_malloc
  280  000012e4  54000000	nop; not filled.
  281  000012e8  afc1fe00	sw	-512(r30),r1
  282  000012ec  20070080	addi	r7,r0,#128
  283  000012f0  afa70000	sw	(r29),r7
  284  000012f4  0c0004a0	jal	_malloc
  285  000012f8  54000000	nop; not filled.
  286  000012fc  afc1fe04	sw	-508(r30),r1
  287  00001300  8fc7fdf8	lw	r7,-520(r30)
  288  00001304  afa70000	sw	(r29),r7
  289  00001308  0c000494	jal	_mfree
  290  0000130c  54000000	nop; not filled.
  291  00001310  8fc7fdfc	lw	r7,-516(r30)
  292  00001314  afa70000	sw	(r29),r7
  293  00001318  0c000484	jal	_mfree
  294  0000131c  54000000	nop; not filled.
  295  00001320  8fc7fe00	lw	r7,-512(r30)
  296  00001324  afa70000	sw	(r29),r7
  297  00001328  0c000474	jal	_mfree
  298  0000132c  54000000	nop; not filled.
  299  00001330  8fc7fe04	lw	r7,-508(r30)
  300  00001334  afa70000	sw	(r29),r7
  301  00001338  0c000464	jal	_mfree
  302  0000133c  54000000	nop; not filled.
  303  00001340  08000270	j	L37_LF0
  304  00001344  54000000	nop; not filled.
  305  00001348          	L29_LF0:
  306  00001348  64410000	snei	r1,r2,#0
  307  0000134c  14200268	bnez	r1,L26_LF0
  308  00001350  54000000	nop; not filled.
  309  00001354  0c000338	jal	_getpid
  310  00001358  54000000	nop; not filled.
  311  0000135c  23bdfff8	addi	r29,r29,#-8
  312  00001360  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  313  00001364  24e73094	addui	r7,r7,(LC4_LF0)&0xffff
  314  00001368  afa70000	sw	(r29),r7
  315  0000136c  afa10004	sw	4(r29),r1
  316  00001370  0c000310	jal	_Printf
  317  00001374  54000000	nop; not filled.
  318  00001378  20070028	addi	r7,r0,#40
  319  0000137c  afa70000	sw	(r29),r7
  320  00001380  0c000414	jal	_malloc
  321  00001384  54000000	nop; not filled.
  322  00001388  00011020	add	r2,r0,r1
  323  0000138c  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  324  00001390  24e730c8	addui	r7,r7,(LC5_LF0)&0xffff
  325  00001394  afa70000	sw	(r29),r7
  326  00001398  afa20004	sw	4(r29),r2
  327  0000139c  0c0002e4	jal	_Printf
  328  000013a0  54000000	nop; not filled.
  329  000013a4  2007003c	addi	r7,r0,#60
  330  000013a8  afa70000	sw	(r29),r7
  331  000013ac  0c0003e8	jal	_malloc
  332  000013b0  54000000	nop; not filled.
  333  000013b4  00011820	add	r3,r0,r1
  334  000013b8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  335  000013bc  24e730d8	addui	r7,r7,(LC6_LF0)&0xffff
  336  000013c0  afa70000	sw	(r29),r7
  337  000013c4  afa30004	sw	4(r29),r3
  338  000013c8  0c0002b8	jal	_Printf
  339  000013cc  54000000	nop; not filled.
  340  000013d0  20070081	addi	r7,r0,#129
  341  000013d4  afa70000	sw	(r29),r7
  342  000013d8  0c0003bc	jal	_malloc
  343  000013dc  54000000	nop; not filled.
  344  000013e0  00012020	add	r4,r0,r1
  345  000013e4  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  346  000013e8  24e730e8	addui	r7,r7,(LC7_LF0)&0xffff
  347  000013ec  afa70000	sw	(r29),r7
  348  000013f0  afa40004	sw	4(r29),r4
  349  000013f4  0c00028c	jal	_Printf
  350  000013f8  54000000	nop; not filled.
  351  000013fc  20070080	addi	r7,r0,#128
  352  00001400  afa70000	sw	(r29),r7
  353  00001404  0c000390	jal	_malloc
  354  00001408  54000000	nop; not filled.
  355  0000140c  00012820	add	r5,r0,r1
  356  00001410  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  357  00001414  24e730f8	addui	r7,r7,(LC8_LF0)&0xffff
  358  00001418  afa70000	sw	(r29),r7
  359  0000141c  afa50004	sw	4(r29),r5
  360  00001420  0c000260	jal	_Printf
  361  00001424  54000000	nop; not filled.
  362  00001428  afa40000	sw	(r29),r4
  363  0000142c  3c010000	lhi	r1,((LC9_LF0)>>16)&0xffff
  364  00001430  24213108	addui	r1,r1,(LC9_LF0)&0xffff
  365  00001434  afa10004	sw	4(r29),r1
  366  00001438  0c0004bc	jal	_dstrcpy
  367  0000143c  54000000	nop; not filled.
  368  00001440  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  369  00001444  24e73118	addui	r7,r7,(LC10_LF0)&0xffff
  370  00001448  afa70000	sw	(r29),r7
  371  0000144c  afa40004	sw	4(r29),r4
  372  00001450  0c000230	jal	_Printf
  373  00001454  54000000	nop; not filled.
  374  00001458  afa20000	sw	(r29),r2
  375  0000145c  3c010000	lhi	r1,((LC11_LF0)>>16)&0xffff
  376  00001460  24213144	addui	r1,r1,(LC11_LF0)&0xffff
  377  00001464  afa10004	sw	4(r29),r1
  378  00001468  0c00048c	jal	_dstrcpy
  379  0000146c  54000000	nop; not filled.
  380  00001470  afa30000	sw	(r29),r3
  381  00001474  3c010000	lhi	r1,((LC12_LF0)>>16)&0xffff
  382  00001478  2421314c	addui	r1,r1,(LC12_LF0)&0xffff
  383  0000147c  afa10004	sw	4(r29),r1
  384  00001480  0c000474	jal	_dstrcpy
  385  00001484  54000000	nop; not filled.
  386  00001488  3c070000	lhi	r7,((LC13_LF0)>>16)&0xffff
  387  0000148c  24e73154	addui	r7,r7,(LC13_LF0)&0xffff
  388  00001490  afa70000	sw	(r29),r7
  389  00001494  afa20004	sw	4(r29),r2
  390  00001498  0c0001e8	jal	_Printf
  391  0000149c  54000000	nop; not filled.
  392  000014a0  3c070000	lhi	r7,((LC14_LF0)>>16)&0xffff
  393  000014a4  24e73168	addui	r7,r7,(LC14_LF0)&0xffff
  394  000014a8  afa70000	sw	(r29),r7
  395  000014ac  afa30004	sw	4(r29),r3
  396  000014b0  0c0001d0	jal	_Printf
  397  000014b4  54000000	nop; not filled.
  398  000014b8  3c070000	lhi	r7,((LC15_LF0)>>16)&0xffff
  399  000014bc  24e7317c	addui	r7,r7,(LC15_LF0)&0xffff
  400  000014c0  afa70000	sw	(r29),r7
  401  000014c4  0c0001bc	jal	_Printf
  402  000014c8  54000000	nop; not filled.
  403  000014cc  afa20000	sw	(r29),r2
  404  000014d0  0c0002cc	jal	_mfree
  405  000014d4  54000000	nop; not filled.
  406  000014d8  23bd0008	addi	r29,r29,#8
  407  000014dc  68210000	slti	r1,r1,#0
  408  000014e0  10200020	beqz	r1,L32_LF0
  409  000014e4  54000000	nop; not filled.
  410  000014e8  23bdfff8	addi	r29,r29,#-8
  411  000014ec  3c070000	lhi	r7,((LC16_LF0)>>16)&0xffff
  412  000014f0  24e7319c	addui	r7,r7,(LC16_LF0)&0xffff
  413  000014f4  afa70000	sw	(r29),r7
  414  000014f8  0c000188	jal	_Printf
  415  000014fc  54000000	nop; not filled.
  416  00001500  23bd0008	addi	r29,r29,#8
  417  00001504          	L32_LF0:
  418  00001504  23bdfff8	addi	r29,r29,#-8
  419  00001508  afa30000	sw	(r29),r3
  420  0000150c  0c000290	jal	_mfree
  421  00001510  54000000	nop; not filled.
  422  00001514  23bd0008	addi	r29,r29,#8
  423  00001518  68210000	slti	r1,r1,#0
  424  0000151c  10200020	beqz	r1,L33_LF0
  425  00001520  54000000	nop; not filled.
  426  00001524  23bdfff8	addi	r29,r29,#-8
  427  00001528  3c070000	lhi	r7,((LC16_LF0)>>16)&0xffff
  428  0000152c  24e7319c	addui	r7,r7,(LC16_LF0)&0xffff
  429  00001530  afa70000	sw	(r29),r7
  430  00001534  0c00014c	jal	_Printf
  431  00001538  54000000	nop; not filled.
  432  0000153c  23bd0008	addi	r29,r29,#8
  433  00001540          	L33_LF0:
  434  00001540  23bdfff8	addi	r29,r29,#-8
  435  00001544  afa40000	sw	(r29),r4
  436  00001548  0c000254	jal	_mfree
  437  0000154c  54000000	nop; not filled.
  438  00001550  23bd0008	addi	r29,r29,#8
  439  00001554  68210000	slti	r1,r1,#0
  440  00001558  10200020	beqz	r1,L34_LF0
  441  0000155c  54000000	nop; not filled.
  442  00001560  23bdfff8	addi	r29,r29,#-8
  443  00001564  3c070000	lhi	r7,((LC16_LF0)>>16)&0xffff
  444  00001568  24e7319c	addui	r7,r7,(LC16_LF0)&0xffff
  445  0000156c  afa70000	sw	(r29),r7
  446  00001570  0c000110	jal	_Printf
  447  00001574  54000000	nop; not filled.
  448  00001578  23bd0008	addi	r29,r29,#8
  449  0000157c          	L34_LF0:
  450  0000157c  23bdfff8	addi	r29,r29,#-8
  451  00001580  afa50000	sw	(r29),r5
  452  00001584  0c000218	jal	_mfree
  453  00001588  54000000	nop; not filled.
  454  0000158c  23bd0008	addi	r29,r29,#8
  455  00001590  68210000	slti	r1,r1,#0
  456  00001594  10200020	beqz	r1,L26_LF0
  457  00001598  54000000	nop; not filled.
  458  0000159c  23bdfff8	addi	r29,r29,#-8
  459  000015a0  3c070000	lhi	r7,((LC16_LF0)>>16)&0xffff
  460  000015a4  24e7319c	addui	r7,r7,(LC16_LF0)&0xffff
  461  000015a8  afa70000	sw	(r29),r7
  462  000015ac  0c0000d4	jal	_Printf
  463  000015b0  54000000	nop; not filled.
  464  000015b4          	L37_LF0:
  465  000015b4  23bd0008	addi	r29,r29,#8
  466  000015b8          	L26_LF0:
  467  000015b8  23bdfff8	addi	r29,r29,#-8
  468  000015bc  afa60000	sw	(r29),r6
  469  000015c0  0c000114	jal	_sem_signal
  470  000015c4  54000000	nop; not filled.
  471  000015c8  23bd0008	addi	r29,r29,#8
  472  000015cc  64210001	snei	r1,r1,#1
  473  000015d0  10200038	beqz	r1,L36_LF0
  474  000015d4  54000000	nop; not filled.
  475  000015d8  0c0000b4	jal	_getpid
  476  000015dc  54000000	nop; not filled.
  477  000015e0  23bdfff0	addi	r29,r29,#-16
  478  000015e4  3c070000	lhi	r7,((LC17_LF0)>>16)&0xffff
  479  000015e8  24e731ac	addui	r7,r7,(LC17_LF0)&0xffff
  480  000015ec  afa70000	sw	(r29),r7
  481  000015f0  afa10004	sw	4(r29),r1
  482  000015f4  afa60008	sw	8(r29),r6
  483  000015f8  0c000088	jal	_Printf
  484  000015fc  54000000	nop; not filled.
  485  00001600  0c000188	jal	_Exit
  486  00001604  54000000	nop; not filled.
  487  00001608  23bd0010	addi	r29,r29,#16
  488  0000160c          	L36_LF0:
  489  0000160c  0c000080	jal	_getpid
  490  00001610  54000000	nop; not filled.
  491  00001614  23bdfff8	addi	r29,r29,#-8
  492  00001618  3c070000	lhi	r7,((LC18_LF0)>>16)&0xffff
  493  0000161c  24e731e8	addui	r7,r7,(LC18_LF0)&0xffff
  494  00001620  afa70000	sw	(r29),r7
  495  00001624  afa10004	sw	4(r29),r1
  496  00001628  0c000058	jal	_Printf
  497  0000162c  54000000	nop; not filled.
  498  00001630  23bd0008	addi	r29,r29,#8
  499  00001634  0c000f00	jal	_exit
  500  00001638  54000000	nop
  501  0000163c          	.endproc _main
  502                      ;;;
  503                      ;;; Stub functions for DLX traps.
  504                      ;;;
  505                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  506                      ;;;
  507                      ;;; The traps such as Open and Close
  508                      ;;; (note the capital letters) are for use by user programs.  The traps
  509                      ;;; with names such as open and close (lower case) are for use by the OS.
  510                      ;;;
  513  0000163c          	.align 2
  515                      ;;; The following are the traps to be used by user-level programs
  516                      ;;;
  518  0000163c          	.align 2
  519  0000163c          	.proc _Open
  520  0000163c          	.global _Open
  521  0000163c          	_Open:
  522                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  523                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  524                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  525  0000163c  44000213	trap	#0x213
  526  00001640  4be00000	jr	r31
  527  00001644  54000000	nop
  528  00001648          	.endproc _Open
  530  00001648          	.proc _Close
  531  00001648          	.global _Close
  532  00001648          	_Close:
  533  00001648  44000214	trap	#0x214
  534  0000164c  4be00000	jr	r31
  535  00001650  54000000	nop
  536  00001654          	.endproc _Close
  538  00001654          	.proc _Read
  539  00001654          	.global _Read
  540  00001654          	_Read:
  541  00001654  44000210	trap	#0x210
  542  00001658  4be00000	jr	r31
  543  0000165c  54000000	nop
  544  00001660          	.endproc _Read
  546  00001660          	.proc _Write
  547  00001660          	.global _Write
  548  00001660          	_Write:
  549  00001660  44000211	trap	#0x211
  550  00001664  4be00000	jr	r31
  551  00001668  54000000	nop
  552  0000166c          	.endproc _Write
  554  0000166c          	.proc _Lseek
  555  0000166c          	.global _Lseek
  556  0000166c          	_Lseek:
  557  0000166c  44000212	trap	#0x212
  558  00001670  4be00000	jr	r31
  559  00001674  54000000	nop
  560  00001678          	.endproc _Lseek
  562  00001678          	.proc _Putchar
  563  00001678          	.global _Putchar
  564  00001678          	_Putchar:
  565  00001678  44000280	trap	#0x280
  566  0000167c  4be00000	jr	r31
  567  00001680  54000000	nop
  568  00001684          	.endproc _Putchar
  570  00001684          	.proc _Printf
  571  00001684          	.global _Printf
  572  00001684          	_Printf:
  573  00001684  44000201	trap	#0x201
  574  00001688  4be00000	jr	r31
  575  0000168c  54000000	nop
  576  00001690          	.endproc _Printf
  578  00001690          	.proc _getpid
  579  00001690          	.global _getpid
  580  00001690          	_getpid:
  581  00001690  44000431	trap	#0x431
  582  00001694  4be00000	jr	r31
  583  00001698  54000000	nop
  584  0000169c          	.endproc _getpid
  586  0000169c          	.proc _process_create
  587  0000169c          	.global _process_create
  588  0000169c          	_process_create:
  589  0000169c  44000432	trap	#0x432
  590  000016a0  4be00000	jr	r31
  591  000016a4  54000000	nop
  592  000016a8          	.endproc _process_create
  594  000016a8          	.proc _shmget
  595  000016a8          	.global _shmget
  596  000016a8          	_shmget:
  597  000016a8  44000440	trap	#0x440
  598  000016ac  4be00000	jr	r31
  599  000016b0  54000000	nop
  600  000016b4          	.endproc _shmget
  602  000016b4          	.proc _shmat
  603  000016b4          	.global _shmat
  604  000016b4          	_shmat:
  605  000016b4  44000441	trap	#0x441
  606  000016b8  4be00000	jr	r31
  607  000016bc  54000000	nop
  608  000016c0          	.endproc _shmat
  610  000016c0          	.proc _sem_create
  611  000016c0          	.global _sem_create
  612  000016c0          	_sem_create:
  613  000016c0  44000450	trap	#0x450
  614  000016c4  4be00000	jr	r31
  615  000016c8  54000000	nop
  616  000016cc          	.endproc _sem_create
  618  000016cc          	.proc _sem_wait
  619  000016cc          	.global _sem_wait
  620  000016cc          	_sem_wait:
  621  000016cc  44000451	trap	#0x451
  622  000016d0  4be00000	jr	r31
  623  000016d4  54000000	nop
  624  000016d8          	.endproc _sem_wait
  626  000016d8          	.proc _sem_signal
  627  000016d8          	.global _sem_signal
  628  000016d8          	_sem_signal:
  629  000016d8  44000452	trap	#0x452
  630  000016dc  4be00000	jr	r31
  631  000016e0  54000000	nop
  632  000016e4          	.endproc _sem_signal
  634  000016e4          	.proc _lock_create
  635  000016e4          	.global _lock_create
  636  000016e4          	_lock_create:
  637  000016e4  44000453	trap	#0x453
  638  000016e8  4be00000	jr	r31
  639  000016ec  54000000	nop
  640  000016f0          	.endproc _lock_create
  642  000016f0          	.proc _lock_acquire
  643  000016f0          	.global _lock_acquire
  644  000016f0          	_lock_acquire:
  645  000016f0  44000454	trap	#0x454
  646  000016f4  4be00000	jr	r31
  647  000016f8  54000000	nop
  648  000016fc          	.endproc _lock_acquire
  650  000016fc          	.proc _lock_release
  651  000016fc          	.global _lock_release
  652  000016fc          	_lock_release:
  653  000016fc  44000455	trap	#0x455
  654  00001700  4be00000	jr	r31
  655  00001704  54000000	nop
  656  00001708          	.endproc _lock_release
  658  00001708          	.proc _cond_create
  659  00001708          	.global _cond_create
  660  00001708          	_cond_create:
  661  00001708  44000456	trap	#0x456
  662  0000170c  4be00000	jr	r31
  663  00001710  54000000	nop
  664  00001714          	.endproc _cond_create
  666  00001714          	.proc _cond_wait
  667  00001714          	.global _cond_wait
  668  00001714          	_cond_wait:
  669  00001714  44000457	trap	#0x457
  670  00001718  4be00000	jr	r31
  671  0000171c  54000000	nop
  672  00001720          	.endproc _cond_wait
  674  00001720          	.proc _cond_signal
  675  00001720          	.global _cond_signal
  676  00001720          	_cond_signal:
  677  00001720  44000458	trap	#0x458
  678  00001724  4be00000	jr	r31
  679  00001728  54000000	nop
  680  0000172c          	.endproc _cond_signal
  682  0000172c          	.proc _cond_broadcast
  683  0000172c          	.global _cond_broadcast
  684  0000172c          	_cond_broadcast:
  685  0000172c  44000459	trap	#0x459
  686  00001730  4be00000	jr	r31
  687  00001734  54000000	nop
  688  00001738          	.endproc _cond_broadcast
  690  00001738          	.proc _mbox_create
  691  00001738          	.global _mbox_create
  692  00001738          	_mbox_create:
  693  00001738  44000460	trap	#0x460
  694  0000173c  4be00000	jr	r31
  695  00001740  54000000	nop
  696  00001744          	.endproc _mbox_create
  698  00001744          	.proc _mbox_open
  699  00001744          	.global _mbox_open
  700  00001744          	_mbox_open:
  701  00001744  44000461	trap	#0x461
  702  00001748  4be00000	jr	r31
  703  0000174c  54000000	nop
  704  00001750          	.endproc _mbox_open
  706  00001750          	.proc _mbox_close
  707  00001750          	.global _mbox_close
  708  00001750          	_mbox_close:
  709  00001750  44000462	trap	#0x462
  710  00001754  4be00000	jr	r31
  711  00001758  54000000	nop
  712  0000175c          	.endproc _mbox_close
  714  0000175c          	.proc _mbox_send
  715  0000175c          	.global _mbox_send
  716  0000175c          	_mbox_send:
  717  0000175c  44000463	trap	#0x463
  718  00001760  4be00000	jr	r31
  719  00001764  54000000	nop
  720  00001768          	.endproc _mbox_send
  722  00001768          	.proc _mbox_recv
  723  00001768          	.global _mbox_recv
  724  00001768          	_mbox_recv:
  725  00001768  44000464	trap	#0x464
  726  0000176c  4be00000	jr	r31
  727  00001770  54000000	nop
  728  00001774          	.endproc _mbox_recv
  730  00001774          	.proc _sleep
  731  00001774          	.global _sleep
  732  00001774          	_sleep:
  733  00001774  44000465	trap	#0x465
  734  00001778  4be00000	jr	r31
  735  0000177c  54000000	nop
  736  00001780          	.endproc _sleep
  738  00001780          	.proc _yield
  739  00001780          	.global _yield
  740  00001780          	_yield:
  741  00001780  44000466	trap	#0x466
  742  00001784  4be00000	jr	r31
  743  00001788  54000000	nop
  744  0000178c          	.endproc _yield
  747  0000178c          	.proc _Exit
  748  0000178c          	.global _Exit
  749  0000178c          	_Exit:
  750  0000178c  44000500	trap	#0x500
  751  00001790  4be00000	jr	r31
  752  00001794  54000000	nop
  753  00001798          	.endproc _Exit
  756  00001798          	.proc _malloc
  757  00001798          	.global _malloc
  758  00001798          	_malloc:
  759  00001798  44000467	trap	#0x467
  760  0000179c  4be00000	jr	r31
  761  000017a0          	.endproc _malloc
  764  000017a0          	.proc _mfree
  765  000017a0          	.global _mfree
  766  000017a0          	_mfree:
  767  000017a0  44000468	trap	#0x468
  768  000017a4  4be00000	jr	r31
  769  000017a8          	.endproc _mfree
  770                      ; Compiled by GCC
  772  000017a8          	.align 2
  773  000017a8          	.proc _isspace
  774  000017a8          	.global _isspace
  775  000017a8          	_isspace:
  776                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  777  000017a8  afbefffc	sw	-4(r29),r30; push fp
  778  000017ac  001df020	add	r30,r0,r29; fp = sp
  779  000017b0  afbffff8	sw	-8(r29),r31; push ret addr
  780  000017b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  781  000017b8  afa20000	sw	0(r29),r2
  782  000017bc  afa30004	sw	4(r29),r3
  783  000017c0  afa40008	sw	8(r29),r4
  784  000017c4  83c20003	lb	r2,3(r30)
  785  000017c8  20010000	addi	r1,r0,#0
  786  000017cc  304300ff	andi	r3,r2,#0x00ff
  787  000017d0  60640020	seqi	r4,r3,#32
  788  000017d4  1480002c	bnez	r4,L3_LF2
  789  000017d8  54000000	nop; delay slot nop
  790  000017dc  304300ff	andi	r3,r2,#0x00ff
  791  000017e0  60640009	seqi	r4,r3,#9
  792  000017e4  1480001c	bnez	r4,L3_LF2
  793  000017e8  54000000	nop; delay slot nop
  794  000017ec  304300ff	andi	r3,r2,#0x00ff
  795  000017f0  6064000a	seqi	r4,r3,#10
  796  000017f4  1480000c	bnez	r4,L3_LF2
  797  000017f8  54000000	nop; delay slot nop
  798  000017fc  08000008	j	L2_LF2
  799  00001800  54000000	nop; delay slot nop
  800  00001804          	L3_LF2:
  801  00001804  20010001	addi	r1,r0,#1
  802  00001808          	L2_LF2:
  803  00001808  08000004	j	L1_LF2
  804  0000180c  54000000	nop; delay slot nop
  805  00001810          	L1_LF2:
  806  00001810  8fa20000	lw	r2,0(r29)
  807  00001814  8fa30004	lw	r3,4(r29)
  808  00001818  8fa40008	lw	r4,8(r29)
  809  0000181c  8fdffff8	lw	r31,-8(r30)
  810  00001820  001ee820	add	r29,r0,r30
  811  00001824  8fdefffc	lw	r30,-4(r30)
  812  00001828  4be00000	jr	r31
  813  0000182c  54000000	nop
  814  00001830          	.endproc _isspace
  815  00001830          	.align 2
  816  00001830          	.proc _isxdigit
  817  00001830          	.global _isxdigit
  818  00001830          	_isxdigit:
  819                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  820  00001830  afbefffc	sw	-4(r29),r30; push fp
  821  00001834  001df020	add	r30,r0,r29; fp = sp
  822  00001838  afbffff8	sw	-8(r29),r31; push ret addr
  823  0000183c  2fbd0018	subui	r29,r29,#24; alloc local storage
  824  00001840  afa20000	sw	0(r29),r2
  825  00001844  afa30004	sw	4(r29),r3
  826  00001848  afa40008	sw	8(r29),r4
  827  0000184c  83c20003	lb	r2,3(r30)
  828  00001850  20010000	addi	r1,r0,#0
  829  00001854  304300ff	andi	r3,r2,#0x00ff
  830  00001858  6c64002f	sgtui	r4,r3,#47
  831  0000185c  1080001c	beqz	r4,L7_LF2
  832  00001860  54000000	nop; delay slot nop
  833  00001864  304300ff	andi	r3,r2,#0x00ff
  834  00001868  70640039	sleui	r4,r3,#57
  835  0000186c  1480005c	bnez	r4,L6_LF2
  836  00001870  54000000	nop; delay slot nop
  837  00001874  08000004	j	L7_LF2
  838  00001878  54000000	nop; delay slot nop
  839  0000187c          	L7_LF2:
  840  0000187c  304300ff	andi	r3,r2,#0x00ff
  841  00001880  6c640060	sgtui	r4,r3,#96
  842  00001884  1080001c	beqz	r4,L8_LF2
  843  00001888  54000000	nop; delay slot nop
  844  0000188c  304300ff	andi	r3,r2,#0x00ff
  845  00001890  70640066	sleui	r4,r3,#102
  846  00001894  14800034	bnez	r4,L6_LF2
  847  00001898  54000000	nop; delay slot nop
  848  0000189c  08000004	j	L8_LF2
  849  000018a0  54000000	nop; delay slot nop
  850  000018a4          	L8_LF2:
  851  000018a4  304300ff	andi	r3,r2,#0x00ff
  852  000018a8  6c640040	sgtui	r4,r3,#64
  853  000018ac  10800020	beqz	r4,L5_LF2
  854  000018b0  54000000	nop; delay slot nop
  855  000018b4  304300ff	andi	r3,r2,#0x00ff
  856  000018b8  70640041	sleui	r4,r3,#65
  857  000018bc  1480000c	bnez	r4,L6_LF2
  858  000018c0  54000000	nop; delay slot nop
  859  000018c4  08000008	j	L5_LF2
  860  000018c8  54000000	nop; delay slot nop
  861  000018cc          	L6_LF2:
  862  000018cc  20010001	addi	r1,r0,#1
  863  000018d0          	L5_LF2:
  864  000018d0  08000004	j	L4_LF2
  865  000018d4  54000000	nop; delay slot nop
  866  000018d8          	L4_LF2:
  867  000018d8  8fa20000	lw	r2,0(r29)
  868  000018dc  8fa30004	lw	r3,4(r29)
  869  000018e0  8fa40008	lw	r4,8(r29)
  870  000018e4  8fdffff8	lw	r31,-8(r30)
  871  000018e8  001ee820	add	r29,r0,r30
  872  000018ec  8fdefffc	lw	r30,-4(r30)
  873  000018f0  4be00000	jr	r31
  874  000018f4  54000000	nop
  875  000018f8          	.endproc _isxdigit
  876  000018f8          	.align 2
  877  000018f8          	.proc _dstrcpy
  878  000018f8          	.global _dstrcpy
  879  000018f8          	_dstrcpy:
  880                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  881  000018f8  afbefffc	sw	-4(r29),r30; push fp
  882  000018fc  001df020	add	r30,r0,r29; fp = sp
  883  00001900  afbffff8	sw	-8(r29),r31; push ret addr
  884  00001904  2fbd0018	subui	r29,r29,#24; alloc local storage
  885  00001908  afa20000	sw	0(r29),r2
  886  0000190c  afa30004	sw	4(r29),r3
  887  00001910  8fc10000	lw	r1,(r30)
  888  00001914  afc1fff4	sw	-12(r30),r1
  889  00001918          	L10_LF2:
  890  00001918  8fc10000	lw	r1,(r30)
  891  0000191c  20220001	addi	r2,r1,#1
  892  00001920  afc20000	sw	(r30),r2
  893  00001924  8fc20004	lw	r2,4(r30)
  894  00001928  20430001	addi	r3,r2,#1
  895  0000192c  afc30004	sw	4(r30),r3
  896  00001930  80420000	lb	r2,(r2)
  897  00001934  a0220000	sb	(r1),r2
  898  00001938  a3c2fff3	sb	-13(r30),r2
  899  0000193c          	L12_LF2:
  900  0000193c  93c1fff3	lbu	r1,-13(r30)
  901  00001940  64220000	snei	r2,r1,#0
  902  00001944  1440000c	bnez	r2,L13_LF2
  903  00001948  54000000	nop; delay slot nop
  904  0000194c  0800000c	j	L11_LF2
  905  00001950  54000000	nop; delay slot nop
  906  00001954          	L13_LF2:
  907  00001954  0bffffc0	j	L10_LF2
  908  00001958  54000000	nop; delay slot nop
  909  0000195c          	L11_LF2:
  910  0000195c  8fc1fff4	lw	r1,-12(r30)
  911  00001960  08000004	j	L9_LF2
  912  00001964  54000000	nop; delay slot nop
  913  00001968          	L9_LF2:
  914  00001968  8fa20000	lw	r2,0(r29)
  915  0000196c  8fa30004	lw	r3,4(r29)
  916  00001970  8fdffff8	lw	r31,-8(r30)
  917  00001974  001ee820	add	r29,r0,r30
  918  00001978  8fdefffc	lw	r30,-4(r30)
  919  0000197c  4be00000	jr	r31
  920  00001980  54000000	nop
  921  00001984          	.endproc _dstrcpy
  922  00001984          	.align 2
  923  00001984          	.proc _dstrncpy
  924  00001984          	.global _dstrncpy
  925  00001984          	_dstrncpy:
  926                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  927  00001984  afbefffc	sw	-4(r29),r30; push fp
  928  00001988  001df020	add	r30,r0,r29; fp = sp
  929  0000198c  afbffff8	sw	-8(r29),r31; push ret addr
  930  00001990  2fbd0018	subui	r29,r29,#24; alloc local storage
  931  00001994  afa20000	sw	0(r29),r2
  932  00001998  afa30004	sw	4(r29),r3
  933  0000199c  8fc10000	lw	r1,(r30)
  934  000019a0  afc1fff4	sw	-12(r30),r1
  935  000019a4          	L15_LF2:
  936  000019a4  8fc10008	lw	r1,8(r30)
  937  000019a8  2022ffff	addi	r2,r1,#-1
  938  000019ac  afc20008	sw	8(r30),r2
  939  000019b0  70210000	slei	r1,r1,#0
  940  000019b4  1020000c	beqz	r1,L18_LF2
  941  000019b8  54000000	nop; delay slot nop
  942  000019bc  08000048	j	L16_LF2
  943  000019c0  54000000	nop; delay slot nop
  944  000019c4          	L18_LF2:
  945  000019c4  8fc10000	lw	r1,(r30)
  946  000019c8  20220001	addi	r2,r1,#1
  947  000019cc  afc20000	sw	(r30),r2
  948  000019d0  8fc20004	lw	r2,4(r30)
  949  000019d4  20430001	addi	r3,r2,#1
  950  000019d8  afc30004	sw	4(r30),r3
  951  000019dc  80420000	lb	r2,(r2)
  952  000019e0  a0220000	sb	(r1),r2
  953  000019e4  a3c2fff3	sb	-13(r30),r2
  954  000019e8          	L17_LF2:
  955  000019e8  93c1fff3	lbu	r1,-13(r30)
  956  000019ec  64220000	snei	r2,r1,#0
  957  000019f0  1440000c	bnez	r2,L19_LF2
  958  000019f4  54000000	nop; delay slot nop
  959  000019f8  0800000c	j	L16_LF2
  960  000019fc  54000000	nop; delay slot nop
  961  00001a00          	L19_LF2:
  962  00001a00  0bffffa0	j	L15_LF2
  963  00001a04  54000000	nop; delay slot nop
  964  00001a08          	L16_LF2:
  965  00001a08  8fc1fff4	lw	r1,-12(r30)
  966  00001a0c  08000004	j	L14_LF2
  967  00001a10  54000000	nop; delay slot nop
  968  00001a14          	L14_LF2:
  969  00001a14  8fa20000	lw	r2,0(r29)
  970  00001a18  8fa30004	lw	r3,4(r29)
  971  00001a1c  8fdffff8	lw	r31,-8(r30)
  972  00001a20  001ee820	add	r29,r0,r30
  973  00001a24  8fdefffc	lw	r30,-4(r30)
  974  00001a28  4be00000	jr	r31
  975  00001a2c  54000000	nop
  976  00001a30          	.endproc _dstrncpy
  977  00001a30          	.align 2
  978  00001a30          	.proc _dstrcat
  979  00001a30          	.global _dstrcat
  980  00001a30          	_dstrcat:
  981                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  982  00001a30  afbefffc	sw	-4(r29),r30; push fp
  983  00001a34  001df020	add	r30,r0,r29; fp = sp
  984  00001a38  afbffff8	sw	-8(r29),r31; push ret addr
  985  00001a3c  2fbd0018	subui	r29,r29,#24; alloc local storage
  986  00001a40  afa20000	sw	0(r29),r2
  987  00001a44  8fc10000	lw	r1,(r30)
  988  00001a48  afc1fff4	sw	-12(r30),r1
  989  00001a4c          	L21_LF2:
  990  00001a4c  8fc10000	lw	r1,(r30)
  991  00001a50  90220000	lbu	r2,(r1)
  992  00001a54  64410000	snei	r1,r2,#0
  993  00001a58  1420000c	bnez	r1,L23_LF2
  994  00001a5c  54000000	nop; delay slot nop
  995  00001a60  0800001c	j	L22_LF2
  996  00001a64  54000000	nop; delay slot nop
  997  00001a68          	L23_LF2:
  998  00001a68  8fc20000	lw	r2,(r30)
  999  00001a6c  20410001	addi	r1,r2,#1
 1000  00001a70  00011020	add	r2,r0,r1
 1001  00001a74  afc20000	sw	(r30),r2
 1002  00001a78  0bffffd0	j	L21_LF2
 1003  00001a7c  54000000	nop; delay slot nop
 1004  00001a80          	L22_LF2:
 1005  00001a80  23bdfff8	addi	r29,r29,#-8
 1006  00001a84  001d0820	add	r1,r0,r29
 1007  00001a88  8fc20000	lw	r2,(r30)
 1008  00001a8c  ac220000	sw	(r1),r2
 1009  00001a90  8fc20004	lw	r2,4(r30)
 1010  00001a94  ac220004	sw	4(r1),r2
 1011  00001a98  0ffffe5c	jal	_dstrcpy
 1012  00001a9c  54000000	nop; delay slot nop
 1013  00001aa0  23bd0008	addi	r29,r29,#8
 1014  00001aa4  8fc1fff4	lw	r1,-12(r30)
 1015  00001aa8  08000004	j	L20_LF2
 1016  00001aac  54000000	nop; delay slot nop
 1017  00001ab0          	L20_LF2:
 1018  00001ab0  8fa20000	lw	r2,0(r29)
 1019  00001ab4  8fdffff8	lw	r31,-8(r30)
 1020  00001ab8  001ee820	add	r29,r0,r30
 1021  00001abc  8fdefffc	lw	r30,-4(r30)
 1022  00001ac0  4be00000	jr	r31
 1023  00001ac4  54000000	nop
 1024  00001ac8          	.endproc _dstrcat
 1025  00001ac8          	.align 2
 1026  00001ac8          	.proc _dstrncmp
 1027  00001ac8          	.global _dstrncmp
 1028  00001ac8          	_dstrncmp:
 1029                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1030  00001ac8  afbefffc	sw	-4(r29),r30; push fp
 1031  00001acc  001df020	add	r30,r0,r29; fp = sp
 1032  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
 1033  00001ad4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1034  00001ad8  afa20000	sw	0(r29),r2
 1035  00001adc  afa30004	sw	4(r29),r3
 1036  00001ae0  54000000	nop
 1037  00001ae4  20010000	addi	r1,r0,#0
 1038  00001ae8  afc1fff4	sw	-12(r30),r1
 1039  00001aec          	L25_LF2:
 1040  00001aec  8fc1fff4	lw	r1,-12(r30)
 1041  00001af0  8fc20008	lw	r2,8(r30)
 1042  00001af4  0022082a	slt	r1,r1,r2
 1043  00001af8  1420000c	bnez	r1,L28_LF2
 1044  00001afc  54000000	nop; delay slot nop
 1045  00001b00  08000088	j	L26_LF2
 1046  00001b04  54000000	nop; delay slot nop
 1047  00001b08          	L28_LF2:
 1048  00001b08  8fc10004	lw	r1,4(r30)
 1049  00001b0c  90220000	lbu	r2,(r1)
 1050  00001b10  64410000	snei	r1,r2,#0
 1051  00001b14  14200018	bnez	r1,L29_LF2
 1052  00001b18  54000000	nop; delay slot nop
 1053  00001b1c  20010000	addi	r1,r0,#0
 1054  00001b20  080000d8	j	L24_LF2
 1055  00001b24  54000000	nop; delay slot nop
 1056  00001b28  08000028	j	L30_LF2
 1057  00001b2c  54000000	nop; delay slot nop
 1058  00001b30          	L29_LF2:
 1059  00001b30  8fc10000	lw	r1,(r30)
 1060  00001b34  8fc20004	lw	r2,4(r30)
 1061  00001b38  90210000	lbu	r1,(r1)
 1062  00001b3c  90420000	lbu	r2,(r2)
 1063  00001b40  00220829	sne	r1,r1,r2
 1064  00001b44  1020000c	beqz	r1,L30_LF2
 1065  00001b48  54000000	nop; delay slot nop
 1066  00001b4c  0800003c	j	L26_LF2
 1067  00001b50  54000000	nop; delay slot nop
 1068  00001b54          	L31_LF2:
 1069  00001b54          	L30_LF2:
 1070  00001b54  8fc20000	lw	r2,(r30)
 1071  00001b58  20410001	addi	r1,r2,#1
 1072  00001b5c  00011020	add	r2,r0,r1
 1073  00001b60  afc20000	sw	(r30),r2
 1074  00001b64  8fc20004	lw	r2,4(r30)
 1075  00001b68  20410001	addi	r1,r2,#1
 1076  00001b6c  00011020	add	r2,r0,r1
 1077  00001b70  afc20004	sw	4(r30),r2
 1078  00001b74          	L27_LF2:
 1079  00001b74  8fc2fff4	lw	r2,-12(r30)
 1080  00001b78  20410001	addi	r1,r2,#1
 1081  00001b7c  00011020	add	r2,r0,r1
 1082  00001b80  afc2fff4	sw	-12(r30),r2
 1083  00001b84  0bffff64	j	L25_LF2
 1084  00001b88  54000000	nop; delay slot nop
 1085  00001b8c          	L26_LF2:
 1086  00001b8c  8fc1fff4	lw	r1,-12(r30)
 1087  00001b90  8fc20008	lw	r2,8(r30)
 1088  00001b94  00220828	seq	r1,r1,r2
 1089  00001b98  10200018	beqz	r1,L32_LF2
 1090  00001b9c  54000000	nop; delay slot nop
 1091  00001ba0  20010000	addi	r1,r0,#0
 1092  00001ba4  08000054	j	L24_LF2
 1093  00001ba8  54000000	nop; delay slot nop
 1094  00001bac  0800004c	j	L33_LF2
 1095  00001bb0  54000000	nop; delay slot nop
 1096  00001bb4          	L32_LF2:
 1097  00001bb4  8fc20000	lw	r2,(r30)
 1098  00001bb8  90410000	lbu	r1,(r2)
 1099  00001bbc  8fc20004	lw	r2,4(r30)
 1100  00001bc0  90430000	lbu	r3,(r2)
 1101  00001bc4  00230822	sub	r1,r1,r3
 1102  00001bc8  74220000	sgei	r2,r1,#0
 1103  00001bcc  10400020	beqz	r2,L34_LF2
 1104  00001bd0  54000000	nop; delay slot nop
 1105  00001bd4  8fc10000	lw	r1,(r30)
 1106  00001bd8  8fc20004	lw	r2,4(r30)
 1107  00001bdc  90210000	lbu	r1,(r1)
 1108  00001be0  90420000	lbu	r2,(r2)
 1109  00001be4  00220829	sne	r1,r1,r2
 1110  00001be8  08000008	j	L35_LF2
 1111  00001bec  54000000	nop; delay slot nop
 1112  00001bf0          	L34_LF2:
 1113  00001bf0  2001ffff	addi	r1,r0,#-1
 1114  00001bf4          	L35_LF2:
 1115  00001bf4  08000004	j	L24_LF2
 1116  00001bf8  54000000	nop; delay slot nop
 1117  00001bfc          	L33_LF2:
 1118  00001bfc          	L24_LF2:
 1119  00001bfc  8fa20000	lw	r2,0(r29)
 1120  00001c00  8fa30004	lw	r3,4(r29)
 1121  00001c04  8fdffff8	lw	r31,-8(r30)
 1122  00001c08  001ee820	add	r29,r0,r30
 1123  00001c0c  8fdefffc	lw	r30,-4(r30)
 1124  00001c10  4be00000	jr	r31
 1125  00001c14  54000000	nop
 1126  00001c18          	.endproc _dstrncmp
 1127  00001c18          	.align 2
 1128  00001c18          	.proc _dstrlen
 1129  00001c18          	.global _dstrlen
 1130  00001c18          	_dstrlen:
 1131                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1132  00001c18  afbefffc	sw	-4(r29),r30; push fp
 1133  00001c1c  001df020	add	r30,r0,r29; fp = sp
 1134  00001c20  afbffff8	sw	-8(r29),r31; push ret addr
 1135  00001c24  2fbd0018	subui	r29,r29,#24; alloc local storage
 1136  00001c28  afa20000	sw	0(r29),r2
 1137  00001c2c  20010000	addi	r1,r0,#0
 1138  00001c30  afc1fff4	sw	-12(r30),r1
 1139  00001c34          	L37_LF2:
 1140  00001c34  8fc10000	lw	r1,(r30)
 1141  00001c38  20220001	addi	r2,r1,#1
 1142  00001c3c  afc20000	sw	(r30),r2
 1143  00001c40  90210000	lbu	r1,(r1)
 1144  00001c44  64220000	snei	r2,r1,#0
 1145  00001c48  1440000c	bnez	r2,L39_LF2
 1146  00001c4c  54000000	nop; delay slot nop
 1147  00001c50  0800001c	j	L38_LF2
 1148  00001c54  54000000	nop; delay slot nop
 1149  00001c58          	L39_LF2:
 1150  00001c58  8fc2fff4	lw	r2,-12(r30)
 1151  00001c5c  20410001	addi	r1,r2,#1
 1152  00001c60  00011020	add	r2,r0,r1
 1153  00001c64  afc2fff4	sw	-12(r30),r2
 1154  00001c68  0bffffc8	j	L37_LF2
 1155  00001c6c  54000000	nop; delay slot nop
 1156  00001c70          	L38_LF2:
 1157  00001c70  8fc1fff4	lw	r1,-12(r30)
 1158  00001c74  08000004	j	L36_LF2
 1159  00001c78  54000000	nop; delay slot nop
 1160  00001c7c          	L36_LF2:
 1161  00001c7c  8fa20000	lw	r2,0(r29)
 1162  00001c80  8fdffff8	lw	r31,-8(r30)
 1163  00001c84  001ee820	add	r29,r0,r30
 1164  00001c88  8fdefffc	lw	r30,-4(r30)
 1165  00001c8c  4be00000	jr	r31
 1166  00001c90  54000000	nop
 1167  00001c94          	.endproc _dstrlen
 1168  00001c94          	.align 2
 1169  00001c94          	.proc _dstrstr
 1170  00001c94          	.global _dstrstr
 1171  00001c94          	_dstrstr:
 1172                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1173  00001c94  afbefffc	sw	-4(r29),r30; push fp
 1174  00001c98  001df020	add	r30,r0,r29; fp = sp
 1175  00001c9c  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001ca0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1177  00001ca4  afa20000	sw	0(r29),r2
 1178  00001ca8  23bdfff8	addi	r29,r29,#-8
 1179  00001cac  001d0820	add	r1,r0,r29
 1180  00001cb0  8fc20004	lw	r2,4(r30)
 1181  00001cb4  ac220000	sw	(r1),r2
 1182  00001cb8  0fffff5c	jal	_dstrlen
 1183  00001cbc  54000000	nop; delay slot nop
 1184  00001cc0  23bd0008	addi	r29,r29,#8
 1185  00001cc4  afc1fff4	sw	-12(r30),r1
 1186  00001cc8          	L41_LF2:
 1187  00001cc8  8fc10000	lw	r1,(r30)
 1188  00001ccc  90220000	lbu	r2,(r1)
 1189  00001cd0  64410000	snei	r1,r2,#0
 1190  00001cd4  1420000c	bnez	r1,L43_LF2
 1191  00001cd8  54000000	nop; delay slot nop
 1192  00001cdc  08000060	j	L42_LF2
 1193  00001ce0  54000000	nop; delay slot nop
 1194  00001ce4          	L43_LF2:
 1195  00001ce4  23bdfff0	addi	r29,r29,#-16
 1196  00001ce8  001d0820	add	r1,r0,r29
 1197  00001cec  8fc20000	lw	r2,(r30)
 1198  00001cf0  ac220000	sw	(r1),r2
 1199  00001cf4  8fc20004	lw	r2,4(r30)
 1200  00001cf8  ac220004	sw	4(r1),r2
 1201  00001cfc  8fc2fff4	lw	r2,-12(r30)
 1202  00001d00  ac220008	sw	8(r1),r2
 1203  00001d04  0ffffdc0	jal	_dstrncmp
 1204  00001d08  54000000	nop; delay slot nop
 1205  00001d0c  23bd0010	addi	r29,r29,#16
 1206  00001d10  64220000	snei	r2,r1,#0
 1207  00001d14  14400010	bnez	r2,L44_LF2
 1208  00001d18  54000000	nop; delay slot nop
 1209  00001d1c  8fc10000	lw	r1,(r30)
 1210  00001d20  08000028	j	L40_LF2
 1211  00001d24  54000000	nop; delay slot nop
 1212  00001d28          	L44_LF2:
 1213  00001d28  8fc20000	lw	r2,(r30)
 1214  00001d2c  20410001	addi	r1,r2,#1
 1215  00001d30  00011020	add	r2,r0,r1
 1216  00001d34  afc20000	sw	(r30),r2
 1217  00001d38  0bffff8c	j	L41_LF2
 1218  00001d3c  54000000	nop; delay slot nop
 1219  00001d40          	L42_LF2:
 1220  00001d40  20010000	addi	r1,r0,#0
 1221  00001d44  08000004	j	L40_LF2
 1222  00001d48  54000000	nop; delay slot nop
 1223  00001d4c          	L40_LF2:
 1224  00001d4c  8fa20000	lw	r2,0(r29)
 1225  00001d50  8fdffff8	lw	r31,-8(r30)
 1226  00001d54  001ee820	add	r29,r0,r30
 1227  00001d58  8fdefffc	lw	r30,-4(r30)
 1228  00001d5c  4be00000	jr	r31
 1229  00001d60  54000000	nop
 1230  00001d64          	.endproc _dstrstr
 1231  00001d64          	.align 2
 1232  00001d64          	.proc _dmindex
 1233  00001d64          	.global _dmindex
 1234  00001d64          	_dmindex:
 1235                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1236  00001d64  afbefffc	sw	-4(r29),r30; push fp
 1237  00001d68  001df020	add	r30,r0,r29; fp = sp
 1238  00001d6c  afbffff8	sw	-8(r29),r31; push ret addr
 1239  00001d70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1240  00001d74  afa20000	sw	0(r29),r2
 1241  00001d78  54000000	nop
 1242  00001d7c          	L46_LF2:
 1243  00001d7c  8fc10000	lw	r1,(r30)
 1244  00001d80  90220000	lbu	r2,(r1)
 1245  00001d84  64410000	snei	r1,r2,#0
 1246  00001d88  1420000c	bnez	r1,L48_LF2
 1247  00001d8c  54000000	nop; delay slot nop
 1248  00001d90  08000070	j	L47_LF2
 1249  00001d94  54000000	nop; delay slot nop
 1250  00001d98          	L48_LF2:
 1251  00001d98  8fc10004	lw	r1,4(r30)
 1252  00001d9c  afc1fff4	sw	-12(r30),r1
 1253  00001da0          	L49_LF2:
 1254  00001da0  8fc1fff4	lw	r1,-12(r30)
 1255  00001da4  90220000	lbu	r2,(r1)
 1256  00001da8  64410000	snei	r1,r2,#0
 1257  00001dac  1420000c	bnez	r1,L52_LF2
 1258  00001db0  54000000	nop; delay slot nop
 1259  00001db4  08000044	j	L50_LF2
 1260  00001db8  54000000	nop; delay slot nop
 1261  00001dbc          	L52_LF2:
 1262  00001dbc  8fc10000	lw	r1,(r30)
 1263  00001dc0  8fc2fff4	lw	r2,-12(r30)
 1264  00001dc4  90210000	lbu	r1,(r1)
 1265  00001dc8  90420000	lbu	r2,(r2)
 1266  00001dcc  00220828	seq	r1,r1,r2
 1267  00001dd0  10200010	beqz	r1,L51_LF2
 1268  00001dd4  54000000	nop; delay slot nop
 1269  00001dd8  8fc10000	lw	r1,(r30)
 1270  00001ddc  08000030	j	L45_LF2
 1271  00001de0  54000000	nop; delay slot nop
 1272  00001de4          	L53_LF2:
 1273  00001de4          	L51_LF2:
 1274  00001de4  8fc2fff4	lw	r2,-12(r30)
 1275  00001de8  20410001	addi	r1,r2,#1
 1276  00001dec  00011020	add	r2,r0,r1
 1277  00001df0  afc2fff4	sw	-12(r30),r2
 1278  00001df4  0bffffa8	j	L49_LF2
 1279  00001df8  54000000	nop; delay slot nop
 1280  00001dfc          	L50_LF2:
 1281  00001dfc  0bffff7c	j	L46_LF2
 1282  00001e00  54000000	nop; delay slot nop
 1283  00001e04          	L47_LF2:
 1284  00001e04  20010000	addi	r1,r0,#0
 1285  00001e08  08000004	j	L45_LF2
 1286  00001e0c  54000000	nop; delay slot nop
 1287  00001e10          	L45_LF2:
 1288  00001e10  8fa20000	lw	r2,0(r29)
 1289  00001e14  8fdffff8	lw	r31,-8(r30)
 1290  00001e18  001ee820	add	r29,r0,r30
 1291  00001e1c  8fdefffc	lw	r30,-4(r30)
 1292  00001e20  4be00000	jr	r31
 1293  00001e24  54000000	nop
 1294  00001e28          	.endproc _dmindex
 1295  00001e28          	.align 2
 1296  00001e28          	.proc _dindex
 1297  00001e28          	.global _dindex
 1298  00001e28          	_dindex:
 1299                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1300  00001e28  afbefffc	sw	-4(r29),r30; push fp
 1301  00001e2c  001df020	add	r30,r0,r29; fp = sp
 1302  00001e30  afbffff8	sw	-8(r29),r31; push ret addr
 1303  00001e34  2fbd0010	subui	r29,r29,#16; alloc local storage
 1304  00001e38  afa20000	sw	0(r29),r2
 1305  00001e3c  54000000	nop
 1306  00001e40          	L55_LF2:
 1307  00001e40  8fc10000	lw	r1,(r30)
 1308  00001e44  90220000	lbu	r2,(r1)
 1309  00001e48  64410000	snei	r1,r2,#0
 1310  00001e4c  1420000c	bnez	r1,L57_LF2
 1311  00001e50  54000000	nop; delay slot nop
 1312  00001e54  08000040	j	L56_LF2
 1313  00001e58  54000000	nop; delay slot nop
 1314  00001e5c          	L57_LF2:
 1315  00001e5c  8fc10000	lw	r1,(r30)
 1316  00001e60  90220000	lbu	r2,(r1)
 1317  00001e64  8fc10004	lw	r1,4(r30)
 1318  00001e68  00411028	seq	r2,r2,r1
 1319  00001e6c  10400010	beqz	r2,L58_LF2
 1320  00001e70  54000000	nop; delay slot nop
 1321  00001e74  8fc10000	lw	r1,(r30)
 1322  00001e78  08000028	j	L54_LF2
 1323  00001e7c  54000000	nop; delay slot nop
 1324  00001e80          	L58_LF2:
 1325  00001e80  8fc20000	lw	r2,(r30)
 1326  00001e84  20410001	addi	r1,r2,#1
 1327  00001e88  00011020	add	r2,r0,r1
 1328  00001e8c  afc20000	sw	(r30),r2
 1329  00001e90  0bffffac	j	L55_LF2
 1330  00001e94  54000000	nop; delay slot nop
 1331  00001e98          	L56_LF2:
 1332  00001e98  20010000	addi	r1,r0,#0
 1333  00001e9c  08000004	j	L54_LF2
 1334  00001ea0  54000000	nop; delay slot nop
 1335  00001ea4          	L54_LF2:
 1336  00001ea4  8fa20000	lw	r2,0(r29)
 1337  00001ea8  8fdffff8	lw	r31,-8(r30)
 1338  00001eac  001ee820	add	r29,r0,r30
 1339  00001eb0  8fdefffc	lw	r30,-4(r30)
 1340  00001eb4  4be00000	jr	r31
 1341  00001eb8  54000000	nop
 1342  00001ebc          	.endproc _dindex
 1343  00001ebc          	.align 2
 1344  00001ebc          	.proc _ditoa
 1345  00001ebc          	.global _ditoa
 1346  00001ebc          	_ditoa:
 1347                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1348  00001ebc  afbefffc	sw	-4(r29),r30; push fp
 1349  00001ec0  001df020	add	r30,r0,r29; fp = sp
 1350  00001ec4  afbffff8	sw	-8(r29),r31; push ret addr
 1351  00001ec8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1352  00001ecc  afa20000	sw	0(r29),r2
 1353  00001ed0  afa30004	sw	4(r29),r3
 1354  00001ed4  8fc10000	lw	r1,(r30)
 1355  00001ed8  68220000	slti	r2,r1,#0
 1356  00001edc  1040002c	beqz	r2,L60_LF2
 1357  00001ee0  54000000	nop; delay slot nop
 1358  00001ee4  8fc10004	lw	r1,4(r30)
 1359  00001ee8  20220001	addi	r2,r1,#1
 1360  00001eec  afc20004	sw	4(r30),r2
 1361  00001ef0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1362  00001ef4  a0220000	sb	(r1),r2
 1363  00001ef8  8fc10000	lw	r1,(r30)
 1364  00001efc  00011022	sub	r2,r0,r1
 1365  00001f00  afc20000	sw	(r30),r2
 1366  00001f04  08000118	j	L61_LF2
 1367  00001f08  54000000	nop; delay slot nop
 1368  00001f0c          	L60_LF2:
 1369  00001f0c  8fc10000	lw	r1,(r30)
 1370  00001f10  64220000	snei	r2,r1,#0
 1371  00001f14  14400020	bnez	r2,L62_LF2
 1372  00001f18  54000000	nop; delay slot nop
 1373  00001f1c  8fc10004	lw	r1,4(r30)
 1374  00001f20  20220001	addi	r2,r1,#1
 1375  00001f24  afc20004	sw	4(r30),r2
 1376  00001f28  20020030	addi	r2,r0,(#0x30)&0xff
 1377  00001f2c  a0220000	sb	(r1),r2
 1378  00001f30  080000ec	j	L61_LF2
 1379  00001f34  54000000	nop; delay slot nop
 1380  00001f38          	L62_LF2:
 1381  00001f38  20010001	addi	r1,r0,#1
 1382  00001f3c  afc1fff4	sw	-12(r30),r1
 1383  00001f40          	L64_LF2:
 1384  00001f40  8fc1fff4	lw	r1,-12(r30)
 1385  00001f44  8fc20000	lw	r2,(r30)
 1386  00001f48  0022082c	sle	r1,r1,r2
 1387  00001f4c  1420000c	bnez	r1,L66_LF2
 1388  00001f50  54000000	nop; delay slot nop
 1389  00001f54  08000024	j	L65_LF2
 1390  00001f58  54000000	nop; delay slot nop
 1391  00001f5c          	L67_LF2:
 1392  00001f5c          	L66_LF2:
 1393  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1394  00001f60  00011820	add	r3,r0,r1
 1395  00001f64  50620002	slli	r2,r3,#0x2
 1396  00001f68  00411020	add	r2,r2,r1
 1397  00001f6c  50410001	slli	r1,r2,#0x1
 1398  00001f70  afc1fff4	sw	-12(r30),r1
 1399  00001f74  0bffffc8	j	L64_LF2
 1400  00001f78  54000000	nop; delay slot nop
 1401  00001f7c          	L65_LF2:
 1402  00001f7c  54000000	nop
 1403  00001f80          	L68_LF2:
 1404  00001f80  8fc1fff4	lw	r1,-12(r30)
 1405  00001f84  2002000a	addi	r2,r0,#10
 1406  00001f88  00200035	movi2fp	f0,r1
 1407  00001f8c  00400835	movi2fp	f1,r2
 1408  00001f90  0401000f	div	f0,f0,f1
 1409  00001f94  00000834	movfp2i	r1,f0
 1410  00001f98  afc1fff4	sw	-12(r30),r1
 1411  00001f9c  8fc10004	lw	r1,4(r30)
 1412  00001fa0  20220001	addi	r2,r1,#1
 1413  00001fa4  afc20004	sw	4(r30),r2
 1414  00001fa8  8fc20000	lw	r2,(r30)
 1415  00001fac  8fc3fff4	lw	r3,-12(r30)
 1416  00001fb0  00400035	movi2fp	f0,r2
 1417  00001fb4  00600835	movi2fp	f1,r3
 1418  00001fb8  0401000f	div	f0,f0,f1
 1419  00001fbc  00001034	movfp2i	r2,f0
 1420  00001fc0  00021820	add	r3,r0,r2
 1421  00001fc4  20620030	addi	r2,r3,#48
 1422  00001fc8  a0220000	sb	(r1),r2
 1423  00001fcc  8fc10000	lw	r1,(r30)
 1424  00001fd0  8fc3fff4	lw	r3,-12(r30)
 1425  00001fd4  00200035	movi2fp	f0,r1
 1426  00001fd8  00600835	movi2fp	f1,r3
 1427  00001fdc  0401000f	div	f0,f0,f1
 1428  00001fe0  00001034	movfp2i	r2,f0
 1429  00001fe4  8fc3fff4	lw	r3,-12(r30)
 1430  00001fe8  00400035	movi2fp	f0,r2
 1431  00001fec  00600835	movi2fp	f1,r3
 1432  00001ff0  0401000e	mult	f0,f0,f1
 1433  00001ff4  00001034	movfp2i	r2,f0
 1434  00001ff8  00220822	sub	r1,r1,r2
 1435  00001ffc  afc10000	sw	(r30),r1
 1436  00002000          	L70_LF2:
 1437  00002000  8fc1fff4	lw	r1,-12(r30)
 1438  00002004  6c220001	sgti	r2,r1,#1
 1439  00002008  1440000c	bnez	r2,L71_LF2
 1440  0000200c  54000000	nop; delay slot nop
 1441  00002010  0800000c	j	L61_LF2
 1442  00002014  54000000	nop; delay slot nop
 1443  00002018          	L71_LF2:
 1444  00002018  0bffff64	j	L68_LF2
 1445  0000201c  54000000	nop; delay slot nop
 1446  00002020          	L69_LF2:
 1447  00002020          	L63_LF2:
 1448  00002020          	L61_LF2:
 1449  00002020  8fc10004	lw	r1,4(r30)
 1450  00002024  20020000	addi	r2,r0,(#0x0)&0xff
 1451  00002028  a0220000	sb	(r1),r2
 1452  0000202c          	L59_LF2:
 1453  0000202c  8fa20000	lw	r2,0(r29)
 1454  00002030  8fa30004	lw	r3,4(r29)
 1455  00002034  8fdffff8	lw	r31,-8(r30)
 1456  00002038  001ee820	add	r29,r0,r30
 1457  0000203c  8fdefffc	lw	r30,-4(r30)
 1458  00002040  4be00000	jr	r31
 1459  00002044  54000000	nop
 1460  00002048          	.endproc _ditoa
 1461  00002048          	.align 2
 1462  00002048          	.proc _dstrtol
 1463  00002048          	.global _dstrtol
 1464  00002048          	_dstrtol:
 1465                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1466  00002048  afbefffc	sw	-4(r29),r30; push fp
 1467  0000204c  001df020	add	r30,r0,r29; fp = sp
 1468  00002050  afbffff8	sw	-8(r29),r31; push ret addr
 1469  00002054  2fbd0020	subui	r29,r29,#32; alloc local storage
 1470  00002058  afa20000	sw	0(r29),r2
 1471  0000205c  20010000	addi	r1,r0,#0
 1472  00002060  afc1fff4	sw	-12(r30),r1
 1473  00002064          	L73_LF2:
 1474  00002064  8fc10000	lw	r1,(r30)
 1475  00002068  90220000	lbu	r2,(r1)
 1476  0000206c  60410020	seqi	r1,r2,#32
 1477  00002070  14200034	bnez	r1,L75_LF2
 1478  00002074  54000000	nop; delay slot nop
 1479  00002078  8fc10000	lw	r1,(r30)
 1480  0000207c  90220000	lbu	r2,(r1)
 1481  00002080  60410009	seqi	r1,r2,#9
 1482  00002084  14200020	bnez	r1,L75_LF2
 1483  00002088  54000000	nop; delay slot nop
 1484  0000208c  8fc10000	lw	r1,(r30)
 1485  00002090  90220000	lbu	r2,(r1)
 1486  00002094  6041000a	seqi	r1,r2,#10
 1487  00002098  1420000c	bnez	r1,L75_LF2
 1488  0000209c  54000000	nop; delay slot nop
 1489  000020a0  0800001c	j	L74_LF2
 1490  000020a4  54000000	nop; delay slot nop
 1491  000020a8          	L75_LF2:
 1492  000020a8  8fc20000	lw	r2,(r30)
 1493  000020ac  20410001	addi	r1,r2,#1
 1494  000020b0  00011020	add	r2,r0,r1
 1495  000020b4  afc20000	sw	(r30),r2
 1496  000020b8  0bffffa8	j	L73_LF2
 1497  000020bc  54000000	nop; delay slot nop
 1498  000020c0          	L74_LF2:
 1499  000020c0  8fc10004	lw	r1,4(r30)
 1500  000020c4  64220000	snei	r2,r1,#0
 1501  000020c8  10400010	beqz	r2,L76_LF2
 1502  000020cc  54000000	nop; delay slot nop
 1503  000020d0  8fc10004	lw	r1,4(r30)
 1504  000020d4  8fc20000	lw	r2,(r30)
 1505  000020d8  ac220000	sw	(r1),r2
 1506  000020dc          	L76_LF2:
 1507  000020dc  8fc10000	lw	r1,(r30)
 1508  000020e0  90220000	lbu	r2,(r1)
 1509  000020e4  64410000	snei	r1,r2,#0
 1510  000020e8  14200010	bnez	r1,L77_LF2
 1511  000020ec  54000000	nop; delay slot nop
 1512  000020f0  8fc1fff4	lw	r1,-12(r30)
 1513  000020f4  08000294	j	L72_LF2
 1514  000020f8  54000000	nop; delay slot nop
 1515  000020fc          	L77_LF2:
 1516  000020fc  8fc10000	lw	r1,(r30)
 1517  00002100  90220000	lbu	r2,(r1)
 1518  00002104  6041002d	seqi	r1,r2,#45
 1519  00002108  10200024	beqz	r1,L78_LF2
 1520  0000210c  54000000	nop; delay slot nop
 1521  00002110  2001ffff	addi	r1,r0,#-1
 1522  00002114  afc1ffec	sw	-20(r30),r1
 1523  00002118  8fc20000	lw	r2,(r30)
 1524  0000211c  20410001	addi	r1,r2,#1
 1525  00002120  00011020	add	r2,r0,r1
 1526  00002124  afc20000	sw	(r30),r2
 1527  00002128  0800000c	j	L79_LF2
 1528  0000212c  54000000	nop; delay slot nop
 1529  00002130          	L78_LF2:
 1530  00002130  20010001	addi	r1,r0,#1
 1531  00002134  afc1ffec	sw	-20(r30),r1
 1532  00002138          	L79_LF2:
 1533  00002138  8fc10008	lw	r1,8(r30)
 1534  0000213c  64220000	snei	r2,r1,#0
 1535  00002140  14400090	bnez	r2,L80_LF2
 1536  00002144  54000000	nop; delay slot nop
 1537  00002148  8fc10000	lw	r1,(r30)
 1538  0000214c  90220000	lbu	r2,(r1)
 1539  00002150  60410030	seqi	r1,r2,#48
 1540  00002154  10200074	beqz	r1,L81_LF2
 1541  00002158  54000000	nop; delay slot nop
 1542  0000215c  8fc20000	lw	r2,(r30)
 1543  00002160  20410001	addi	r1,r2,#1
 1544  00002164  00011020	add	r2,r0,r1
 1545  00002168  afc20000	sw	(r30),r2
 1546  0000216c  8fc10000	lw	r1,(r30)
 1547  00002170  90220000	lbu	r2,(r1)
 1548  00002174  60410078	seqi	r1,r2,#120
 1549  00002178  14200020	bnez	r1,L83_LF2
 1550  0000217c  54000000	nop; delay slot nop
 1551  00002180  8fc10000	lw	r1,(r30)
 1552  00002184  90220000	lbu	r2,(r1)
 1553  00002188  60410058	seqi	r1,r2,#88
 1554  0000218c  1420000c	bnez	r1,L83_LF2
 1555  00002190  54000000	nop; delay slot nop
 1556  00002194  08000024	j	L82_LF2
 1557  00002198  54000000	nop; delay slot nop
 1558  0000219c          	L83_LF2:
 1559  0000219c  20010010	addi	r1,r0,#16
 1560  000021a0  afc10008	sw	8(r30),r1
 1561  000021a4  8fc20000	lw	r2,(r30)
 1562  000021a8  20410001	addi	r1,r2,#1
 1563  000021ac  00011020	add	r2,r0,r1
 1564  000021b0  afc20000	sw	(r30),r2
 1565  000021b4  0800000c	j	L84_LF2
 1566  000021b8  54000000	nop; delay slot nop
 1567  000021bc          	L82_LF2:
 1568  000021bc  20010008	addi	r1,r0,#8
 1569  000021c0  afc10008	sw	8(r30),r1
 1570  000021c4          	L84_LF2:
 1571  000021c4  0800000c	j	L80_LF2
 1572  000021c8  54000000	nop; delay slot nop
 1573  000021cc          	L81_LF2:
 1574  000021cc  2001000a	addi	r1,r0,#10
 1575  000021d0  afc10008	sw	8(r30),r1
 1576  000021d4          	L85_LF2:
 1577  000021d4          	L80_LF2:
 1578  000021d4  8fc10008	lw	r1,8(r30)
 1579  000021d8  70220000	slei	r2,r1,#0
 1580  000021dc  1440001c	bnez	r2,L87_LF2
 1581  000021e0  54000000	nop; delay slot nop
 1582  000021e4  8fc10008	lw	r1,8(r30)
 1583  000021e8  6c220010	sgti	r2,r1,#16
 1584  000021ec  1440000c	bnez	r2,L87_LF2
 1585  000021f0  54000000	nop; delay slot nop
 1586  000021f4  08000010	j	L86_LF2
 1587  000021f8  54000000	nop; delay slot nop
 1588  000021fc          	L87_LF2:
 1589  000021fc  8fc1fff4	lw	r1,-12(r30)
 1590  00002200  08000188	j	L72_LF2
 1591  00002204  54000000	nop; delay slot nop
 1592  00002208          	L86_LF2:
 1593  00002208  54000000	nop
 1594  0000220c          	L88_LF2:
 1595  0000220c  8fc10000	lw	r1,(r30)
 1596  00002210  90220000	lbu	r2,(r1)
 1597  00002214  6c41002f	sgtui	r1,r2,#47
 1598  00002218  10200030	beqz	r1,L91_LF2
 1599  0000221c  54000000	nop; delay slot nop
 1600  00002220  8fc10000	lw	r1,(r30)
 1601  00002224  90220000	lbu	r2,(r1)
 1602  00002228  70410039	sleui	r1,r2,#57
 1603  0000222c  1020001c	beqz	r1,L91_LF2
 1604  00002230  54000000	nop; delay slot nop
 1605  00002234  8fc10000	lw	r1,(r30)
 1606  00002238  90220000	lbu	r2,(r1)
 1607  0000223c  2041ffd0	addi	r1,r2,#-48
 1608  00002240  afc1fff0	sw	-16(r30),r1
 1609  00002244  0800008c	j	L92_LF2
 1610  00002248  54000000	nop; delay slot nop
 1611  0000224c          	L91_LF2:
 1612  0000224c  8fc10000	lw	r1,(r30)
 1613  00002250  90220000	lbu	r2,(r1)
 1614  00002254  6c410060	sgtui	r1,r2,#96
 1615  00002258  10200030	beqz	r1,L93_LF2
 1616  0000225c  54000000	nop; delay slot nop
 1617  00002260  8fc10000	lw	r1,(r30)
 1618  00002264  90220000	lbu	r2,(r1)
 1619  00002268  7041007a	sleui	r1,r2,#122
 1620  0000226c  1020001c	beqz	r1,L93_LF2
 1621  00002270  54000000	nop; delay slot nop
 1622  00002274  8fc10000	lw	r1,(r30)
 1623  00002278  90220000	lbu	r2,(r1)
 1624  0000227c  2041ffa9	addi	r1,r2,#-87
 1625  00002280  afc1fff0	sw	-16(r30),r1
 1626  00002284  0800004c	j	L92_LF2
 1627  00002288  54000000	nop; delay slot nop
 1628  0000228c          	L93_LF2:
 1629  0000228c  8fc10000	lw	r1,(r30)
 1630  00002290  90220000	lbu	r2,(r1)
 1631  00002294  6c410040	sgtui	r1,r2,#64
 1632  00002298  10200030	beqz	r1,L95_LF2
 1633  0000229c  54000000	nop; delay slot nop
 1634  000022a0  8fc10000	lw	r1,(r30)
 1635  000022a4  90220000	lbu	r2,(r1)
 1636  000022a8  7041005a	sleui	r1,r2,#90
 1637  000022ac  1020001c	beqz	r1,L95_LF2
 1638  000022b0  54000000	nop; delay slot nop
 1639  000022b4  8fc10000	lw	r1,(r30)
 1640  000022b8  90220000	lbu	r2,(r1)
 1641  000022bc  2041ffc9	addi	r1,r2,#-55
 1642  000022c0  afc1fff0	sw	-16(r30),r1
 1643  000022c4  0800000c	j	L92_LF2
 1644  000022c8  54000000	nop; delay slot nop
 1645  000022cc          	L95_LF2:
 1646  000022cc  200103e8	addi	r1,r0,#1000
 1647  000022d0  afc1fff0	sw	-16(r30),r1
 1648  000022d4          	L96_LF2:
 1649  000022d4          	L94_LF2:
 1650  000022d4          	L92_LF2:
 1651  000022d4  8fc1fff0	lw	r1,-16(r30)
 1652  000022d8  8fc20008	lw	r2,8(r30)
 1653  000022dc  0022082a	slt	r1,r1,r2
 1654  000022e0  10200040	beqz	r1,L90_LF2
 1655  000022e4  54000000	nop; delay slot nop
 1656  000022e8  8fc1fff4	lw	r1,-12(r30)
 1657  000022ec  8fc20008	lw	r2,8(r30)
 1658  000022f0  00200035	movi2fp	f0,r1
 1659  000022f4  00400835	movi2fp	f1,r2
 1660  000022f8  0401000e	mult	f0,f0,f1
 1661  000022fc  00000834	movfp2i	r1,f0
 1662  00002300  afc1fff4	sw	-12(r30),r1
 1663  00002304  8fc1fff4	lw	r1,-12(r30)
 1664  00002308  8fc2fff0	lw	r2,-16(r30)
 1665  0000230c  00220820	add	r1,r1,r2
 1666  00002310  afc1fff4	sw	-12(r30),r1
 1667  00002314  8fc20000	lw	r2,(r30)
 1668  00002318  20410001	addi	r1,r2,#1
 1669  0000231c  00011020	add	r2,r0,r1
 1670  00002320  afc20000	sw	(r30),r2
 1671  00002324          	L97_LF2:
 1672  00002324          	L90_LF2:
 1673  00002324  8fc1fff0	lw	r1,-16(r30)
 1674  00002328  8fc20008	lw	r2,8(r30)
 1675  0000232c  0022082a	slt	r1,r1,r2
 1676  00002330  1420000c	bnez	r1,L98_LF2
 1677  00002334  54000000	nop; delay slot nop
 1678  00002338  0800000c	j	L89_LF2
 1679  0000233c  54000000	nop; delay slot nop
 1680  00002340          	L98_LF2:
 1681  00002340  0bfffec8	j	L88_LF2
 1682  00002344  54000000	nop; delay slot nop
 1683  00002348          	L89_LF2:
 1684  00002348  8fc10004	lw	r1,4(r30)
 1685  0000234c  64220000	snei	r2,r1,#0
 1686  00002350  10400010	beqz	r2,L99_LF2
 1687  00002354  54000000	nop; delay slot nop
 1688  00002358  8fc10004	lw	r1,4(r30)
 1689  0000235c  8fc20000	lw	r2,(r30)
 1690  00002360  ac220000	sw	(r1),r2
 1691  00002364          	L99_LF2:
 1692  00002364  8fc1fff4	lw	r1,-12(r30)
 1693  00002368  8fc2ffec	lw	r2,-20(r30)
 1694  0000236c  00200035	movi2fp	f0,r1
 1695  00002370  00400835	movi2fp	f1,r2
 1696  00002374  0401000e	mult	f0,f0,f1
 1697  00002378  00000834	movfp2i	r1,f0
 1698  0000237c  afc1fff4	sw	-12(r30),r1
 1699  00002380  8fc1fff4	lw	r1,-12(r30)
 1700  00002384  08000004	j	L72_LF2
 1701  00002388  54000000	nop; delay slot nop
 1702  0000238c          	L72_LF2:
 1703  0000238c  8fa20000	lw	r2,0(r29)
 1704  00002390  8fdffff8	lw	r31,-8(r30)
 1705  00002394  001ee820	add	r29,r0,r30
 1706  00002398  8fdefffc	lw	r30,-4(r30)
 1707  0000239c  4be00000	jr	r31
 1708  000023a0  54000000	nop
 1709  000023a4          	.endproc _dstrtol
 1710  000023a4          	.align 2
 1711  000023a4          	.proc _bcopy
 1712  000023a4          	.global _bcopy
 1713  000023a4          	_bcopy:
 1714                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1715  000023a4  afbefffc	sw	-4(r29),r30; push fp
 1716  000023a8  001df020	add	r30,r0,r29; fp = sp
 1717  000023ac  afbffff8	sw	-8(r29),r31; push ret addr
 1718  000023b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1719  000023b4  afa20000	sw	0(r29),r2
 1720  000023b8  afa30004	sw	4(r29),r3
 1721  000023bc  54000000	nop
 1722  000023c0          	L101_LF2:
 1723  000023c0  8fc10008	lw	r1,8(r30)
 1724  000023c4  2022ffff	addi	r2,r1,#-1
 1725  000023c8  afc20008	sw	8(r30),r2
 1726  000023cc  6c210000	sgti	r1,r1,#0
 1727  000023d0  1420000c	bnez	r1,L103_LF2
 1728  000023d4  54000000	nop; delay slot nop
 1729  000023d8  0800002c	j	L102_LF2
 1730  000023dc  54000000	nop; delay slot nop
 1731  000023e0          	L103_LF2:
 1732  000023e0  8fc10004	lw	r1,4(r30)
 1733  000023e4  20220001	addi	r2,r1,#1
 1734  000023e8  afc20004	sw	4(r30),r2
 1735  000023ec  8fc20000	lw	r2,(r30)
 1736  000023f0  20430001	addi	r3,r2,#1
 1737  000023f4  afc30000	sw	(r30),r3
 1738  000023f8  80420000	lb	r2,(r2)
 1739  000023fc  a0220000	sb	(r1),r2
 1740  00002400  0bffffbc	j	L101_LF2
 1741  00002404  54000000	nop; delay slot nop
 1742  00002408          	L102_LF2:
 1743  00002408          	L100_LF2:
 1744  00002408  8fa20000	lw	r2,0(r29)
 1745  0000240c  8fa30004	lw	r3,4(r29)
 1746  00002410  8fdffff8	lw	r31,-8(r30)
 1747  00002414  001ee820	add	r29,r0,r30
 1748  00002418  8fdefffc	lw	r30,-4(r30)
 1749  0000241c  4be00000	jr	r31
 1750  00002420  54000000	nop
 1751  00002424          	.endproc _bcopy
 1752  00002424          	.align 2
 1753  00002424          	.proc _bzero
 1754  00002424          	.global _bzero
 1755  00002424          	_bzero:
 1756                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1757  00002424  afbefffc	sw	-4(r29),r30; push fp
 1758  00002428  001df020	add	r30,r0,r29; fp = sp
 1759  0000242c  afbffff8	sw	-8(r29),r31; push ret addr
 1760  00002430  2fbd0010	subui	r29,r29,#16; alloc local storage
 1761  00002434  afa20000	sw	0(r29),r2
 1762  00002438  54000000	nop
 1763  0000243c          	L105_LF2:
 1764  0000243c  8fc10004	lw	r1,4(r30)
 1765  00002440  2022ffff	addi	r2,r1,#-1
 1766  00002444  afc20004	sw	4(r30),r2
 1767  00002448  6c210000	sgti	r1,r1,#0
 1768  0000244c  1420000c	bnez	r1,L107_LF2
 1769  00002450  54000000	nop; delay slot nop
 1770  00002454  08000020	j	L106_LF2
 1771  00002458  54000000	nop; delay slot nop
 1772  0000245c          	L107_LF2:
 1773  0000245c  8fc10000	lw	r1,(r30)
 1774  00002460  20220001	addi	r2,r1,#1
 1775  00002464  afc20000	sw	(r30),r2
 1776  00002468  20020000	addi	r2,r0,(#0x0)&0xff
 1777  0000246c  a0220000	sb	(r1),r2
 1778  00002470  0bffffc8	j	L105_LF2
 1779  00002474  54000000	nop; delay slot nop
 1780  00002478          	L106_LF2:
 1781  00002478          	L104_LF2:
 1782  00002478  8fa20000	lw	r2,0(r29)
 1783  0000247c  8fdffff8	lw	r31,-8(r30)
 1784  00002480  001ee820	add	r29,r0,r30
 1785  00002484  8fdefffc	lw	r30,-4(r30)
 1786  00002488  4be00000	jr	r31
 1787  0000248c  54000000	nop
 1788  00002490          	.endproc _bzero
 1789  00002490          	.align 2
 1790  00002490          	.proc _min
 1791  00002490          	.global _min
 1792  00002490          	_min:
 1793                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1794  00002490  afbefffc	sw	-4(r29),r30; push fp
 1795  00002494  001df020	add	r30,r0,r29; fp = sp
 1796  00002498  afbffff8	sw	-8(r29),r31; push ret addr
 1797  0000249c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1798  000024a0  afa20000	sw	0(r29),r2
 1799  000024a4  afa30004	sw	4(r29),r3
 1800  000024a8  8fc10000	lw	r1,(r30)
 1801  000024ac  8fc20004	lw	r2,4(r30)
 1802  000024b0  0022182c	sle	r3,r1,r2
 1803  000024b4  14600008	bnez	r3,L109_LF2
 1804  000024b8  54000000	nop; delay slot nop
 1805  000024bc  8fc10004	lw	r1,4(r30)
 1806  000024c0          	L109_LF2:
 1807  000024c0  08000004	j	L108_LF2
 1808  000024c4  54000000	nop; delay slot nop
 1809  000024c8          	L108_LF2:
 1810  000024c8  8fa20000	lw	r2,0(r29)
 1811  000024cc  8fa30004	lw	r3,4(r29)
 1812  000024d0  8fdffff8	lw	r31,-8(r30)
 1813  000024d4  001ee820	add	r29,r0,r30
 1814  000024d8  8fdefffc	lw	r30,-4(r30)
 1815  000024dc  4be00000	jr	r31
 1816  000024e0  54000000	nop
 1817  000024e4          	.endproc _min
 1818  000024e4          	.align 2
 1819  000024e4          	.proc _max
 1820  000024e4          	.global _max
 1821  000024e4          	_max:
 1822                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1823  000024e4  afbefffc	sw	-4(r29),r30; push fp
 1824  000024e8  001df020	add	r30,r0,r29; fp = sp
 1825  000024ec  afbffff8	sw	-8(r29),r31; push ret addr
 1826  000024f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1827  000024f4  afa20000	sw	0(r29),r2
 1828  000024f8  afa30004	sw	4(r29),r3
 1829  000024fc  8fc10000	lw	r1,(r30)
 1830  00002500  8fc20004	lw	r2,4(r30)
 1831  00002504  0022182d	sge	r3,r1,r2
 1832  00002508  14600008	bnez	r3,L111_LF2
 1833  0000250c  54000000	nop; delay slot nop
 1834  00002510  8fc10004	lw	r1,4(r30)
 1835  00002514          	L111_LF2:
 1836  00002514  08000004	j	L110_LF2
 1837  00002518  54000000	nop; delay slot nop
 1838  0000251c          	L110_LF2:
 1839  0000251c  8fa20000	lw	r2,0(r29)
 1840  00002520  8fa30004	lw	r3,4(r29)
 1841  00002524  8fdffff8	lw	r31,-8(r30)
 1842  00002528  001ee820	add	r29,r0,r30
 1843  0000252c  8fdefffc	lw	r30,-4(r30)
 1844  00002530  4be00000	jr	r31
 1845  00002534  54000000	nop
 1846  00002538          	.endproc _max
 1847                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1848                      ;;;
 1849                      ;;; Most of the traps are called in files from libtraps.
 1852  00002538          	.align 2
 1853  00002538          	.proc _exit
 1854  00002538          	.global _exit
 1855  00002538          	_exit:
 1856  00002538  44000300	trap	#0x300
 1857  0000253c  4be00000	jr	r31
 1858  00002540  54000000	nop
 1859  00002544          	.endproc _exit
 1861                      ; for the benefit of gcc.
 1862  00002544          	.proc ___main
 1863  00002544          	.global ___main
 1864  00002544          	___main:
 1865  00002544  4be00000	jr	r31
 1866  00002548  54000000	nop
 1867  0000254c          	.endproc ___main
 1868  0000254c          	.text
 1869  0000254c          	.global _etext
 1870  0000254c          	_etext:
 1871  0000254c          	.align 3
 1872  00002550          	.data
 1873  00003201          	.global _edata
 1874  00003201          	_edata:
