 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 513
    4                      ; Text size: 4876
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test %d: filling the heap to the brim\n\n\000"
   85  00003038  2025643a	
   85  0000303c  2066696c	
   85  00003040  6c696e67	
   85  00003044  20746865	
   85  00003048  20686561	
   85  0000304c  7020746f	
   85  00003050  20746865	
   85  00003054  20627269	
   85  00003058  6d0a0a00	
   86  0000305c          	.align 2
   87  0000305c          	LC2_LF0:
   88  0000305c  54657374	.ascii "Test %d: freeing full heap\n\n\000"
   88  00003060  2025643a	
   88  00003064  20667265	
   88  00003068  65696e67	
   88  0000306c  2066756c	
   88  00003070  6c206865	
   88  00003074  61700a0a	
   88  00003078  00      	
   89  00003079          	.align 2
   90  0000307c          	LC3_LF0:
   91  0000307c  54657374	.ascii "Test %d: making holes\n\n\000"
   91  00003080  2025643a	
   91  00003084  206d616b	
   91  00003088  696e6720	
   91  0000308c  686f6c65	
   91  00003090  730a0a00	
   92  00003094          	.align 2
   93  00003094          	LC4_LF0:
   94  00003094  73657665	.ascii "seven %d: allocating 40, 60, 129, and 128 bytes!\n\000"
   94  00003098  6e202564	
   94  0000309c  3a20616c	
   94  000030a0  6c6f6361	
   94  000030a4  74696e67	
   94  000030a8  2034302c	
   94  000030ac  2036302c	
   94  000030b0  20313239	
   94  000030b4  2c20616e	
   94  000030b8  64203132	
   94  000030bc  38206279	
   94  000030c0  74657321	
   94  000030c4  0a00    	
   95  000030c6          	.align 2
   96  000030c8          	LC5_LF0:
   97  000030c8  34302061	.ascii "40 addr: %d\n\000"
   97  000030cc  6464723a	
   97  000030d0  2025640a	
   97  000030d4  00      	
   98  000030d5          	.align 2
   99  000030d8          	LC6_LF0:
  100  000030d8  36302061	.ascii "60 addr: %d\n\000"
  100  000030dc  6464723a	
  100  000030e0  2025640a	
  100  000030e4  00      	
  101  000030e5          	.align 2
  102  000030e8          	LC7_LF0:
  103  000030e8  31323920	.ascii "129 addr: %d\n\000"
  103  000030ec  61646472	
  103  000030f0  3a202564	
  103  000030f4  0a00    	
  104  000030f6          	.align 2
  105  000030f8          	LC8_LF0:
  106  000030f8  31323820	.ascii "128 addr: %d\n\000"
  106  000030fc  61646472	
  106  00003100  3a202564	
  106  00003104  0a00    	
  107  00003106          	.align 2
  108  00003108          	LC9_LF0:
  109  00003108  48656c6c	.ascii "Hello world!\000"
  109  0000310c  6f20776f	
  109  00003110  726c6421	
  109  00003114  00      	
  110  00003115          	.align 2
  111  00003118          	LC10_LF0:
  112  00003118  48656c6c	.ascii "Hello world printed from heap memory: %s\n\000"
  112  0000311c  6f20776f	
  112  00003120  726c6420	
  112  00003124  7072696e	
  112  00003128  74656420	
  112  0000312c  66726f6d	
  112  00003130  20686561	
  112  00003134  70206d65	
  112  00003138  6d6f7279	
  112  0000313c  3a202573	
  112  00003140  0a00    	
  113  00003142          	.align 2
  114  00003144          	LC11_LF0:
  115  00003144  666f7274	.ascii "forty\n\000"
  115  00003148  790a00  	
  116  0000314b          	.align 2
  117  0000314c          	LC12_LF0:
  118  0000314c  73697874	.ascii "sixty\n\000"
  118  00003150  790a00  	
  119  00003153          	.align 2
  120  00003154          	LC13_LF0:
  121  00003154  53747269	.ascii "String in 40: %s\000"
  121  00003158  6e672069	
  121  0000315c  6e203430	
  121  00003160  3a202573	
  121  00003164  00      	
  122  00003165          	.align 2
  123  00003168          	LC14_LF0:
  124  00003168  53747269	.ascii "String in 60: %s\000"
  124  0000316c  6e672069	
  124  00003170  6e203630	
  124  00003174  3a202573	
  124  00003178  00      	
  125  00003179          	.align 2
  126  0000317c          	LC15_LF0:
  127  0000317c  46726565	.ascii "Freeing all the allocations\n\000"
  127  00003180  696e6720	
  127  00003184  616c6c20	
  127  00003188  74686520	
  127  0000318c  616c6c6f	
  127  00003190  63617469	
  127  00003194  6f6e730a	
  127  00003198  00      	
  128  00003199          	.align 2
  129  0000319c          	LC16_LF0:
  130  0000319c  6d667265	.ascii "mfree failed!\n\000"
  130  000031a0  65206661	
  130  000031a4  696c6564	
  130  000031a8  210a00  	
  131  000031ab          	.align 2
  132  000031ac          	LC17_LF0:
  133  000031ac  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  133  000031b0  6f5f776f	
  133  000031b4  726c6420	
  133  000031b8  28256429	
  133  000031bc  3a204261	
  133  000031c0  64207365	
  133  000031c4  6d617068	
  133  000031c8  6f726520	
  133  000031cc  735f7072	
  133  000031d0  6f63735f	
  133  000031d4  636f6d70	
  133  000031d8  6c657465	
  133  000031dc  64202825	
  133  000031e0  6429210a	
  133  000031e4  00      	
  134  000031e5          	.align 2
  135  000031e8          	LC18_LF0:
  136  000031e8  74657374	.ascii "test_malloc (%d): Done!\n\000"
  136  000031ec  5f6d616c	
  136  000031f0  6c6f6320	
  136  000031f4  28256429	
  136  000031f8  3a20446f	
  136  000031fc  6e65210a	
  136  00003200  00      	
  137  00003201          	.text
  138  000010d4          	.align 2
  139  000010d4          	.proc _main
  140  000010d4          	.global _main
  141  000010d4          	_main:
  142                      ;  Function 'main'; 512 bytes of locals, 0 regs to save.
  143  000010d4  afbefffc	sw	-4(r29),r30; push fp
  144  000010d8  001df020	add	r30,r0,r29; fp = sp
  145  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  146  000010e0  2fbd0208	subui	r29,r29,#520; alloc local storage
  147  000010e4  8fc20000	lw	r2,(r30)
  148  000010e8  8fc30004	lw	r3,4(r30)
  149  000010ec  0c001214	jal	___main
  150  000010f0  54000000	nop; not filled.
  151  000010f4  64410003	snei	r1,r2,#3
  152  000010f8  10200028	beqz	r1,L14_LF0
  153  000010fc  54000000	nop; not filled.
  154  00001100  23bdfff8	addi	r29,r29,#-8
  155  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  156  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  157  0000110c  afa50000	sw	(r29),r5
  158  00001110  0c000330	jal	_Printf
  159  00001114  54000000	nop; not filled.
  160  00001118  0c000430	jal	_Exit
  161  0000111c  54000000	nop; not filled.
  162  00001120  23bd0008	addi	r29,r29,#8
  163  00001124          	L14_LF0:
  164  00001124  23bdfff0	addi	r29,r29,#-16
  165  00001128  8c650004	lw	r5,4(r3)
  166  0000112c  afa50000	sw	(r29),r5
  167  00001130  20050000	addi	r5,r0,#0
  168  00001134  afa50004	sw	4(r29),r5
  169  00001138  2005000a	addi	r5,r0,#10
  170  0000113c  afa50008	sw	8(r29),r5
  171  00001140  0c000cc4	jal	_dstrtol
  172  00001144  54000000	nop; not filled.
  173  00001148  00012020	add	r4,r0,r1
  174  0000114c  8c630008	lw	r3,8(r3)
  175  00001150  afa30000	sw	(r29),r3
  176  00001154  20050000	addi	r5,r0,#0
  177  00001158  afa50004	sw	4(r29),r5
  178  0000115c  2005000a	addi	r5,r0,#10
  179  00001160  afa50008	sw	8(r29),r5
  180  00001164  0c000ca0	jal	_dstrtol
  181  00001168  54000000	nop; not filled.
  182  0000116c  00011020	add	r2,r0,r1
  183  00001170  23bd0010	addi	r29,r29,#16
  184  00001174  60410002	seqi	r1,r2,#2
  185  00001178  102000ac	beqz	r1,L15_LF0
  186  0000117c  54000000	nop; not filled.
  187  00001180  23bdfff8	addi	r29,r29,#-8
  188  00001184  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  189  00001188  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  190  0000118c  afa50000	sw	(r29),r5
  191  00001190  afa20004	sw	4(r29),r2
  192  00001194  0c0002ac	jal	_Printf
  193  00001198  54000000	nop; not filled.
  194  0000119c  23bd0008	addi	r29,r29,#8
  195  000011a0  23c2fff8	addi	r2,r30,#-8
  196  000011a4  23c301f4	addi	r3,r30,#500
  197  000011a8          	L19_LF0:
  198  000011a8  23bdfff8	addi	r29,r29,#-8
  199  000011ac  20050020	addi	r5,r0,#32
  200  000011b0  afa50000	sw	(r29),r5
  201  000011b4  0c0003a0	jal	_malloc
  202  000011b8  54000000	nop; not filled.
  203  000011bc  ac41fe00	sw	-512(r2),r1
  204  000011c0  23bd0008	addi	r29,r29,#8
  205  000011c4  20420004	addi	r2,r2,#4
  206  000011c8  0043082c	sle	r1,r2,r3
  207  000011cc  1420ffd8	bnez	r1,L19_LF0
  208  000011d0  54000000	nop; not filled.
  209  000011d4  23bdfff8	addi	r29,r29,#-8
  210  000011d8  20050001	addi	r5,r0,#1
  211  000011dc  afa50000	sw	(r29),r5
  212  000011e0  0c000374	jal	_malloc
  213  000011e4  54000000	nop; not filled.
  214  000011e8  20020000	addi	r2,r0,#0
  215  000011ec  23bd0008	addi	r29,r29,#8
  216  000011f0  23c3fff8	addi	r3,r30,#-8
  217  000011f4          	L24_LF0:
  218  000011f4  23bdfff8	addi	r29,r29,#-8
  219  000011f8  8c65fe00	lw	r5,-512(r3)
  220  000011fc  afa50000	sw	(r29),r5
  221  00001200  0c00035c	jal	_mfree
  222  00001204  54000000	nop; not filled.
  223  00001208  23bd0008	addi	r29,r29,#8
  224  0000120c  20630004	addi	r3,r3,#4
  225  00001210  20420001	addi	r2,r2,#1
  226  00001214  7041007f	slei	r1,r2,#127
  227  00001218  1020015c	beqz	r1,L26_LF0
  228  0000121c  54000000	nop; not filled.
  229  00001220  0bffffd0	j	L24_LF0
  230  00001224  54000000	nop; not filled.
  231  00001228          	L15_LF0:
  232  00001228  6041ffff	seqi	r1,r2,#-1
  233  0000122c  1020005c	beqz	r1,L31_LF0
  234  00001230  54000000	nop; not filled.
  235  00001234  23bdfff8	addi	r29,r29,#-8
  236  00001238  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  237  0000123c  24a5305c	addui	r5,r5,(LC2_LF0)&0xffff
  238  00001240  afa50000	sw	(r29),r5
  239  00001244  afa20004	sw	4(r29),r2
  240  00001248  0c0001f8	jal	_Printf
  241  0000124c  54000000	nop; not filled.
  242  00001250  20051000	addi	r5,r0,#4096
  243  00001254  afa50000	sw	(r29),r5
  244  00001258  0c0002fc	jal	_malloc
  245  0000125c  54000000	nop; not filled.
  246  00001260  afc1fdf8	sw	-520(r30),r1
  247  00001264  afa10000	sw	(r29),r1
  248  00001268  0c0002f4	jal	_mfree
  249  0000126c  54000000	nop; not filled.
  250  00001270  20050002	addi	r5,r0,#2
  251  00001274  afa50000	sw	(r29),r5
  252  00001278  0c0002dc	jal	_malloc
  253  0000127c  54000000	nop; not filled.
  254  00001280  afc1fdfc	sw	-516(r30),r1
  255  00001284  080000ec	j	L41_LF0
  256  00001288  54000000	nop; not filled.
  257  0000128c          	L31_LF0:
  258  0000128c  64410000	snei	r1,r2,#0
  259  00001290  142000e4	bnez	r1,L26_LF0
  260  00001294  54000000	nop; not filled.
  261  00001298  23bdfff8	addi	r29,r29,#-8
  262  0000129c  20050001	addi	r5,r0,#1
  263  000012a0  afa50000	sw	(r29),r5
  264  000012a4  0c0002b0	jal	_malloc
  265  000012a8  54000000	nop; not filled.
  266  000012ac  afc1fdf8	sw	-520(r30),r1
  267  000012b0  2005000c	addi	r5,r0,#12
  268  000012b4  afa50000	sw	(r29),r5
  269  000012b8  0c00029c	jal	_malloc
  270  000012bc  54000000	nop; not filled.
  271  000012c0  afc1fdfc	sw	-516(r30),r1
  272  000012c4  2005000f	addi	r5,r0,#15
  273  000012c8  afa50000	sw	(r29),r5
  274  000012cc  0c000288	jal	_malloc
  275  000012d0  54000000	nop; not filled.
  276  000012d4  afc1fe00	sw	-512(r30),r1
  277  000012d8  2005001f	addi	r5,r0,#31
  278  000012dc  afa50000	sw	(r29),r5
  279  000012e0  0c000274	jal	_malloc
  280  000012e4  54000000	nop; not filled.
  281  000012e8  afc1fe04	sw	-508(r30),r1
  282  000012ec  20050002	addi	r5,r0,#2
  283  000012f0  afa50000	sw	(r29),r5
  284  000012f4  0c000260	jal	_malloc
  285  000012f8  54000000	nop; not filled.
  286  000012fc  afc1fe08	sw	-504(r30),r1
  287  00001300  20050001	addi	r5,r0,#1
  288  00001304  afa50000	sw	(r29),r5
  289  00001308  0c00024c	jal	_malloc
  290  0000130c  54000000	nop; not filled.
  291  00001310  afc1fe0c	sw	-500(r30),r1
  292  00001314  8fc5fe08	lw	r5,-504(r30)
  293  00001318  afa50000	sw	(r29),r5
  294  0000131c  0c000240	jal	_mfree
  295  00001320  54000000	nop; not filled.
  296  00001324  8fc5fe04	lw	r5,-508(r30)
  297  00001328  afa50000	sw	(r29),r5
  298  0000132c  0c000230	jal	_mfree
  299  00001330  54000000	nop; not filled.
  300  00001334  8fc5fe0c	lw	r5,-500(r30)
  301  00001338  afa50000	sw	(r29),r5
  302  0000133c  0c000220	jal	_mfree
  303  00001340  54000000	nop; not filled.
  304  00001344  8fc5fdfc	lw	r5,-516(r30)
  305  00001348  afa50000	sw	(r29),r5
  306  0000134c  0c000210	jal	_mfree
  307  00001350  54000000	nop; not filled.
  308  00001354  8fc5fe00	lw	r5,-512(r30)
  309  00001358  afa50000	sw	(r29),r5
  310  0000135c  0c000200	jal	_mfree
  311  00001360  54000000	nop; not filled.
  312  00001364  8fc5fdf8	lw	r5,-520(r30)
  313  00001368  afa50000	sw	(r29),r5
  314  0000136c  0c0001f0	jal	_mfree
  315  00001370  54000000	nop; not filled.
  316  00001374          	L41_LF0:
  317  00001374  23bd0008	addi	r29,r29,#8
  318  00001378          	L26_LF0:
  319  00001378  23bdfff8	addi	r29,r29,#-8
  320  0000137c  afa40000	sw	(r29),r4
  321  00001380  0c000114	jal	_sem_signal
  322  00001384  54000000	nop; not filled.
  323  00001388  23bd0008	addi	r29,r29,#8
  324  0000138c  64210001	snei	r1,r1,#1
  325  00001390  10200038	beqz	r1,L40_LF0
  326  00001394  54000000	nop; not filled.
  327  00001398  0c0000b4	jal	_getpid
  328  0000139c  54000000	nop; not filled.
  329  000013a0  23bdfff0	addi	r29,r29,#-16
  330  000013a4  3c050000	lhi	r5,((LC17_LF0)>>16)&0xffff
  331  000013a8  24a531ac	addui	r5,r5,(LC17_LF0)&0xffff
  332  000013ac  afa50000	sw	(r29),r5
  333  000013b0  afa10004	sw	4(r29),r1
  334  000013b4  afa40008	sw	8(r29),r4
  335  000013b8  0c000088	jal	_Printf
  336  000013bc  54000000	nop; not filled.
  337  000013c0  0c000188	jal	_Exit
  338  000013c4  54000000	nop; not filled.
  339  000013c8  23bd0010	addi	r29,r29,#16
  340  000013cc          	L40_LF0:
  341  000013cc  0c000080	jal	_getpid
  342  000013d0  54000000	nop; not filled.
  343  000013d4  23bdfff8	addi	r29,r29,#-8
  344  000013d8  3c050000	lhi	r5,((LC18_LF0)>>16)&0xffff
  345  000013dc  24a531e8	addui	r5,r5,(LC18_LF0)&0xffff
  346  000013e0  afa50000	sw	(r29),r5
  347  000013e4  afa10004	sw	4(r29),r1
  348  000013e8  0c000058	jal	_Printf
  349  000013ec  54000000	nop; not filled.
  350  000013f0  23bd0008	addi	r29,r29,#8
  351  000013f4  0c000f00	jal	_exit
  352  000013f8  54000000	nop
  353  000013fc          	.endproc _main
  354                      ;;;
  355                      ;;; Stub functions for DLX traps.
  356                      ;;;
  357                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  358                      ;;;
  359                      ;;; The traps such as Open and Close
  360                      ;;; (note the capital letters) are for use by user programs.  The traps
  361                      ;;; with names such as open and close (lower case) are for use by the OS.
  362                      ;;;
  365  000013fc          	.align 2
  367                      ;;; The following are the traps to be used by user-level programs
  368                      ;;;
  370  000013fc          	.align 2
  371  000013fc          	.proc _Open
  372  000013fc          	.global _Open
  373  000013fc          	_Open:
  374                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  375                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  376                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  377  000013fc  44000213	trap	#0x213
  378  00001400  4be00000	jr	r31
  379  00001404  54000000	nop
  380  00001408          	.endproc _Open
  382  00001408          	.proc _Close
  383  00001408          	.global _Close
  384  00001408          	_Close:
  385  00001408  44000214	trap	#0x214
  386  0000140c  4be00000	jr	r31
  387  00001410  54000000	nop
  388  00001414          	.endproc _Close
  390  00001414          	.proc _Read
  391  00001414          	.global _Read
  392  00001414          	_Read:
  393  00001414  44000210	trap	#0x210
  394  00001418  4be00000	jr	r31
  395  0000141c  54000000	nop
  396  00001420          	.endproc _Read
  398  00001420          	.proc _Write
  399  00001420          	.global _Write
  400  00001420          	_Write:
  401  00001420  44000211	trap	#0x211
  402  00001424  4be00000	jr	r31
  403  00001428  54000000	nop
  404  0000142c          	.endproc _Write
  406  0000142c          	.proc _Lseek
  407  0000142c          	.global _Lseek
  408  0000142c          	_Lseek:
  409  0000142c  44000212	trap	#0x212
  410  00001430  4be00000	jr	r31
  411  00001434  54000000	nop
  412  00001438          	.endproc _Lseek
  414  00001438          	.proc _Putchar
  415  00001438          	.global _Putchar
  416  00001438          	_Putchar:
  417  00001438  44000280	trap	#0x280
  418  0000143c  4be00000	jr	r31
  419  00001440  54000000	nop
  420  00001444          	.endproc _Putchar
  422  00001444          	.proc _Printf
  423  00001444          	.global _Printf
  424  00001444          	_Printf:
  425  00001444  44000201	trap	#0x201
  426  00001448  4be00000	jr	r31
  427  0000144c  54000000	nop
  428  00001450          	.endproc _Printf
  430  00001450          	.proc _getpid
  431  00001450          	.global _getpid
  432  00001450          	_getpid:
  433  00001450  44000431	trap	#0x431
  434  00001454  4be00000	jr	r31
  435  00001458  54000000	nop
  436  0000145c          	.endproc _getpid
  438  0000145c          	.proc _process_create
  439  0000145c          	.global _process_create
  440  0000145c          	_process_create:
  441  0000145c  44000432	trap	#0x432
  442  00001460  4be00000	jr	r31
  443  00001464  54000000	nop
  444  00001468          	.endproc _process_create
  446  00001468          	.proc _shmget
  447  00001468          	.global _shmget
  448  00001468          	_shmget:
  449  00001468  44000440	trap	#0x440
  450  0000146c  4be00000	jr	r31
  451  00001470  54000000	nop
  452  00001474          	.endproc _shmget
  454  00001474          	.proc _shmat
  455  00001474          	.global _shmat
  456  00001474          	_shmat:
  457  00001474  44000441	trap	#0x441
  458  00001478  4be00000	jr	r31
  459  0000147c  54000000	nop
  460  00001480          	.endproc _shmat
  462  00001480          	.proc _sem_create
  463  00001480          	.global _sem_create
  464  00001480          	_sem_create:
  465  00001480  44000450	trap	#0x450
  466  00001484  4be00000	jr	r31
  467  00001488  54000000	nop
  468  0000148c          	.endproc _sem_create
  470  0000148c          	.proc _sem_wait
  471  0000148c          	.global _sem_wait
  472  0000148c          	_sem_wait:
  473  0000148c  44000451	trap	#0x451
  474  00001490  4be00000	jr	r31
  475  00001494  54000000	nop
  476  00001498          	.endproc _sem_wait
  478  00001498          	.proc _sem_signal
  479  00001498          	.global _sem_signal
  480  00001498          	_sem_signal:
  481  00001498  44000452	trap	#0x452
  482  0000149c  4be00000	jr	r31
  483  000014a0  54000000	nop
  484  000014a4          	.endproc _sem_signal
  486  000014a4          	.proc _lock_create
  487  000014a4          	.global _lock_create
  488  000014a4          	_lock_create:
  489  000014a4  44000453	trap	#0x453
  490  000014a8  4be00000	jr	r31
  491  000014ac  54000000	nop
  492  000014b0          	.endproc _lock_create
  494  000014b0          	.proc _lock_acquire
  495  000014b0          	.global _lock_acquire
  496  000014b0          	_lock_acquire:
  497  000014b0  44000454	trap	#0x454
  498  000014b4  4be00000	jr	r31
  499  000014b8  54000000	nop
  500  000014bc          	.endproc _lock_acquire
  502  000014bc          	.proc _lock_release
  503  000014bc          	.global _lock_release
  504  000014bc          	_lock_release:
  505  000014bc  44000455	trap	#0x455
  506  000014c0  4be00000	jr	r31
  507  000014c4  54000000	nop
  508  000014c8          	.endproc _lock_release
  510  000014c8          	.proc _cond_create
  511  000014c8          	.global _cond_create
  512  000014c8          	_cond_create:
  513  000014c8  44000456	trap	#0x456
  514  000014cc  4be00000	jr	r31
  515  000014d0  54000000	nop
  516  000014d4          	.endproc _cond_create
  518  000014d4          	.proc _cond_wait
  519  000014d4          	.global _cond_wait
  520  000014d4          	_cond_wait:
  521  000014d4  44000457	trap	#0x457
  522  000014d8  4be00000	jr	r31
  523  000014dc  54000000	nop
  524  000014e0          	.endproc _cond_wait
  526  000014e0          	.proc _cond_signal
  527  000014e0          	.global _cond_signal
  528  000014e0          	_cond_signal:
  529  000014e0  44000458	trap	#0x458
  530  000014e4  4be00000	jr	r31
  531  000014e8  54000000	nop
  532  000014ec          	.endproc _cond_signal
  534  000014ec          	.proc _cond_broadcast
  535  000014ec          	.global _cond_broadcast
  536  000014ec          	_cond_broadcast:
  537  000014ec  44000459	trap	#0x459
  538  000014f0  4be00000	jr	r31
  539  000014f4  54000000	nop
  540  000014f8          	.endproc _cond_broadcast
  542  000014f8          	.proc _mbox_create
  543  000014f8          	.global _mbox_create
  544  000014f8          	_mbox_create:
  545  000014f8  44000460	trap	#0x460
  546  000014fc  4be00000	jr	r31
  547  00001500  54000000	nop
  548  00001504          	.endproc _mbox_create
  550  00001504          	.proc _mbox_open
  551  00001504          	.global _mbox_open
  552  00001504          	_mbox_open:
  553  00001504  44000461	trap	#0x461
  554  00001508  4be00000	jr	r31
  555  0000150c  54000000	nop
  556  00001510          	.endproc _mbox_open
  558  00001510          	.proc _mbox_close
  559  00001510          	.global _mbox_close
  560  00001510          	_mbox_close:
  561  00001510  44000462	trap	#0x462
  562  00001514  4be00000	jr	r31
  563  00001518  54000000	nop
  564  0000151c          	.endproc _mbox_close
  566  0000151c          	.proc _mbox_send
  567  0000151c          	.global _mbox_send
  568  0000151c          	_mbox_send:
  569  0000151c  44000463	trap	#0x463
  570  00001520  4be00000	jr	r31
  571  00001524  54000000	nop
  572  00001528          	.endproc _mbox_send
  574  00001528          	.proc _mbox_recv
  575  00001528          	.global _mbox_recv
  576  00001528          	_mbox_recv:
  577  00001528  44000464	trap	#0x464
  578  0000152c  4be00000	jr	r31
  579  00001530  54000000	nop
  580  00001534          	.endproc _mbox_recv
  582  00001534          	.proc _sleep
  583  00001534          	.global _sleep
  584  00001534          	_sleep:
  585  00001534  44000465	trap	#0x465
  586  00001538  4be00000	jr	r31
  587  0000153c  54000000	nop
  588  00001540          	.endproc _sleep
  590  00001540          	.proc _yield
  591  00001540          	.global _yield
  592  00001540          	_yield:
  593  00001540  44000466	trap	#0x466
  594  00001544  4be00000	jr	r31
  595  00001548  54000000	nop
  596  0000154c          	.endproc _yield
  599  0000154c          	.proc _Exit
  600  0000154c          	.global _Exit
  601  0000154c          	_Exit:
  602  0000154c  44000500	trap	#0x500
  603  00001550  4be00000	jr	r31
  604  00001554  54000000	nop
  605  00001558          	.endproc _Exit
  608  00001558          	.proc _malloc
  609  00001558          	.global _malloc
  610  00001558          	_malloc:
  611  00001558  44000467	trap	#0x467
  612  0000155c  4be00000	jr	r31
  613  00001560          	.endproc _malloc
  616  00001560          	.proc _mfree
  617  00001560          	.global _mfree
  618  00001560          	_mfree:
  619  00001560  44000468	trap	#0x468
  620  00001564  4be00000	jr	r31
  621  00001568          	.endproc _mfree
  622                      ; Compiled by GCC
  624  00001568          	.align 2
  625  00001568          	.proc _isspace
  626  00001568          	.global _isspace
  627  00001568          	_isspace:
  628                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  629  00001568  afbefffc	sw	-4(r29),r30; push fp
  630  0000156c  001df020	add	r30,r0,r29; fp = sp
  631  00001570  afbffff8	sw	-8(r29),r31; push ret addr
  632  00001574  2fbd0018	subui	r29,r29,#24; alloc local storage
  633  00001578  afa20000	sw	0(r29),r2
  634  0000157c  afa30004	sw	4(r29),r3
  635  00001580  afa40008	sw	8(r29),r4
  636  00001584  83c20003	lb	r2,3(r30)
  637  00001588  20010000	addi	r1,r0,#0
  638  0000158c  304300ff	andi	r3,r2,#0x00ff
  639  00001590  60640020	seqi	r4,r3,#32
  640  00001594  1480002c	bnez	r4,L3_LF2
  641  00001598  54000000	nop; delay slot nop
  642  0000159c  304300ff	andi	r3,r2,#0x00ff
  643  000015a0  60640009	seqi	r4,r3,#9
  644  000015a4  1480001c	bnez	r4,L3_LF2
  645  000015a8  54000000	nop; delay slot nop
  646  000015ac  304300ff	andi	r3,r2,#0x00ff
  647  000015b0  6064000a	seqi	r4,r3,#10
  648  000015b4  1480000c	bnez	r4,L3_LF2
  649  000015b8  54000000	nop; delay slot nop
  650  000015bc  08000008	j	L2_LF2
  651  000015c0  54000000	nop; delay slot nop
  652  000015c4          	L3_LF2:
  653  000015c4  20010001	addi	r1,r0,#1
  654  000015c8          	L2_LF2:
  655  000015c8  08000004	j	L1_LF2
  656  000015cc  54000000	nop; delay slot nop
  657  000015d0          	L1_LF2:
  658  000015d0  8fa20000	lw	r2,0(r29)
  659  000015d4  8fa30004	lw	r3,4(r29)
  660  000015d8  8fa40008	lw	r4,8(r29)
  661  000015dc  8fdffff8	lw	r31,-8(r30)
  662  000015e0  001ee820	add	r29,r0,r30
  663  000015e4  8fdefffc	lw	r30,-4(r30)
  664  000015e8  4be00000	jr	r31
  665  000015ec  54000000	nop
  666  000015f0          	.endproc _isspace
  667  000015f0          	.align 2
  668  000015f0          	.proc _isxdigit
  669  000015f0          	.global _isxdigit
  670  000015f0          	_isxdigit:
  671                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  672  000015f0  afbefffc	sw	-4(r29),r30; push fp
  673  000015f4  001df020	add	r30,r0,r29; fp = sp
  674  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  675  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  676  00001600  afa20000	sw	0(r29),r2
  677  00001604  afa30004	sw	4(r29),r3
  678  00001608  afa40008	sw	8(r29),r4
  679  0000160c  83c20003	lb	r2,3(r30)
  680  00001610  20010000	addi	r1,r0,#0
  681  00001614  304300ff	andi	r3,r2,#0x00ff
  682  00001618  6c64002f	sgtui	r4,r3,#47
  683  0000161c  1080001c	beqz	r4,L7_LF2
  684  00001620  54000000	nop; delay slot nop
  685  00001624  304300ff	andi	r3,r2,#0x00ff
  686  00001628  70640039	sleui	r4,r3,#57
  687  0000162c  1480005c	bnez	r4,L6_LF2
  688  00001630  54000000	nop; delay slot nop
  689  00001634  08000004	j	L7_LF2
  690  00001638  54000000	nop; delay slot nop
  691  0000163c          	L7_LF2:
  692  0000163c  304300ff	andi	r3,r2,#0x00ff
  693  00001640  6c640060	sgtui	r4,r3,#96
  694  00001644  1080001c	beqz	r4,L8_LF2
  695  00001648  54000000	nop; delay slot nop
  696  0000164c  304300ff	andi	r3,r2,#0x00ff
  697  00001650  70640066	sleui	r4,r3,#102
  698  00001654  14800034	bnez	r4,L6_LF2
  699  00001658  54000000	nop; delay slot nop
  700  0000165c  08000004	j	L8_LF2
  701  00001660  54000000	nop; delay slot nop
  702  00001664          	L8_LF2:
  703  00001664  304300ff	andi	r3,r2,#0x00ff
  704  00001668  6c640040	sgtui	r4,r3,#64
  705  0000166c  10800020	beqz	r4,L5_LF2
  706  00001670  54000000	nop; delay slot nop
  707  00001674  304300ff	andi	r3,r2,#0x00ff
  708  00001678  70640041	sleui	r4,r3,#65
  709  0000167c  1480000c	bnez	r4,L6_LF2
  710  00001680  54000000	nop; delay slot nop
  711  00001684  08000008	j	L5_LF2
  712  00001688  54000000	nop; delay slot nop
  713  0000168c          	L6_LF2:
  714  0000168c  20010001	addi	r1,r0,#1
  715  00001690          	L5_LF2:
  716  00001690  08000004	j	L4_LF2
  717  00001694  54000000	nop; delay slot nop
  718  00001698          	L4_LF2:
  719  00001698  8fa20000	lw	r2,0(r29)
  720  0000169c  8fa30004	lw	r3,4(r29)
  721  000016a0  8fa40008	lw	r4,8(r29)
  722  000016a4  8fdffff8	lw	r31,-8(r30)
  723  000016a8  001ee820	add	r29,r0,r30
  724  000016ac  8fdefffc	lw	r30,-4(r30)
  725  000016b0  4be00000	jr	r31
  726  000016b4  54000000	nop
  727  000016b8          	.endproc _isxdigit
  728  000016b8          	.align 2
  729  000016b8          	.proc _dstrcpy
  730  000016b8          	.global _dstrcpy
  731  000016b8          	_dstrcpy:
  732                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  733  000016b8  afbefffc	sw	-4(r29),r30; push fp
  734  000016bc  001df020	add	r30,r0,r29; fp = sp
  735  000016c0  afbffff8	sw	-8(r29),r31; push ret addr
  736  000016c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  000016c8  afa20000	sw	0(r29),r2
  738  000016cc  afa30004	sw	4(r29),r3
  739  000016d0  8fc10000	lw	r1,(r30)
  740  000016d4  afc1fff4	sw	-12(r30),r1
  741  000016d8          	L10_LF2:
  742  000016d8  8fc10000	lw	r1,(r30)
  743  000016dc  20220001	addi	r2,r1,#1
  744  000016e0  afc20000	sw	(r30),r2
  745  000016e4  8fc20004	lw	r2,4(r30)
  746  000016e8  20430001	addi	r3,r2,#1
  747  000016ec  afc30004	sw	4(r30),r3
  748  000016f0  80420000	lb	r2,(r2)
  749  000016f4  a0220000	sb	(r1),r2
  750  000016f8  a3c2fff3	sb	-13(r30),r2
  751  000016fc          	L12_LF2:
  752  000016fc  93c1fff3	lbu	r1,-13(r30)
  753  00001700  64220000	snei	r2,r1,#0
  754  00001704  1440000c	bnez	r2,L13_LF2
  755  00001708  54000000	nop; delay slot nop
  756  0000170c  0800000c	j	L11_LF2
  757  00001710  54000000	nop; delay slot nop
  758  00001714          	L13_LF2:
  759  00001714  0bffffc0	j	L10_LF2
  760  00001718  54000000	nop; delay slot nop
  761  0000171c          	L11_LF2:
  762  0000171c  8fc1fff4	lw	r1,-12(r30)
  763  00001720  08000004	j	L9_LF2
  764  00001724  54000000	nop; delay slot nop
  765  00001728          	L9_LF2:
  766  00001728  8fa20000	lw	r2,0(r29)
  767  0000172c  8fa30004	lw	r3,4(r29)
  768  00001730  8fdffff8	lw	r31,-8(r30)
  769  00001734  001ee820	add	r29,r0,r30
  770  00001738  8fdefffc	lw	r30,-4(r30)
  771  0000173c  4be00000	jr	r31
  772  00001740  54000000	nop
  773  00001744          	.endproc _dstrcpy
  774  00001744          	.align 2
  775  00001744          	.proc _dstrncpy
  776  00001744          	.global _dstrncpy
  777  00001744          	_dstrncpy:
  778                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  779  00001744  afbefffc	sw	-4(r29),r30; push fp
  780  00001748  001df020	add	r30,r0,r29; fp = sp
  781  0000174c  afbffff8	sw	-8(r29),r31; push ret addr
  782  00001750  2fbd0018	subui	r29,r29,#24; alloc local storage
  783  00001754  afa20000	sw	0(r29),r2
  784  00001758  afa30004	sw	4(r29),r3
  785  0000175c  8fc10000	lw	r1,(r30)
  786  00001760  afc1fff4	sw	-12(r30),r1
  787  00001764          	L15_LF2:
  788  00001764  8fc10008	lw	r1,8(r30)
  789  00001768  2022ffff	addi	r2,r1,#-1
  790  0000176c  afc20008	sw	8(r30),r2
  791  00001770  70210000	slei	r1,r1,#0
  792  00001774  1020000c	beqz	r1,L18_LF2
  793  00001778  54000000	nop; delay slot nop
  794  0000177c  08000048	j	L16_LF2
  795  00001780  54000000	nop; delay slot nop
  796  00001784          	L18_LF2:
  797  00001784  8fc10000	lw	r1,(r30)
  798  00001788  20220001	addi	r2,r1,#1
  799  0000178c  afc20000	sw	(r30),r2
  800  00001790  8fc20004	lw	r2,4(r30)
  801  00001794  20430001	addi	r3,r2,#1
  802  00001798  afc30004	sw	4(r30),r3
  803  0000179c  80420000	lb	r2,(r2)
  804  000017a0  a0220000	sb	(r1),r2
  805  000017a4  a3c2fff3	sb	-13(r30),r2
  806  000017a8          	L17_LF2:
  807  000017a8  93c1fff3	lbu	r1,-13(r30)
  808  000017ac  64220000	snei	r2,r1,#0
  809  000017b0  1440000c	bnez	r2,L19_LF2
  810  000017b4  54000000	nop; delay slot nop
  811  000017b8  0800000c	j	L16_LF2
  812  000017bc  54000000	nop; delay slot nop
  813  000017c0          	L19_LF2:
  814  000017c0  0bffffa0	j	L15_LF2
  815  000017c4  54000000	nop; delay slot nop
  816  000017c8          	L16_LF2:
  817  000017c8  8fc1fff4	lw	r1,-12(r30)
  818  000017cc  08000004	j	L14_LF2
  819  000017d0  54000000	nop; delay slot nop
  820  000017d4          	L14_LF2:
  821  000017d4  8fa20000	lw	r2,0(r29)
  822  000017d8  8fa30004	lw	r3,4(r29)
  823  000017dc  8fdffff8	lw	r31,-8(r30)
  824  000017e0  001ee820	add	r29,r0,r30
  825  000017e4  8fdefffc	lw	r30,-4(r30)
  826  000017e8  4be00000	jr	r31
  827  000017ec  54000000	nop
  828  000017f0          	.endproc _dstrncpy
  829  000017f0          	.align 2
  830  000017f0          	.proc _dstrcat
  831  000017f0          	.global _dstrcat
  832  000017f0          	_dstrcat:
  833                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  834  000017f0  afbefffc	sw	-4(r29),r30; push fp
  835  000017f4  001df020	add	r30,r0,r29; fp = sp
  836  000017f8  afbffff8	sw	-8(r29),r31; push ret addr
  837  000017fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  838  00001800  afa20000	sw	0(r29),r2
  839  00001804  8fc10000	lw	r1,(r30)
  840  00001808  afc1fff4	sw	-12(r30),r1
  841  0000180c          	L21_LF2:
  842  0000180c  8fc10000	lw	r1,(r30)
  843  00001810  90220000	lbu	r2,(r1)
  844  00001814  64410000	snei	r1,r2,#0
  845  00001818  1420000c	bnez	r1,L23_LF2
  846  0000181c  54000000	nop; delay slot nop
  847  00001820  0800001c	j	L22_LF2
  848  00001824  54000000	nop; delay slot nop
  849  00001828          	L23_LF2:
  850  00001828  8fc20000	lw	r2,(r30)
  851  0000182c  20410001	addi	r1,r2,#1
  852  00001830  00011020	add	r2,r0,r1
  853  00001834  afc20000	sw	(r30),r2
  854  00001838  0bffffd0	j	L21_LF2
  855  0000183c  54000000	nop; delay slot nop
  856  00001840          	L22_LF2:
  857  00001840  23bdfff8	addi	r29,r29,#-8
  858  00001844  001d0820	add	r1,r0,r29
  859  00001848  8fc20000	lw	r2,(r30)
  860  0000184c  ac220000	sw	(r1),r2
  861  00001850  8fc20004	lw	r2,4(r30)
  862  00001854  ac220004	sw	4(r1),r2
  863  00001858  0ffffe5c	jal	_dstrcpy
  864  0000185c  54000000	nop; delay slot nop
  865  00001860  23bd0008	addi	r29,r29,#8
  866  00001864  8fc1fff4	lw	r1,-12(r30)
  867  00001868  08000004	j	L20_LF2
  868  0000186c  54000000	nop; delay slot nop
  869  00001870          	L20_LF2:
  870  00001870  8fa20000	lw	r2,0(r29)
  871  00001874  8fdffff8	lw	r31,-8(r30)
  872  00001878  001ee820	add	r29,r0,r30
  873  0000187c  8fdefffc	lw	r30,-4(r30)
  874  00001880  4be00000	jr	r31
  875  00001884  54000000	nop
  876  00001888          	.endproc _dstrcat
  877  00001888          	.align 2
  878  00001888          	.proc _dstrncmp
  879  00001888          	.global _dstrncmp
  880  00001888          	_dstrncmp:
  881                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  882  00001888  afbefffc	sw	-4(r29),r30; push fp
  883  0000188c  001df020	add	r30,r0,r29; fp = sp
  884  00001890  afbffff8	sw	-8(r29),r31; push ret addr
  885  00001894  2fbd0018	subui	r29,r29,#24; alloc local storage
  886  00001898  afa20000	sw	0(r29),r2
  887  0000189c  afa30004	sw	4(r29),r3
  888  000018a0  54000000	nop
  889  000018a4  20010000	addi	r1,r0,#0
  890  000018a8  afc1fff4	sw	-12(r30),r1
  891  000018ac          	L25_LF2:
  892  000018ac  8fc1fff4	lw	r1,-12(r30)
  893  000018b0  8fc20008	lw	r2,8(r30)
  894  000018b4  0022082a	slt	r1,r1,r2
  895  000018b8  1420000c	bnez	r1,L28_LF2
  896  000018bc  54000000	nop; delay slot nop
  897  000018c0  08000088	j	L26_LF2
  898  000018c4  54000000	nop; delay slot nop
  899  000018c8          	L28_LF2:
  900  000018c8  8fc10004	lw	r1,4(r30)
  901  000018cc  90220000	lbu	r2,(r1)
  902  000018d0  64410000	snei	r1,r2,#0
  903  000018d4  14200018	bnez	r1,L29_LF2
  904  000018d8  54000000	nop; delay slot nop
  905  000018dc  20010000	addi	r1,r0,#0
  906  000018e0  080000d8	j	L24_LF2
  907  000018e4  54000000	nop; delay slot nop
  908  000018e8  08000028	j	L30_LF2
  909  000018ec  54000000	nop; delay slot nop
  910  000018f0          	L29_LF2:
  911  000018f0  8fc10000	lw	r1,(r30)
  912  000018f4  8fc20004	lw	r2,4(r30)
  913  000018f8  90210000	lbu	r1,(r1)
  914  000018fc  90420000	lbu	r2,(r2)
  915  00001900  00220829	sne	r1,r1,r2
  916  00001904  1020000c	beqz	r1,L30_LF2
  917  00001908  54000000	nop; delay slot nop
  918  0000190c  0800003c	j	L26_LF2
  919  00001910  54000000	nop; delay slot nop
  920  00001914          	L31_LF2:
  921  00001914          	L30_LF2:
  922  00001914  8fc20000	lw	r2,(r30)
  923  00001918  20410001	addi	r1,r2,#1
  924  0000191c  00011020	add	r2,r0,r1
  925  00001920  afc20000	sw	(r30),r2
  926  00001924  8fc20004	lw	r2,4(r30)
  927  00001928  20410001	addi	r1,r2,#1
  928  0000192c  00011020	add	r2,r0,r1
  929  00001930  afc20004	sw	4(r30),r2
  930  00001934          	L27_LF2:
  931  00001934  8fc2fff4	lw	r2,-12(r30)
  932  00001938  20410001	addi	r1,r2,#1
  933  0000193c  00011020	add	r2,r0,r1
  934  00001940  afc2fff4	sw	-12(r30),r2
  935  00001944  0bffff64	j	L25_LF2
  936  00001948  54000000	nop; delay slot nop
  937  0000194c          	L26_LF2:
  938  0000194c  8fc1fff4	lw	r1,-12(r30)
  939  00001950  8fc20008	lw	r2,8(r30)
  940  00001954  00220828	seq	r1,r1,r2
  941  00001958  10200018	beqz	r1,L32_LF2
  942  0000195c  54000000	nop; delay slot nop
  943  00001960  20010000	addi	r1,r0,#0
  944  00001964  08000054	j	L24_LF2
  945  00001968  54000000	nop; delay slot nop
  946  0000196c  0800004c	j	L33_LF2
  947  00001970  54000000	nop; delay slot nop
  948  00001974          	L32_LF2:
  949  00001974  8fc20000	lw	r2,(r30)
  950  00001978  90410000	lbu	r1,(r2)
  951  0000197c  8fc20004	lw	r2,4(r30)
  952  00001980  90430000	lbu	r3,(r2)
  953  00001984  00230822	sub	r1,r1,r3
  954  00001988  74220000	sgei	r2,r1,#0
  955  0000198c  10400020	beqz	r2,L34_LF2
  956  00001990  54000000	nop; delay slot nop
  957  00001994  8fc10000	lw	r1,(r30)
  958  00001998  8fc20004	lw	r2,4(r30)
  959  0000199c  90210000	lbu	r1,(r1)
  960  000019a0  90420000	lbu	r2,(r2)
  961  000019a4  00220829	sne	r1,r1,r2
  962  000019a8  08000008	j	L35_LF2
  963  000019ac  54000000	nop; delay slot nop
  964  000019b0          	L34_LF2:
  965  000019b0  2001ffff	addi	r1,r0,#-1
  966  000019b4          	L35_LF2:
  967  000019b4  08000004	j	L24_LF2
  968  000019b8  54000000	nop; delay slot nop
  969  000019bc          	L33_LF2:
  970  000019bc          	L24_LF2:
  971  000019bc  8fa20000	lw	r2,0(r29)
  972  000019c0  8fa30004	lw	r3,4(r29)
  973  000019c4  8fdffff8	lw	r31,-8(r30)
  974  000019c8  001ee820	add	r29,r0,r30
  975  000019cc  8fdefffc	lw	r30,-4(r30)
  976  000019d0  4be00000	jr	r31
  977  000019d4  54000000	nop
  978  000019d8          	.endproc _dstrncmp
  979  000019d8          	.align 2
  980  000019d8          	.proc _dstrlen
  981  000019d8          	.global _dstrlen
  982  000019d8          	_dstrlen:
  983                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  984  000019d8  afbefffc	sw	-4(r29),r30; push fp
  985  000019dc  001df020	add	r30,r0,r29; fp = sp
  986  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  987  000019e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  988  000019e8  afa20000	sw	0(r29),r2
  989  000019ec  20010000	addi	r1,r0,#0
  990  000019f0  afc1fff4	sw	-12(r30),r1
  991  000019f4          	L37_LF2:
  992  000019f4  8fc10000	lw	r1,(r30)
  993  000019f8  20220001	addi	r2,r1,#1
  994  000019fc  afc20000	sw	(r30),r2
  995  00001a00  90210000	lbu	r1,(r1)
  996  00001a04  64220000	snei	r2,r1,#0
  997  00001a08  1440000c	bnez	r2,L39_LF2
  998  00001a0c  54000000	nop; delay slot nop
  999  00001a10  0800001c	j	L38_LF2
 1000  00001a14  54000000	nop; delay slot nop
 1001  00001a18          	L39_LF2:
 1002  00001a18  8fc2fff4	lw	r2,-12(r30)
 1003  00001a1c  20410001	addi	r1,r2,#1
 1004  00001a20  00011020	add	r2,r0,r1
 1005  00001a24  afc2fff4	sw	-12(r30),r2
 1006  00001a28  0bffffc8	j	L37_LF2
 1007  00001a2c  54000000	nop; delay slot nop
 1008  00001a30          	L38_LF2:
 1009  00001a30  8fc1fff4	lw	r1,-12(r30)
 1010  00001a34  08000004	j	L36_LF2
 1011  00001a38  54000000	nop; delay slot nop
 1012  00001a3c          	L36_LF2:
 1013  00001a3c  8fa20000	lw	r2,0(r29)
 1014  00001a40  8fdffff8	lw	r31,-8(r30)
 1015  00001a44  001ee820	add	r29,r0,r30
 1016  00001a48  8fdefffc	lw	r30,-4(r30)
 1017  00001a4c  4be00000	jr	r31
 1018  00001a50  54000000	nop
 1019  00001a54          	.endproc _dstrlen
 1020  00001a54          	.align 2
 1021  00001a54          	.proc _dstrstr
 1022  00001a54          	.global _dstrstr
 1023  00001a54          	_dstrstr:
 1024                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1025  00001a54  afbefffc	sw	-4(r29),r30; push fp
 1026  00001a58  001df020	add	r30,r0,r29; fp = sp
 1027  00001a5c  afbffff8	sw	-8(r29),r31; push ret addr
 1028  00001a60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1029  00001a64  afa20000	sw	0(r29),r2
 1030  00001a68  23bdfff8	addi	r29,r29,#-8
 1031  00001a6c  001d0820	add	r1,r0,r29
 1032  00001a70  8fc20004	lw	r2,4(r30)
 1033  00001a74  ac220000	sw	(r1),r2
 1034  00001a78  0fffff5c	jal	_dstrlen
 1035  00001a7c  54000000	nop; delay slot nop
 1036  00001a80  23bd0008	addi	r29,r29,#8
 1037  00001a84  afc1fff4	sw	-12(r30),r1
 1038  00001a88          	L41_LF2:
 1039  00001a88  8fc10000	lw	r1,(r30)
 1040  00001a8c  90220000	lbu	r2,(r1)
 1041  00001a90  64410000	snei	r1,r2,#0
 1042  00001a94  1420000c	bnez	r1,L43_LF2
 1043  00001a98  54000000	nop; delay slot nop
 1044  00001a9c  08000060	j	L42_LF2
 1045  00001aa0  54000000	nop; delay slot nop
 1046  00001aa4          	L43_LF2:
 1047  00001aa4  23bdfff0	addi	r29,r29,#-16
 1048  00001aa8  001d0820	add	r1,r0,r29
 1049  00001aac  8fc20000	lw	r2,(r30)
 1050  00001ab0  ac220000	sw	(r1),r2
 1051  00001ab4  8fc20004	lw	r2,4(r30)
 1052  00001ab8  ac220004	sw	4(r1),r2
 1053  00001abc  8fc2fff4	lw	r2,-12(r30)
 1054  00001ac0  ac220008	sw	8(r1),r2
 1055  00001ac4  0ffffdc0	jal	_dstrncmp
 1056  00001ac8  54000000	nop; delay slot nop
 1057  00001acc  23bd0010	addi	r29,r29,#16
 1058  00001ad0  64220000	snei	r2,r1,#0
 1059  00001ad4  14400010	bnez	r2,L44_LF2
 1060  00001ad8  54000000	nop; delay slot nop
 1061  00001adc  8fc10000	lw	r1,(r30)
 1062  00001ae0  08000028	j	L40_LF2
 1063  00001ae4  54000000	nop; delay slot nop
 1064  00001ae8          	L44_LF2:
 1065  00001ae8  8fc20000	lw	r2,(r30)
 1066  00001aec  20410001	addi	r1,r2,#1
 1067  00001af0  00011020	add	r2,r0,r1
 1068  00001af4  afc20000	sw	(r30),r2
 1069  00001af8  0bffff8c	j	L41_LF2
 1070  00001afc  54000000	nop; delay slot nop
 1071  00001b00          	L42_LF2:
 1072  00001b00  20010000	addi	r1,r0,#0
 1073  00001b04  08000004	j	L40_LF2
 1074  00001b08  54000000	nop; delay slot nop
 1075  00001b0c          	L40_LF2:
 1076  00001b0c  8fa20000	lw	r2,0(r29)
 1077  00001b10  8fdffff8	lw	r31,-8(r30)
 1078  00001b14  001ee820	add	r29,r0,r30
 1079  00001b18  8fdefffc	lw	r30,-4(r30)
 1080  00001b1c  4be00000	jr	r31
 1081  00001b20  54000000	nop
 1082  00001b24          	.endproc _dstrstr
 1083  00001b24          	.align 2
 1084  00001b24          	.proc _dmindex
 1085  00001b24          	.global _dmindex
 1086  00001b24          	_dmindex:
 1087                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1088  00001b24  afbefffc	sw	-4(r29),r30; push fp
 1089  00001b28  001df020	add	r30,r0,r29; fp = sp
 1090  00001b2c  afbffff8	sw	-8(r29),r31; push ret addr
 1091  00001b30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1092  00001b34  afa20000	sw	0(r29),r2
 1093  00001b38  54000000	nop
 1094  00001b3c          	L46_LF2:
 1095  00001b3c  8fc10000	lw	r1,(r30)
 1096  00001b40  90220000	lbu	r2,(r1)
 1097  00001b44  64410000	snei	r1,r2,#0
 1098  00001b48  1420000c	bnez	r1,L48_LF2
 1099  00001b4c  54000000	nop; delay slot nop
 1100  00001b50  08000070	j	L47_LF2
 1101  00001b54  54000000	nop; delay slot nop
 1102  00001b58          	L48_LF2:
 1103  00001b58  8fc10004	lw	r1,4(r30)
 1104  00001b5c  afc1fff4	sw	-12(r30),r1
 1105  00001b60          	L49_LF2:
 1106  00001b60  8fc1fff4	lw	r1,-12(r30)
 1107  00001b64  90220000	lbu	r2,(r1)
 1108  00001b68  64410000	snei	r1,r2,#0
 1109  00001b6c  1420000c	bnez	r1,L52_LF2
 1110  00001b70  54000000	nop; delay slot nop
 1111  00001b74  08000044	j	L50_LF2
 1112  00001b78  54000000	nop; delay slot nop
 1113  00001b7c          	L52_LF2:
 1114  00001b7c  8fc10000	lw	r1,(r30)
 1115  00001b80  8fc2fff4	lw	r2,-12(r30)
 1116  00001b84  90210000	lbu	r1,(r1)
 1117  00001b88  90420000	lbu	r2,(r2)
 1118  00001b8c  00220828	seq	r1,r1,r2
 1119  00001b90  10200010	beqz	r1,L51_LF2
 1120  00001b94  54000000	nop; delay slot nop
 1121  00001b98  8fc10000	lw	r1,(r30)
 1122  00001b9c  08000030	j	L45_LF2
 1123  00001ba0  54000000	nop; delay slot nop
 1124  00001ba4          	L53_LF2:
 1125  00001ba4          	L51_LF2:
 1126  00001ba4  8fc2fff4	lw	r2,-12(r30)
 1127  00001ba8  20410001	addi	r1,r2,#1
 1128  00001bac  00011020	add	r2,r0,r1
 1129  00001bb0  afc2fff4	sw	-12(r30),r2
 1130  00001bb4  0bffffa8	j	L49_LF2
 1131  00001bb8  54000000	nop; delay slot nop
 1132  00001bbc          	L50_LF2:
 1133  00001bbc  0bffff7c	j	L46_LF2
 1134  00001bc0  54000000	nop; delay slot nop
 1135  00001bc4          	L47_LF2:
 1136  00001bc4  20010000	addi	r1,r0,#0
 1137  00001bc8  08000004	j	L45_LF2
 1138  00001bcc  54000000	nop; delay slot nop
 1139  00001bd0          	L45_LF2:
 1140  00001bd0  8fa20000	lw	r2,0(r29)
 1141  00001bd4  8fdffff8	lw	r31,-8(r30)
 1142  00001bd8  001ee820	add	r29,r0,r30
 1143  00001bdc  8fdefffc	lw	r30,-4(r30)
 1144  00001be0  4be00000	jr	r31
 1145  00001be4  54000000	nop
 1146  00001be8          	.endproc _dmindex
 1147  00001be8          	.align 2
 1148  00001be8          	.proc _dindex
 1149  00001be8          	.global _dindex
 1150  00001be8          	_dindex:
 1151                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1152  00001be8  afbefffc	sw	-4(r29),r30; push fp
 1153  00001bec  001df020	add	r30,r0,r29; fp = sp
 1154  00001bf0  afbffff8	sw	-8(r29),r31; push ret addr
 1155  00001bf4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1156  00001bf8  afa20000	sw	0(r29),r2
 1157  00001bfc  54000000	nop
 1158  00001c00          	L55_LF2:
 1159  00001c00  8fc10000	lw	r1,(r30)
 1160  00001c04  90220000	lbu	r2,(r1)
 1161  00001c08  64410000	snei	r1,r2,#0
 1162  00001c0c  1420000c	bnez	r1,L57_LF2
 1163  00001c10  54000000	nop; delay slot nop
 1164  00001c14  08000040	j	L56_LF2
 1165  00001c18  54000000	nop; delay slot nop
 1166  00001c1c          	L57_LF2:
 1167  00001c1c  8fc10000	lw	r1,(r30)
 1168  00001c20  90220000	lbu	r2,(r1)
 1169  00001c24  8fc10004	lw	r1,4(r30)
 1170  00001c28  00411028	seq	r2,r2,r1
 1171  00001c2c  10400010	beqz	r2,L58_LF2
 1172  00001c30  54000000	nop; delay slot nop
 1173  00001c34  8fc10000	lw	r1,(r30)
 1174  00001c38  08000028	j	L54_LF2
 1175  00001c3c  54000000	nop; delay slot nop
 1176  00001c40          	L58_LF2:
 1177  00001c40  8fc20000	lw	r2,(r30)
 1178  00001c44  20410001	addi	r1,r2,#1
 1179  00001c48  00011020	add	r2,r0,r1
 1180  00001c4c  afc20000	sw	(r30),r2
 1181  00001c50  0bffffac	j	L55_LF2
 1182  00001c54  54000000	nop; delay slot nop
 1183  00001c58          	L56_LF2:
 1184  00001c58  20010000	addi	r1,r0,#0
 1185  00001c5c  08000004	j	L54_LF2
 1186  00001c60  54000000	nop; delay slot nop
 1187  00001c64          	L54_LF2:
 1188  00001c64  8fa20000	lw	r2,0(r29)
 1189  00001c68  8fdffff8	lw	r31,-8(r30)
 1190  00001c6c  001ee820	add	r29,r0,r30
 1191  00001c70  8fdefffc	lw	r30,-4(r30)
 1192  00001c74  4be00000	jr	r31
 1193  00001c78  54000000	nop
 1194  00001c7c          	.endproc _dindex
 1195  00001c7c          	.align 2
 1196  00001c7c          	.proc _ditoa
 1197  00001c7c          	.global _ditoa
 1198  00001c7c          	_ditoa:
 1199                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1200  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1201  00001c80  001df020	add	r30,r0,r29; fp = sp
 1202  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1203  00001c88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1204  00001c8c  afa20000	sw	0(r29),r2
 1205  00001c90  afa30004	sw	4(r29),r3
 1206  00001c94  8fc10000	lw	r1,(r30)
 1207  00001c98  68220000	slti	r2,r1,#0
 1208  00001c9c  1040002c	beqz	r2,L60_LF2
 1209  00001ca0  54000000	nop; delay slot nop
 1210  00001ca4  8fc10004	lw	r1,4(r30)
 1211  00001ca8  20220001	addi	r2,r1,#1
 1212  00001cac  afc20004	sw	4(r30),r2
 1213  00001cb0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1214  00001cb4  a0220000	sb	(r1),r2
 1215  00001cb8  8fc10000	lw	r1,(r30)
 1216  00001cbc  00011022	sub	r2,r0,r1
 1217  00001cc0  afc20000	sw	(r30),r2
 1218  00001cc4  08000118	j	L61_LF2
 1219  00001cc8  54000000	nop; delay slot nop
 1220  00001ccc          	L60_LF2:
 1221  00001ccc  8fc10000	lw	r1,(r30)
 1222  00001cd0  64220000	snei	r2,r1,#0
 1223  00001cd4  14400020	bnez	r2,L62_LF2
 1224  00001cd8  54000000	nop; delay slot nop
 1225  00001cdc  8fc10004	lw	r1,4(r30)
 1226  00001ce0  20220001	addi	r2,r1,#1
 1227  00001ce4  afc20004	sw	4(r30),r2
 1228  00001ce8  20020030	addi	r2,r0,(#0x30)&0xff
 1229  00001cec  a0220000	sb	(r1),r2
 1230  00001cf0  080000ec	j	L61_LF2
 1231  00001cf4  54000000	nop; delay slot nop
 1232  00001cf8          	L62_LF2:
 1233  00001cf8  20010001	addi	r1,r0,#1
 1234  00001cfc  afc1fff4	sw	-12(r30),r1
 1235  00001d00          	L64_LF2:
 1236  00001d00  8fc1fff4	lw	r1,-12(r30)
 1237  00001d04  8fc20000	lw	r2,(r30)
 1238  00001d08  0022082c	sle	r1,r1,r2
 1239  00001d0c  1420000c	bnez	r1,L66_LF2
 1240  00001d10  54000000	nop; delay slot nop
 1241  00001d14  08000024	j	L65_LF2
 1242  00001d18  54000000	nop; delay slot nop
 1243  00001d1c          	L67_LF2:
 1244  00001d1c          	L66_LF2:
 1245  00001d1c  8fc1fff4	lw	r1,-12(r30)
 1246  00001d20  00011820	add	r3,r0,r1
 1247  00001d24  50620002	slli	r2,r3,#0x2
 1248  00001d28  00411020	add	r2,r2,r1
 1249  00001d2c  50410001	slli	r1,r2,#0x1
 1250  00001d30  afc1fff4	sw	-12(r30),r1
 1251  00001d34  0bffffc8	j	L64_LF2
 1252  00001d38  54000000	nop; delay slot nop
 1253  00001d3c          	L65_LF2:
 1254  00001d3c  54000000	nop
 1255  00001d40          	L68_LF2:
 1256  00001d40  8fc1fff4	lw	r1,-12(r30)
 1257  00001d44  2002000a	addi	r2,r0,#10
 1258  00001d48  00200035	movi2fp	f0,r1
 1259  00001d4c  00400835	movi2fp	f1,r2
 1260  00001d50  0401000f	div	f0,f0,f1
 1261  00001d54  00000834	movfp2i	r1,f0
 1262  00001d58  afc1fff4	sw	-12(r30),r1
 1263  00001d5c  8fc10004	lw	r1,4(r30)
 1264  00001d60  20220001	addi	r2,r1,#1
 1265  00001d64  afc20004	sw	4(r30),r2
 1266  00001d68  8fc20000	lw	r2,(r30)
 1267  00001d6c  8fc3fff4	lw	r3,-12(r30)
 1268  00001d70  00400035	movi2fp	f0,r2
 1269  00001d74  00600835	movi2fp	f1,r3
 1270  00001d78  0401000f	div	f0,f0,f1
 1271  00001d7c  00001034	movfp2i	r2,f0
 1272  00001d80  00021820	add	r3,r0,r2
 1273  00001d84  20620030	addi	r2,r3,#48
 1274  00001d88  a0220000	sb	(r1),r2
 1275  00001d8c  8fc10000	lw	r1,(r30)
 1276  00001d90  8fc3fff4	lw	r3,-12(r30)
 1277  00001d94  00200035	movi2fp	f0,r1
 1278  00001d98  00600835	movi2fp	f1,r3
 1279  00001d9c  0401000f	div	f0,f0,f1
 1280  00001da0  00001034	movfp2i	r2,f0
 1281  00001da4  8fc3fff4	lw	r3,-12(r30)
 1282  00001da8  00400035	movi2fp	f0,r2
 1283  00001dac  00600835	movi2fp	f1,r3
 1284  00001db0  0401000e	mult	f0,f0,f1
 1285  00001db4  00001034	movfp2i	r2,f0
 1286  00001db8  00220822	sub	r1,r1,r2
 1287  00001dbc  afc10000	sw	(r30),r1
 1288  00001dc0          	L70_LF2:
 1289  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1290  00001dc4  6c220001	sgti	r2,r1,#1
 1291  00001dc8  1440000c	bnez	r2,L71_LF2
 1292  00001dcc  54000000	nop; delay slot nop
 1293  00001dd0  0800000c	j	L61_LF2
 1294  00001dd4  54000000	nop; delay slot nop
 1295  00001dd8          	L71_LF2:
 1296  00001dd8  0bffff64	j	L68_LF2
 1297  00001ddc  54000000	nop; delay slot nop
 1298  00001de0          	L69_LF2:
 1299  00001de0          	L63_LF2:
 1300  00001de0          	L61_LF2:
 1301  00001de0  8fc10004	lw	r1,4(r30)
 1302  00001de4  20020000	addi	r2,r0,(#0x0)&0xff
 1303  00001de8  a0220000	sb	(r1),r2
 1304  00001dec          	L59_LF2:
 1305  00001dec  8fa20000	lw	r2,0(r29)
 1306  00001df0  8fa30004	lw	r3,4(r29)
 1307  00001df4  8fdffff8	lw	r31,-8(r30)
 1308  00001df8  001ee820	add	r29,r0,r30
 1309  00001dfc  8fdefffc	lw	r30,-4(r30)
 1310  00001e00  4be00000	jr	r31
 1311  00001e04  54000000	nop
 1312  00001e08          	.endproc _ditoa
 1313  00001e08          	.align 2
 1314  00001e08          	.proc _dstrtol
 1315  00001e08          	.global _dstrtol
 1316  00001e08          	_dstrtol:
 1317                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1318  00001e08  afbefffc	sw	-4(r29),r30; push fp
 1319  00001e0c  001df020	add	r30,r0,r29; fp = sp
 1320  00001e10  afbffff8	sw	-8(r29),r31; push ret addr
 1321  00001e14  2fbd0020	subui	r29,r29,#32; alloc local storage
 1322  00001e18  afa20000	sw	0(r29),r2
 1323  00001e1c  20010000	addi	r1,r0,#0
 1324  00001e20  afc1fff4	sw	-12(r30),r1
 1325  00001e24          	L73_LF2:
 1326  00001e24  8fc10000	lw	r1,(r30)
 1327  00001e28  90220000	lbu	r2,(r1)
 1328  00001e2c  60410020	seqi	r1,r2,#32
 1329  00001e30  14200034	bnez	r1,L75_LF2
 1330  00001e34  54000000	nop; delay slot nop
 1331  00001e38  8fc10000	lw	r1,(r30)
 1332  00001e3c  90220000	lbu	r2,(r1)
 1333  00001e40  60410009	seqi	r1,r2,#9
 1334  00001e44  14200020	bnez	r1,L75_LF2
 1335  00001e48  54000000	nop; delay slot nop
 1336  00001e4c  8fc10000	lw	r1,(r30)
 1337  00001e50  90220000	lbu	r2,(r1)
 1338  00001e54  6041000a	seqi	r1,r2,#10
 1339  00001e58  1420000c	bnez	r1,L75_LF2
 1340  00001e5c  54000000	nop; delay slot nop
 1341  00001e60  0800001c	j	L74_LF2
 1342  00001e64  54000000	nop; delay slot nop
 1343  00001e68          	L75_LF2:
 1344  00001e68  8fc20000	lw	r2,(r30)
 1345  00001e6c  20410001	addi	r1,r2,#1
 1346  00001e70  00011020	add	r2,r0,r1
 1347  00001e74  afc20000	sw	(r30),r2
 1348  00001e78  0bffffa8	j	L73_LF2
 1349  00001e7c  54000000	nop; delay slot nop
 1350  00001e80          	L74_LF2:
 1351  00001e80  8fc10004	lw	r1,4(r30)
 1352  00001e84  64220000	snei	r2,r1,#0
 1353  00001e88  10400010	beqz	r2,L76_LF2
 1354  00001e8c  54000000	nop; delay slot nop
 1355  00001e90  8fc10004	lw	r1,4(r30)
 1356  00001e94  8fc20000	lw	r2,(r30)
 1357  00001e98  ac220000	sw	(r1),r2
 1358  00001e9c          	L76_LF2:
 1359  00001e9c  8fc10000	lw	r1,(r30)
 1360  00001ea0  90220000	lbu	r2,(r1)
 1361  00001ea4  64410000	snei	r1,r2,#0
 1362  00001ea8  14200010	bnez	r1,L77_LF2
 1363  00001eac  54000000	nop; delay slot nop
 1364  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1365  00001eb4  08000294	j	L72_LF2
 1366  00001eb8  54000000	nop; delay slot nop
 1367  00001ebc          	L77_LF2:
 1368  00001ebc  8fc10000	lw	r1,(r30)
 1369  00001ec0  90220000	lbu	r2,(r1)
 1370  00001ec4  6041002d	seqi	r1,r2,#45
 1371  00001ec8  10200024	beqz	r1,L78_LF2
 1372  00001ecc  54000000	nop; delay slot nop
 1373  00001ed0  2001ffff	addi	r1,r0,#-1
 1374  00001ed4  afc1ffec	sw	-20(r30),r1
 1375  00001ed8  8fc20000	lw	r2,(r30)
 1376  00001edc  20410001	addi	r1,r2,#1
 1377  00001ee0  00011020	add	r2,r0,r1
 1378  00001ee4  afc20000	sw	(r30),r2
 1379  00001ee8  0800000c	j	L79_LF2
 1380  00001eec  54000000	nop; delay slot nop
 1381  00001ef0          	L78_LF2:
 1382  00001ef0  20010001	addi	r1,r0,#1
 1383  00001ef4  afc1ffec	sw	-20(r30),r1
 1384  00001ef8          	L79_LF2:
 1385  00001ef8  8fc10008	lw	r1,8(r30)
 1386  00001efc  64220000	snei	r2,r1,#0
 1387  00001f00  14400090	bnez	r2,L80_LF2
 1388  00001f04  54000000	nop; delay slot nop
 1389  00001f08  8fc10000	lw	r1,(r30)
 1390  00001f0c  90220000	lbu	r2,(r1)
 1391  00001f10  60410030	seqi	r1,r2,#48
 1392  00001f14  10200074	beqz	r1,L81_LF2
 1393  00001f18  54000000	nop; delay slot nop
 1394  00001f1c  8fc20000	lw	r2,(r30)
 1395  00001f20  20410001	addi	r1,r2,#1
 1396  00001f24  00011020	add	r2,r0,r1
 1397  00001f28  afc20000	sw	(r30),r2
 1398  00001f2c  8fc10000	lw	r1,(r30)
 1399  00001f30  90220000	lbu	r2,(r1)
 1400  00001f34  60410078	seqi	r1,r2,#120
 1401  00001f38  14200020	bnez	r1,L83_LF2
 1402  00001f3c  54000000	nop; delay slot nop
 1403  00001f40  8fc10000	lw	r1,(r30)
 1404  00001f44  90220000	lbu	r2,(r1)
 1405  00001f48  60410058	seqi	r1,r2,#88
 1406  00001f4c  1420000c	bnez	r1,L83_LF2
 1407  00001f50  54000000	nop; delay slot nop
 1408  00001f54  08000024	j	L82_LF2
 1409  00001f58  54000000	nop; delay slot nop
 1410  00001f5c          	L83_LF2:
 1411  00001f5c  20010010	addi	r1,r0,#16
 1412  00001f60  afc10008	sw	8(r30),r1
 1413  00001f64  8fc20000	lw	r2,(r30)
 1414  00001f68  20410001	addi	r1,r2,#1
 1415  00001f6c  00011020	add	r2,r0,r1
 1416  00001f70  afc20000	sw	(r30),r2
 1417  00001f74  0800000c	j	L84_LF2
 1418  00001f78  54000000	nop; delay slot nop
 1419  00001f7c          	L82_LF2:
 1420  00001f7c  20010008	addi	r1,r0,#8
 1421  00001f80  afc10008	sw	8(r30),r1
 1422  00001f84          	L84_LF2:
 1423  00001f84  0800000c	j	L80_LF2
 1424  00001f88  54000000	nop; delay slot nop
 1425  00001f8c          	L81_LF2:
 1426  00001f8c  2001000a	addi	r1,r0,#10
 1427  00001f90  afc10008	sw	8(r30),r1
 1428  00001f94          	L85_LF2:
 1429  00001f94          	L80_LF2:
 1430  00001f94  8fc10008	lw	r1,8(r30)
 1431  00001f98  70220000	slei	r2,r1,#0
 1432  00001f9c  1440001c	bnez	r2,L87_LF2
 1433  00001fa0  54000000	nop; delay slot nop
 1434  00001fa4  8fc10008	lw	r1,8(r30)
 1435  00001fa8  6c220010	sgti	r2,r1,#16
 1436  00001fac  1440000c	bnez	r2,L87_LF2
 1437  00001fb0  54000000	nop; delay slot nop
 1438  00001fb4  08000010	j	L86_LF2
 1439  00001fb8  54000000	nop; delay slot nop
 1440  00001fbc          	L87_LF2:
 1441  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1442  00001fc0  08000188	j	L72_LF2
 1443  00001fc4  54000000	nop; delay slot nop
 1444  00001fc8          	L86_LF2:
 1445  00001fc8  54000000	nop
 1446  00001fcc          	L88_LF2:
 1447  00001fcc  8fc10000	lw	r1,(r30)
 1448  00001fd0  90220000	lbu	r2,(r1)
 1449  00001fd4  6c41002f	sgtui	r1,r2,#47
 1450  00001fd8  10200030	beqz	r1,L91_LF2
 1451  00001fdc  54000000	nop; delay slot nop
 1452  00001fe0  8fc10000	lw	r1,(r30)
 1453  00001fe4  90220000	lbu	r2,(r1)
 1454  00001fe8  70410039	sleui	r1,r2,#57
 1455  00001fec  1020001c	beqz	r1,L91_LF2
 1456  00001ff0  54000000	nop; delay slot nop
 1457  00001ff4  8fc10000	lw	r1,(r30)
 1458  00001ff8  90220000	lbu	r2,(r1)
 1459  00001ffc  2041ffd0	addi	r1,r2,#-48
 1460  00002000  afc1fff0	sw	-16(r30),r1
 1461  00002004  0800008c	j	L92_LF2
 1462  00002008  54000000	nop; delay slot nop
 1463  0000200c          	L91_LF2:
 1464  0000200c  8fc10000	lw	r1,(r30)
 1465  00002010  90220000	lbu	r2,(r1)
 1466  00002014  6c410060	sgtui	r1,r2,#96
 1467  00002018  10200030	beqz	r1,L93_LF2
 1468  0000201c  54000000	nop; delay slot nop
 1469  00002020  8fc10000	lw	r1,(r30)
 1470  00002024  90220000	lbu	r2,(r1)
 1471  00002028  7041007a	sleui	r1,r2,#122
 1472  0000202c  1020001c	beqz	r1,L93_LF2
 1473  00002030  54000000	nop; delay slot nop
 1474  00002034  8fc10000	lw	r1,(r30)
 1475  00002038  90220000	lbu	r2,(r1)
 1476  0000203c  2041ffa9	addi	r1,r2,#-87
 1477  00002040  afc1fff0	sw	-16(r30),r1
 1478  00002044  0800004c	j	L92_LF2
 1479  00002048  54000000	nop; delay slot nop
 1480  0000204c          	L93_LF2:
 1481  0000204c  8fc10000	lw	r1,(r30)
 1482  00002050  90220000	lbu	r2,(r1)
 1483  00002054  6c410040	sgtui	r1,r2,#64
 1484  00002058  10200030	beqz	r1,L95_LF2
 1485  0000205c  54000000	nop; delay slot nop
 1486  00002060  8fc10000	lw	r1,(r30)
 1487  00002064  90220000	lbu	r2,(r1)
 1488  00002068  7041005a	sleui	r1,r2,#90
 1489  0000206c  1020001c	beqz	r1,L95_LF2
 1490  00002070  54000000	nop; delay slot nop
 1491  00002074  8fc10000	lw	r1,(r30)
 1492  00002078  90220000	lbu	r2,(r1)
 1493  0000207c  2041ffc9	addi	r1,r2,#-55
 1494  00002080  afc1fff0	sw	-16(r30),r1
 1495  00002084  0800000c	j	L92_LF2
 1496  00002088  54000000	nop; delay slot nop
 1497  0000208c          	L95_LF2:
 1498  0000208c  200103e8	addi	r1,r0,#1000
 1499  00002090  afc1fff0	sw	-16(r30),r1
 1500  00002094          	L96_LF2:
 1501  00002094          	L94_LF2:
 1502  00002094          	L92_LF2:
 1503  00002094  8fc1fff0	lw	r1,-16(r30)
 1504  00002098  8fc20008	lw	r2,8(r30)
 1505  0000209c  0022082a	slt	r1,r1,r2
 1506  000020a0  10200040	beqz	r1,L90_LF2
 1507  000020a4  54000000	nop; delay slot nop
 1508  000020a8  8fc1fff4	lw	r1,-12(r30)
 1509  000020ac  8fc20008	lw	r2,8(r30)
 1510  000020b0  00200035	movi2fp	f0,r1
 1511  000020b4  00400835	movi2fp	f1,r2
 1512  000020b8  0401000e	mult	f0,f0,f1
 1513  000020bc  00000834	movfp2i	r1,f0
 1514  000020c0  afc1fff4	sw	-12(r30),r1
 1515  000020c4  8fc1fff4	lw	r1,-12(r30)
 1516  000020c8  8fc2fff0	lw	r2,-16(r30)
 1517  000020cc  00220820	add	r1,r1,r2
 1518  000020d0  afc1fff4	sw	-12(r30),r1
 1519  000020d4  8fc20000	lw	r2,(r30)
 1520  000020d8  20410001	addi	r1,r2,#1
 1521  000020dc  00011020	add	r2,r0,r1
 1522  000020e0  afc20000	sw	(r30),r2
 1523  000020e4          	L97_LF2:
 1524  000020e4          	L90_LF2:
 1525  000020e4  8fc1fff0	lw	r1,-16(r30)
 1526  000020e8  8fc20008	lw	r2,8(r30)
 1527  000020ec  0022082a	slt	r1,r1,r2
 1528  000020f0  1420000c	bnez	r1,L98_LF2
 1529  000020f4  54000000	nop; delay slot nop
 1530  000020f8  0800000c	j	L89_LF2
 1531  000020fc  54000000	nop; delay slot nop
 1532  00002100          	L98_LF2:
 1533  00002100  0bfffec8	j	L88_LF2
 1534  00002104  54000000	nop; delay slot nop
 1535  00002108          	L89_LF2:
 1536  00002108  8fc10004	lw	r1,4(r30)
 1537  0000210c  64220000	snei	r2,r1,#0
 1538  00002110  10400010	beqz	r2,L99_LF2
 1539  00002114  54000000	nop; delay slot nop
 1540  00002118  8fc10004	lw	r1,4(r30)
 1541  0000211c  8fc20000	lw	r2,(r30)
 1542  00002120  ac220000	sw	(r1),r2
 1543  00002124          	L99_LF2:
 1544  00002124  8fc1fff4	lw	r1,-12(r30)
 1545  00002128  8fc2ffec	lw	r2,-20(r30)
 1546  0000212c  00200035	movi2fp	f0,r1
 1547  00002130  00400835	movi2fp	f1,r2
 1548  00002134  0401000e	mult	f0,f0,f1
 1549  00002138  00000834	movfp2i	r1,f0
 1550  0000213c  afc1fff4	sw	-12(r30),r1
 1551  00002140  8fc1fff4	lw	r1,-12(r30)
 1552  00002144  08000004	j	L72_LF2
 1553  00002148  54000000	nop; delay slot nop
 1554  0000214c          	L72_LF2:
 1555  0000214c  8fa20000	lw	r2,0(r29)
 1556  00002150  8fdffff8	lw	r31,-8(r30)
 1557  00002154  001ee820	add	r29,r0,r30
 1558  00002158  8fdefffc	lw	r30,-4(r30)
 1559  0000215c  4be00000	jr	r31
 1560  00002160  54000000	nop
 1561  00002164          	.endproc _dstrtol
 1562  00002164          	.align 2
 1563  00002164          	.proc _bcopy
 1564  00002164          	.global _bcopy
 1565  00002164          	_bcopy:
 1566                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1567  00002164  afbefffc	sw	-4(r29),r30; push fp
 1568  00002168  001df020	add	r30,r0,r29; fp = sp
 1569  0000216c  afbffff8	sw	-8(r29),r31; push ret addr
 1570  00002170  2fbd0010	subui	r29,r29,#16; alloc local storage
 1571  00002174  afa20000	sw	0(r29),r2
 1572  00002178  afa30004	sw	4(r29),r3
 1573  0000217c  54000000	nop
 1574  00002180          	L101_LF2:
 1575  00002180  8fc10008	lw	r1,8(r30)
 1576  00002184  2022ffff	addi	r2,r1,#-1
 1577  00002188  afc20008	sw	8(r30),r2
 1578  0000218c  6c210000	sgti	r1,r1,#0
 1579  00002190  1420000c	bnez	r1,L103_LF2
 1580  00002194  54000000	nop; delay slot nop
 1581  00002198  0800002c	j	L102_LF2
 1582  0000219c  54000000	nop; delay slot nop
 1583  000021a0          	L103_LF2:
 1584  000021a0  8fc10004	lw	r1,4(r30)
 1585  000021a4  20220001	addi	r2,r1,#1
 1586  000021a8  afc20004	sw	4(r30),r2
 1587  000021ac  8fc20000	lw	r2,(r30)
 1588  000021b0  20430001	addi	r3,r2,#1
 1589  000021b4  afc30000	sw	(r30),r3
 1590  000021b8  80420000	lb	r2,(r2)
 1591  000021bc  a0220000	sb	(r1),r2
 1592  000021c0  0bffffbc	j	L101_LF2
 1593  000021c4  54000000	nop; delay slot nop
 1594  000021c8          	L102_LF2:
 1595  000021c8          	L100_LF2:
 1596  000021c8  8fa20000	lw	r2,0(r29)
 1597  000021cc  8fa30004	lw	r3,4(r29)
 1598  000021d0  8fdffff8	lw	r31,-8(r30)
 1599  000021d4  001ee820	add	r29,r0,r30
 1600  000021d8  8fdefffc	lw	r30,-4(r30)
 1601  000021dc  4be00000	jr	r31
 1602  000021e0  54000000	nop
 1603  000021e4          	.endproc _bcopy
 1604  000021e4          	.align 2
 1605  000021e4          	.proc _bzero
 1606  000021e4          	.global _bzero
 1607  000021e4          	_bzero:
 1608                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1609  000021e4  afbefffc	sw	-4(r29),r30; push fp
 1610  000021e8  001df020	add	r30,r0,r29; fp = sp
 1611  000021ec  afbffff8	sw	-8(r29),r31; push ret addr
 1612  000021f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1613  000021f4  afa20000	sw	0(r29),r2
 1614  000021f8  54000000	nop
 1615  000021fc          	L105_LF2:
 1616  000021fc  8fc10004	lw	r1,4(r30)
 1617  00002200  2022ffff	addi	r2,r1,#-1
 1618  00002204  afc20004	sw	4(r30),r2
 1619  00002208  6c210000	sgti	r1,r1,#0
 1620  0000220c  1420000c	bnez	r1,L107_LF2
 1621  00002210  54000000	nop; delay slot nop
 1622  00002214  08000020	j	L106_LF2
 1623  00002218  54000000	nop; delay slot nop
 1624  0000221c          	L107_LF2:
 1625  0000221c  8fc10000	lw	r1,(r30)
 1626  00002220  20220001	addi	r2,r1,#1
 1627  00002224  afc20000	sw	(r30),r2
 1628  00002228  20020000	addi	r2,r0,(#0x0)&0xff
 1629  0000222c  a0220000	sb	(r1),r2
 1630  00002230  0bffffc8	j	L105_LF2
 1631  00002234  54000000	nop; delay slot nop
 1632  00002238          	L106_LF2:
 1633  00002238          	L104_LF2:
 1634  00002238  8fa20000	lw	r2,0(r29)
 1635  0000223c  8fdffff8	lw	r31,-8(r30)
 1636  00002240  001ee820	add	r29,r0,r30
 1637  00002244  8fdefffc	lw	r30,-4(r30)
 1638  00002248  4be00000	jr	r31
 1639  0000224c  54000000	nop
 1640  00002250          	.endproc _bzero
 1641  00002250          	.align 2
 1642  00002250          	.proc _min
 1643  00002250          	.global _min
 1644  00002250          	_min:
 1645                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1646  00002250  afbefffc	sw	-4(r29),r30; push fp
 1647  00002254  001df020	add	r30,r0,r29; fp = sp
 1648  00002258  afbffff8	sw	-8(r29),r31; push ret addr
 1649  0000225c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1650  00002260  afa20000	sw	0(r29),r2
 1651  00002264  afa30004	sw	4(r29),r3
 1652  00002268  8fc10000	lw	r1,(r30)
 1653  0000226c  8fc20004	lw	r2,4(r30)
 1654  00002270  0022182c	sle	r3,r1,r2
 1655  00002274  14600008	bnez	r3,L109_LF2
 1656  00002278  54000000	nop; delay slot nop
 1657  0000227c  8fc10004	lw	r1,4(r30)
 1658  00002280          	L109_LF2:
 1659  00002280  08000004	j	L108_LF2
 1660  00002284  54000000	nop; delay slot nop
 1661  00002288          	L108_LF2:
 1662  00002288  8fa20000	lw	r2,0(r29)
 1663  0000228c  8fa30004	lw	r3,4(r29)
 1664  00002290  8fdffff8	lw	r31,-8(r30)
 1665  00002294  001ee820	add	r29,r0,r30
 1666  00002298  8fdefffc	lw	r30,-4(r30)
 1667  0000229c  4be00000	jr	r31
 1668  000022a0  54000000	nop
 1669  000022a4          	.endproc _min
 1670  000022a4          	.align 2
 1671  000022a4          	.proc _max
 1672  000022a4          	.global _max
 1673  000022a4          	_max:
 1674                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1675  000022a4  afbefffc	sw	-4(r29),r30; push fp
 1676  000022a8  001df020	add	r30,r0,r29; fp = sp
 1677  000022ac  afbffff8	sw	-8(r29),r31; push ret addr
 1678  000022b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1679  000022b4  afa20000	sw	0(r29),r2
 1680  000022b8  afa30004	sw	4(r29),r3
 1681  000022bc  8fc10000	lw	r1,(r30)
 1682  000022c0  8fc20004	lw	r2,4(r30)
 1683  000022c4  0022182d	sge	r3,r1,r2
 1684  000022c8  14600008	bnez	r3,L111_LF2
 1685  000022cc  54000000	nop; delay slot nop
 1686  000022d0  8fc10004	lw	r1,4(r30)
 1687  000022d4          	L111_LF2:
 1688  000022d4  08000004	j	L110_LF2
 1689  000022d8  54000000	nop; delay slot nop
 1690  000022dc          	L110_LF2:
 1691  000022dc  8fa20000	lw	r2,0(r29)
 1692  000022e0  8fa30004	lw	r3,4(r29)
 1693  000022e4  8fdffff8	lw	r31,-8(r30)
 1694  000022e8  001ee820	add	r29,r0,r30
 1695  000022ec  8fdefffc	lw	r30,-4(r30)
 1696  000022f0  4be00000	jr	r31
 1697  000022f4  54000000	nop
 1698  000022f8          	.endproc _max
 1699                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1700                      ;;;
 1701                      ;;; Most of the traps are called in files from libtraps.
 1704  000022f8          	.align 2
 1705  000022f8          	.proc _exit
 1706  000022f8          	.global _exit
 1707  000022f8          	_exit:
 1708  000022f8  44000300	trap	#0x300
 1709  000022fc  4be00000	jr	r31
 1710  00002300  54000000	nop
 1711  00002304          	.endproc _exit
 1713                      ; for the benefit of gcc.
 1714  00002304          	.proc ___main
 1715  00002304          	.global ___main
 1716  00002304          	___main:
 1717  00002304  4be00000	jr	r31
 1718  00002308  54000000	nop
 1719  0000230c          	.endproc ___main
 1720  0000230c          	.text
 1721  0000230c          	.global _etext
 1722  0000230c          	_etext:
 1723  0000230c          	.align 3
 1724  00002310          	.data
 1725  00003201          	.global _edata
 1726  00003201          	_edata:
