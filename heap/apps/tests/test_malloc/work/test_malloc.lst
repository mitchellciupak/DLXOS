 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 193
    4                      ; Text size: 4636
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test %d: filling the heap\n\000"
   85  00003038  2025643a	
   85  0000303c  2066696c	
   85  00003040  6c696e67	
   85  00003044  20746865	
   85  00003048  20686561	
   85  0000304c  700a00  	
   86  0000304f          	.align 2
   87  00003050          	LC2_LF0:
   88  00003050  54657374	.ascii "Test %d: freeing full heap\n\000"
   88  00003054  2025643a	
   88  00003058  20667265	
   88  0000305c  65696e67	
   88  00003060  2066756c	
   88  00003064  6c206865	
   88  00003068  61700a00	
   89  0000306c          	.align 2
   90  0000306c          	LC3_LF0:
   91  0000306c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003070  6f5f776f	
   91  00003074  726c6420	
   91  00003078  28256429	
   91  0000307c  3a204261	
   91  00003080  64207365	
   91  00003084  6d617068	
   91  00003088  6f726520	
   91  0000308c  735f7072	
   91  00003090  6f63735f	
   91  00003094  636f6d70	
   91  00003098  6c657465	
   91  0000309c  64202825	
   91  000030a0  6429210a	
   91  000030a4  00      	
   92  000030a5          	.align 2
   93  000030a8          	LC4_LF0:
   94  000030a8  74657374	.ascii "test_malloc (%d): Done!\n\000"
   94  000030ac  5f6d616c	
   94  000030b0  6c6f6320	
   94  000030b4  28256429	
   94  000030b8  3a20446f	
   94  000030bc  6e65210a	
   94  000030c0  00      	
   95  000030c1          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 512 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0208	subui	r29,r29,#520; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001124	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410003	snei	r1,r2,#3
  110  000010f8  10200028	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  114  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  115  0000110c  afa50000	sw	(r29),r5
  116  00001110  0c000240	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c000340	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L14_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c650004	lw	r5,4(r3)
  124  0000112c  afa50000	sw	(r29),r5
  125  00001130  20050000	addi	r5,r0,#0
  126  00001134  afa50004	sw	4(r29),r5
  127  00001138  2005000a	addi	r5,r0,#10
  128  0000113c  afa50008	sw	8(r29),r5
  129  00001140  0c000bd4	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00012020	add	r4,r0,r1
  132  0000114c  8c630008	lw	r3,8(r3)
  133  00001150  afa30000	sw	(r29),r3
  134  00001154  20050000	addi	r5,r0,#0
  135  00001158  afa50004	sw	4(r29),r5
  136  0000115c  2005000a	addi	r5,r0,#10
  137  00001160  afa50008	sw	8(r29),r5
  138  00001164  0c000bb0	jal	_dstrtol
  139  00001168  54000000	nop; not filled.
  140  0000116c  00011020	add	r2,r0,r1
  141  00001170  23bd0010	addi	r29,r29,#16
  142  00001174  60410001	seqi	r1,r2,#1
  143  00001178  102000ac	beqz	r1,L15_LF0
  144  0000117c  54000000	nop; not filled.
  145  00001180  23bdfff8	addi	r29,r29,#-8
  146  00001184  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  147  00001188  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  148  0000118c  afa50000	sw	(r29),r5
  149  00001190  afa20004	sw	4(r29),r2
  150  00001194  0c0001bc	jal	_Printf
  151  00001198  54000000	nop; not filled.
  152  0000119c  23bd0008	addi	r29,r29,#8
  153  000011a0  23c2fff8	addi	r2,r30,#-8
  154  000011a4  23c301f4	addi	r3,r30,#500
  155  000011a8          	L19_LF0:
  156  000011a8  23bdfff8	addi	r29,r29,#-8
  157  000011ac  20050020	addi	r5,r0,#32
  158  000011b0  afa50000	sw	(r29),r5
  159  000011b4  0c0002b0	jal	_malloc
  160  000011b8  54000000	nop; not filled.
  161  000011bc  ac41fe00	sw	-512(r2),r1
  162  000011c0  23bd0008	addi	r29,r29,#8
  163  000011c4  20420004	addi	r2,r2,#4
  164  000011c8  0043082c	sle	r1,r2,r3
  165  000011cc  1420ffd8	bnez	r1,L19_LF0
  166  000011d0  54000000	nop; not filled.
  167  000011d4  23bdfff8	addi	r29,r29,#-8
  168  000011d8  20050001	addi	r5,r0,#1
  169  000011dc  afa50000	sw	(r29),r5
  170  000011e0  0c000284	jal	_malloc
  171  000011e4  54000000	nop; not filled.
  172  000011e8  20020000	addi	r2,r0,#0
  173  000011ec  23bd0008	addi	r29,r29,#8
  174  000011f0  23c3fff8	addi	r3,r30,#-8
  175  000011f4          	L24_LF0:
  176  000011f4  23bdfff8	addi	r29,r29,#-8
  177  000011f8  8c65fe00	lw	r5,-512(r3)
  178  000011fc  afa50000	sw	(r29),r5
  179  00001200  0c00026c	jal	_mfree
  180  00001204  54000000	nop; not filled.
  181  00001208  23bd0008	addi	r29,r29,#8
  182  0000120c  20630004	addi	r3,r3,#4
  183  00001210  20420001	addi	r2,r2,#1
  184  00001214  7041007f	slei	r1,r2,#127
  185  00001218  1020006c	beqz	r1,L26_LF0
  186  0000121c  54000000	nop; not filled.
  187  00001220  0bffffd0	j	L24_LF0
  188  00001224  54000000	nop; not filled.
  189  00001228          	L15_LF0:
  190  00001228  64410000	snei	r1,r2,#0
  191  0000122c  14200058	bnez	r1,L26_LF0
  192  00001230  54000000	nop; not filled.
  193  00001234  23bdfff8	addi	r29,r29,#-8
  194  00001238  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  195  0000123c  24a53050	addui	r5,r5,(LC2_LF0)&0xffff
  196  00001240  afa50000	sw	(r29),r5
  197  00001244  afa20004	sw	4(r29),r2
  198  00001248  0c000108	jal	_Printf
  199  0000124c  54000000	nop; not filled.
  200  00001250  20051000	addi	r5,r0,#4096
  201  00001254  afa50000	sw	(r29),r5
  202  00001258  0c00020c	jal	_malloc
  203  0000125c  54000000	nop; not filled.
  204  00001260  afc1fdf8	sw	-520(r30),r1
  205  00001264  afa10000	sw	(r29),r1
  206  00001268  0c000204	jal	_mfree
  207  0000126c  54000000	nop; not filled.
  208  00001270  20050002	addi	r5,r0,#2
  209  00001274  afa50000	sw	(r29),r5
  210  00001278  0c0001ec	jal	_malloc
  211  0000127c  54000000	nop; not filled.
  212  00001280  afc1fdfc	sw	-516(r30),r1
  213  00001284  23bd0008	addi	r29,r29,#8
  214  00001288          	L26_LF0:
  215  00001288  23bdfff8	addi	r29,r29,#-8
  216  0000128c  afa40000	sw	(r29),r4
  217  00001290  0c000114	jal	_sem_signal
  218  00001294  54000000	nop; not filled.
  219  00001298  23bd0008	addi	r29,r29,#8
  220  0000129c  64210001	snei	r1,r1,#1
  221  000012a0  10200038	beqz	r1,L28_LF0
  222  000012a4  54000000	nop; not filled.
  223  000012a8  0c0000b4	jal	_getpid
  224  000012ac  54000000	nop; not filled.
  225  000012b0  23bdfff0	addi	r29,r29,#-16
  226  000012b4  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  227  000012b8  24a5306c	addui	r5,r5,(LC3_LF0)&0xffff
  228  000012bc  afa50000	sw	(r29),r5
  229  000012c0  afa10004	sw	4(r29),r1
  230  000012c4  afa40008	sw	8(r29),r4
  231  000012c8  0c000088	jal	_Printf
  232  000012cc  54000000	nop; not filled.
  233  000012d0  0c000188	jal	_Exit
  234  000012d4  54000000	nop; not filled.
  235  000012d8  23bd0010	addi	r29,r29,#16
  236  000012dc          	L28_LF0:
  237  000012dc  0c000080	jal	_getpid
  238  000012e0  54000000	nop; not filled.
  239  000012e4  23bdfff8	addi	r29,r29,#-8
  240  000012e8  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  241  000012ec  24a530a8	addui	r5,r5,(LC4_LF0)&0xffff
  242  000012f0  afa50000	sw	(r29),r5
  243  000012f4  afa10004	sw	4(r29),r1
  244  000012f8  0c000058	jal	_Printf
  245  000012fc  54000000	nop; not filled.
  246  00001300  23bd0008	addi	r29,r29,#8
  247  00001304  0c000f00	jal	_exit
  248  00001308  54000000	nop
  249  0000130c          	.endproc _main
  250                      ;;;
  251                      ;;; Stub functions for DLX traps.
  252                      ;;;
  253                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  254                      ;;;
  255                      ;;; The traps such as Open and Close
  256                      ;;; (note the capital letters) are for use by user programs.  The traps
  257                      ;;; with names such as open and close (lower case) are for use by the OS.
  258                      ;;;
  261  0000130c          	.align 2
  263                      ;;; The following are the traps to be used by user-level programs
  264                      ;;;
  266  0000130c          	.align 2
  267  0000130c          	.proc _Open
  268  0000130c          	.global _Open
  269  0000130c          	_Open:
  270                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  271                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  272                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  273  0000130c  44000213	trap	#0x213
  274  00001310  4be00000	jr	r31
  275  00001314  54000000	nop
  276  00001318          	.endproc _Open
  278  00001318          	.proc _Close
  279  00001318          	.global _Close
  280  00001318          	_Close:
  281  00001318  44000214	trap	#0x214
  282  0000131c  4be00000	jr	r31
  283  00001320  54000000	nop
  284  00001324          	.endproc _Close
  286  00001324          	.proc _Read
  287  00001324          	.global _Read
  288  00001324          	_Read:
  289  00001324  44000210	trap	#0x210
  290  00001328  4be00000	jr	r31
  291  0000132c  54000000	nop
  292  00001330          	.endproc _Read
  294  00001330          	.proc _Write
  295  00001330          	.global _Write
  296  00001330          	_Write:
  297  00001330  44000211	trap	#0x211
  298  00001334  4be00000	jr	r31
  299  00001338  54000000	nop
  300  0000133c          	.endproc _Write
  302  0000133c          	.proc _Lseek
  303  0000133c          	.global _Lseek
  304  0000133c          	_Lseek:
  305  0000133c  44000212	trap	#0x212
  306  00001340  4be00000	jr	r31
  307  00001344  54000000	nop
  308  00001348          	.endproc _Lseek
  310  00001348          	.proc _Putchar
  311  00001348          	.global _Putchar
  312  00001348          	_Putchar:
  313  00001348  44000280	trap	#0x280
  314  0000134c  4be00000	jr	r31
  315  00001350  54000000	nop
  316  00001354          	.endproc _Putchar
  318  00001354          	.proc _Printf
  319  00001354          	.global _Printf
  320  00001354          	_Printf:
  321  00001354  44000201	trap	#0x201
  322  00001358  4be00000	jr	r31
  323  0000135c  54000000	nop
  324  00001360          	.endproc _Printf
  326  00001360          	.proc _getpid
  327  00001360          	.global _getpid
  328  00001360          	_getpid:
  329  00001360  44000431	trap	#0x431
  330  00001364  4be00000	jr	r31
  331  00001368  54000000	nop
  332  0000136c          	.endproc _getpid
  334  0000136c          	.proc _process_create
  335  0000136c          	.global _process_create
  336  0000136c          	_process_create:
  337  0000136c  44000432	trap	#0x432
  338  00001370  4be00000	jr	r31
  339  00001374  54000000	nop
  340  00001378          	.endproc _process_create
  342  00001378          	.proc _shmget
  343  00001378          	.global _shmget
  344  00001378          	_shmget:
  345  00001378  44000440	trap	#0x440
  346  0000137c  4be00000	jr	r31
  347  00001380  54000000	nop
  348  00001384          	.endproc _shmget
  350  00001384          	.proc _shmat
  351  00001384          	.global _shmat
  352  00001384          	_shmat:
  353  00001384  44000441	trap	#0x441
  354  00001388  4be00000	jr	r31
  355  0000138c  54000000	nop
  356  00001390          	.endproc _shmat
  358  00001390          	.proc _sem_create
  359  00001390          	.global _sem_create
  360  00001390          	_sem_create:
  361  00001390  44000450	trap	#0x450
  362  00001394  4be00000	jr	r31
  363  00001398  54000000	nop
  364  0000139c          	.endproc _sem_create
  366  0000139c          	.proc _sem_wait
  367  0000139c          	.global _sem_wait
  368  0000139c          	_sem_wait:
  369  0000139c  44000451	trap	#0x451
  370  000013a0  4be00000	jr	r31
  371  000013a4  54000000	nop
  372  000013a8          	.endproc _sem_wait
  374  000013a8          	.proc _sem_signal
  375  000013a8          	.global _sem_signal
  376  000013a8          	_sem_signal:
  377  000013a8  44000452	trap	#0x452
  378  000013ac  4be00000	jr	r31
  379  000013b0  54000000	nop
  380  000013b4          	.endproc _sem_signal
  382  000013b4          	.proc _lock_create
  383  000013b4          	.global _lock_create
  384  000013b4          	_lock_create:
  385  000013b4  44000453	trap	#0x453
  386  000013b8  4be00000	jr	r31
  387  000013bc  54000000	nop
  388  000013c0          	.endproc _lock_create
  390  000013c0          	.proc _lock_acquire
  391  000013c0          	.global _lock_acquire
  392  000013c0          	_lock_acquire:
  393  000013c0  44000454	trap	#0x454
  394  000013c4  4be00000	jr	r31
  395  000013c8  54000000	nop
  396  000013cc          	.endproc _lock_acquire
  398  000013cc          	.proc _lock_release
  399  000013cc          	.global _lock_release
  400  000013cc          	_lock_release:
  401  000013cc  44000455	trap	#0x455
  402  000013d0  4be00000	jr	r31
  403  000013d4  54000000	nop
  404  000013d8          	.endproc _lock_release
  406  000013d8          	.proc _cond_create
  407  000013d8          	.global _cond_create
  408  000013d8          	_cond_create:
  409  000013d8  44000456	trap	#0x456
  410  000013dc  4be00000	jr	r31
  411  000013e0  54000000	nop
  412  000013e4          	.endproc _cond_create
  414  000013e4          	.proc _cond_wait
  415  000013e4          	.global _cond_wait
  416  000013e4          	_cond_wait:
  417  000013e4  44000457	trap	#0x457
  418  000013e8  4be00000	jr	r31
  419  000013ec  54000000	nop
  420  000013f0          	.endproc _cond_wait
  422  000013f0          	.proc _cond_signal
  423  000013f0          	.global _cond_signal
  424  000013f0          	_cond_signal:
  425  000013f0  44000458	trap	#0x458
  426  000013f4  4be00000	jr	r31
  427  000013f8  54000000	nop
  428  000013fc          	.endproc _cond_signal
  430  000013fc          	.proc _cond_broadcast
  431  000013fc          	.global _cond_broadcast
  432  000013fc          	_cond_broadcast:
  433  000013fc  44000459	trap	#0x459
  434  00001400  4be00000	jr	r31
  435  00001404  54000000	nop
  436  00001408          	.endproc _cond_broadcast
  438  00001408          	.proc _mbox_create
  439  00001408          	.global _mbox_create
  440  00001408          	_mbox_create:
  441  00001408  44000460	trap	#0x460
  442  0000140c  4be00000	jr	r31
  443  00001410  54000000	nop
  444  00001414          	.endproc _mbox_create
  446  00001414          	.proc _mbox_open
  447  00001414          	.global _mbox_open
  448  00001414          	_mbox_open:
  449  00001414  44000461	trap	#0x461
  450  00001418  4be00000	jr	r31
  451  0000141c  54000000	nop
  452  00001420          	.endproc _mbox_open
  454  00001420          	.proc _mbox_close
  455  00001420          	.global _mbox_close
  456  00001420          	_mbox_close:
  457  00001420  44000462	trap	#0x462
  458  00001424  4be00000	jr	r31
  459  00001428  54000000	nop
  460  0000142c          	.endproc _mbox_close
  462  0000142c          	.proc _mbox_send
  463  0000142c          	.global _mbox_send
  464  0000142c          	_mbox_send:
  465  0000142c  44000463	trap	#0x463
  466  00001430  4be00000	jr	r31
  467  00001434  54000000	nop
  468  00001438          	.endproc _mbox_send
  470  00001438          	.proc _mbox_recv
  471  00001438          	.global _mbox_recv
  472  00001438          	_mbox_recv:
  473  00001438  44000464	trap	#0x464
  474  0000143c  4be00000	jr	r31
  475  00001440  54000000	nop
  476  00001444          	.endproc _mbox_recv
  478  00001444          	.proc _sleep
  479  00001444          	.global _sleep
  480  00001444          	_sleep:
  481  00001444  44000465	trap	#0x465
  482  00001448  4be00000	jr	r31
  483  0000144c  54000000	nop
  484  00001450          	.endproc _sleep
  486  00001450          	.proc _yield
  487  00001450          	.global _yield
  488  00001450          	_yield:
  489  00001450  44000466	trap	#0x466
  490  00001454  4be00000	jr	r31
  491  00001458  54000000	nop
  492  0000145c          	.endproc _yield
  495  0000145c          	.proc _Exit
  496  0000145c          	.global _Exit
  497  0000145c          	_Exit:
  498  0000145c  44000500	trap	#0x500
  499  00001460  4be00000	jr	r31
  500  00001464  54000000	nop
  501  00001468          	.endproc _Exit
  504  00001468          	.proc _malloc
  505  00001468          	.global _malloc
  506  00001468          	_malloc:
  507  00001468  44000467	trap	#0x467
  508  0000146c  4be00000	jr	r31
  509  00001470          	.endproc _malloc
  512  00001470          	.proc _mfree
  513  00001470          	.global _mfree
  514  00001470          	_mfree:
  515  00001470  44000468	trap	#0x468
  516  00001474  4be00000	jr	r31
  517  00001478          	.endproc _mfree
  518                      ; Compiled by GCC
  520  00001478          	.align 2
  521  00001478          	.proc _isspace
  522  00001478          	.global _isspace
  523  00001478          	_isspace:
  524                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  525  00001478  afbefffc	sw	-4(r29),r30; push fp
  526  0000147c  001df020	add	r30,r0,r29; fp = sp
  527  00001480  afbffff8	sw	-8(r29),r31; push ret addr
  528  00001484  2fbd0018	subui	r29,r29,#24; alloc local storage
  529  00001488  afa20000	sw	0(r29),r2
  530  0000148c  afa30004	sw	4(r29),r3
  531  00001490  afa40008	sw	8(r29),r4
  532  00001494  83c20003	lb	r2,3(r30)
  533  00001498  20010000	addi	r1,r0,#0
  534  0000149c  304300ff	andi	r3,r2,#0x00ff
  535  000014a0  60640020	seqi	r4,r3,#32
  536  000014a4  1480002c	bnez	r4,L3_LF2
  537  000014a8  54000000	nop; delay slot nop
  538  000014ac  304300ff	andi	r3,r2,#0x00ff
  539  000014b0  60640009	seqi	r4,r3,#9
  540  000014b4  1480001c	bnez	r4,L3_LF2
  541  000014b8  54000000	nop; delay slot nop
  542  000014bc  304300ff	andi	r3,r2,#0x00ff
  543  000014c0  6064000a	seqi	r4,r3,#10
  544  000014c4  1480000c	bnez	r4,L3_LF2
  545  000014c8  54000000	nop; delay slot nop
  546  000014cc  08000008	j	L2_LF2
  547  000014d0  54000000	nop; delay slot nop
  548  000014d4          	L3_LF2:
  549  000014d4  20010001	addi	r1,r0,#1
  550  000014d8          	L2_LF2:
  551  000014d8  08000004	j	L1_LF2
  552  000014dc  54000000	nop; delay slot nop
  553  000014e0          	L1_LF2:
  554  000014e0  8fa20000	lw	r2,0(r29)
  555  000014e4  8fa30004	lw	r3,4(r29)
  556  000014e8  8fa40008	lw	r4,8(r29)
  557  000014ec  8fdffff8	lw	r31,-8(r30)
  558  000014f0  001ee820	add	r29,r0,r30
  559  000014f4  8fdefffc	lw	r30,-4(r30)
  560  000014f8  4be00000	jr	r31
  561  000014fc  54000000	nop
  562  00001500          	.endproc _isspace
  563  00001500          	.align 2
  564  00001500          	.proc _isxdigit
  565  00001500          	.global _isxdigit
  566  00001500          	_isxdigit:
  567                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  568  00001500  afbefffc	sw	-4(r29),r30; push fp
  569  00001504  001df020	add	r30,r0,r29; fp = sp
  570  00001508  afbffff8	sw	-8(r29),r31; push ret addr
  571  0000150c  2fbd0018	subui	r29,r29,#24; alloc local storage
  572  00001510  afa20000	sw	0(r29),r2
  573  00001514  afa30004	sw	4(r29),r3
  574  00001518  afa40008	sw	8(r29),r4
  575  0000151c  83c20003	lb	r2,3(r30)
  576  00001520  20010000	addi	r1,r0,#0
  577  00001524  304300ff	andi	r3,r2,#0x00ff
  578  00001528  6c64002f	sgtui	r4,r3,#47
  579  0000152c  1080001c	beqz	r4,L7_LF2
  580  00001530  54000000	nop; delay slot nop
  581  00001534  304300ff	andi	r3,r2,#0x00ff
  582  00001538  70640039	sleui	r4,r3,#57
  583  0000153c  1480005c	bnez	r4,L6_LF2
  584  00001540  54000000	nop; delay slot nop
  585  00001544  08000004	j	L7_LF2
  586  00001548  54000000	nop; delay slot nop
  587  0000154c          	L7_LF2:
  588  0000154c  304300ff	andi	r3,r2,#0x00ff
  589  00001550  6c640060	sgtui	r4,r3,#96
  590  00001554  1080001c	beqz	r4,L8_LF2
  591  00001558  54000000	nop; delay slot nop
  592  0000155c  304300ff	andi	r3,r2,#0x00ff
  593  00001560  70640066	sleui	r4,r3,#102
  594  00001564  14800034	bnez	r4,L6_LF2
  595  00001568  54000000	nop; delay slot nop
  596  0000156c  08000004	j	L8_LF2
  597  00001570  54000000	nop; delay slot nop
  598  00001574          	L8_LF2:
  599  00001574  304300ff	andi	r3,r2,#0x00ff
  600  00001578  6c640040	sgtui	r4,r3,#64
  601  0000157c  10800020	beqz	r4,L5_LF2
  602  00001580  54000000	nop; delay slot nop
  603  00001584  304300ff	andi	r3,r2,#0x00ff
  604  00001588  70640041	sleui	r4,r3,#65
  605  0000158c  1480000c	bnez	r4,L6_LF2
  606  00001590  54000000	nop; delay slot nop
  607  00001594  08000008	j	L5_LF2
  608  00001598  54000000	nop; delay slot nop
  609  0000159c          	L6_LF2:
  610  0000159c  20010001	addi	r1,r0,#1
  611  000015a0          	L5_LF2:
  612  000015a0  08000004	j	L4_LF2
  613  000015a4  54000000	nop; delay slot nop
  614  000015a8          	L4_LF2:
  615  000015a8  8fa20000	lw	r2,0(r29)
  616  000015ac  8fa30004	lw	r3,4(r29)
  617  000015b0  8fa40008	lw	r4,8(r29)
  618  000015b4  8fdffff8	lw	r31,-8(r30)
  619  000015b8  001ee820	add	r29,r0,r30
  620  000015bc  8fdefffc	lw	r30,-4(r30)
  621  000015c0  4be00000	jr	r31
  622  000015c4  54000000	nop
  623  000015c8          	.endproc _isxdigit
  624  000015c8          	.align 2
  625  000015c8          	.proc _dstrcpy
  626  000015c8          	.global _dstrcpy
  627  000015c8          	_dstrcpy:
  628                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  629  000015c8  afbefffc	sw	-4(r29),r30; push fp
  630  000015cc  001df020	add	r30,r0,r29; fp = sp
  631  000015d0  afbffff8	sw	-8(r29),r31; push ret addr
  632  000015d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  633  000015d8  afa20000	sw	0(r29),r2
  634  000015dc  afa30004	sw	4(r29),r3
  635  000015e0  8fc10000	lw	r1,(r30)
  636  000015e4  afc1fff4	sw	-12(r30),r1
  637  000015e8          	L10_LF2:
  638  000015e8  8fc10000	lw	r1,(r30)
  639  000015ec  20220001	addi	r2,r1,#1
  640  000015f0  afc20000	sw	(r30),r2
  641  000015f4  8fc20004	lw	r2,4(r30)
  642  000015f8  20430001	addi	r3,r2,#1
  643  000015fc  afc30004	sw	4(r30),r3
  644  00001600  80420000	lb	r2,(r2)
  645  00001604  a0220000	sb	(r1),r2
  646  00001608  a3c2fff3	sb	-13(r30),r2
  647  0000160c          	L12_LF2:
  648  0000160c  93c1fff3	lbu	r1,-13(r30)
  649  00001610  64220000	snei	r2,r1,#0
  650  00001614  1440000c	bnez	r2,L13_LF2
  651  00001618  54000000	nop; delay slot nop
  652  0000161c  0800000c	j	L11_LF2
  653  00001620  54000000	nop; delay slot nop
  654  00001624          	L13_LF2:
  655  00001624  0bffffc0	j	L10_LF2
  656  00001628  54000000	nop; delay slot nop
  657  0000162c          	L11_LF2:
  658  0000162c  8fc1fff4	lw	r1,-12(r30)
  659  00001630  08000004	j	L9_LF2
  660  00001634  54000000	nop; delay slot nop
  661  00001638          	L9_LF2:
  662  00001638  8fa20000	lw	r2,0(r29)
  663  0000163c  8fa30004	lw	r3,4(r29)
  664  00001640  8fdffff8	lw	r31,-8(r30)
  665  00001644  001ee820	add	r29,r0,r30
  666  00001648  8fdefffc	lw	r30,-4(r30)
  667  0000164c  4be00000	jr	r31
  668  00001650  54000000	nop
  669  00001654          	.endproc _dstrcpy
  670  00001654          	.align 2
  671  00001654          	.proc _dstrncpy
  672  00001654          	.global _dstrncpy
  673  00001654          	_dstrncpy:
  674                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  675  00001654  afbefffc	sw	-4(r29),r30; push fp
  676  00001658  001df020	add	r30,r0,r29; fp = sp
  677  0000165c  afbffff8	sw	-8(r29),r31; push ret addr
  678  00001660  2fbd0018	subui	r29,r29,#24; alloc local storage
  679  00001664  afa20000	sw	0(r29),r2
  680  00001668  afa30004	sw	4(r29),r3
  681  0000166c  8fc10000	lw	r1,(r30)
  682  00001670  afc1fff4	sw	-12(r30),r1
  683  00001674          	L15_LF2:
  684  00001674  8fc10008	lw	r1,8(r30)
  685  00001678  2022ffff	addi	r2,r1,#-1
  686  0000167c  afc20008	sw	8(r30),r2
  687  00001680  70210000	slei	r1,r1,#0
  688  00001684  1020000c	beqz	r1,L18_LF2
  689  00001688  54000000	nop; delay slot nop
  690  0000168c  08000048	j	L16_LF2
  691  00001690  54000000	nop; delay slot nop
  692  00001694          	L18_LF2:
  693  00001694  8fc10000	lw	r1,(r30)
  694  00001698  20220001	addi	r2,r1,#1
  695  0000169c  afc20000	sw	(r30),r2
  696  000016a0  8fc20004	lw	r2,4(r30)
  697  000016a4  20430001	addi	r3,r2,#1
  698  000016a8  afc30004	sw	4(r30),r3
  699  000016ac  80420000	lb	r2,(r2)
  700  000016b0  a0220000	sb	(r1),r2
  701  000016b4  a3c2fff3	sb	-13(r30),r2
  702  000016b8          	L17_LF2:
  703  000016b8  93c1fff3	lbu	r1,-13(r30)
  704  000016bc  64220000	snei	r2,r1,#0
  705  000016c0  1440000c	bnez	r2,L19_LF2
  706  000016c4  54000000	nop; delay slot nop
  707  000016c8  0800000c	j	L16_LF2
  708  000016cc  54000000	nop; delay slot nop
  709  000016d0          	L19_LF2:
  710  000016d0  0bffffa0	j	L15_LF2
  711  000016d4  54000000	nop; delay slot nop
  712  000016d8          	L16_LF2:
  713  000016d8  8fc1fff4	lw	r1,-12(r30)
  714  000016dc  08000004	j	L14_LF2
  715  000016e0  54000000	nop; delay slot nop
  716  000016e4          	L14_LF2:
  717  000016e4  8fa20000	lw	r2,0(r29)
  718  000016e8  8fa30004	lw	r3,4(r29)
  719  000016ec  8fdffff8	lw	r31,-8(r30)
  720  000016f0  001ee820	add	r29,r0,r30
  721  000016f4  8fdefffc	lw	r30,-4(r30)
  722  000016f8  4be00000	jr	r31
  723  000016fc  54000000	nop
  724  00001700          	.endproc _dstrncpy
  725  00001700          	.align 2
  726  00001700          	.proc _dstrcat
  727  00001700          	.global _dstrcat
  728  00001700          	_dstrcat:
  729                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  730  00001700  afbefffc	sw	-4(r29),r30; push fp
  731  00001704  001df020	add	r30,r0,r29; fp = sp
  732  00001708  afbffff8	sw	-8(r29),r31; push ret addr
  733  0000170c  2fbd0018	subui	r29,r29,#24; alloc local storage
  734  00001710  afa20000	sw	0(r29),r2
  735  00001714  8fc10000	lw	r1,(r30)
  736  00001718  afc1fff4	sw	-12(r30),r1
  737  0000171c          	L21_LF2:
  738  0000171c  8fc10000	lw	r1,(r30)
  739  00001720  90220000	lbu	r2,(r1)
  740  00001724  64410000	snei	r1,r2,#0
  741  00001728  1420000c	bnez	r1,L23_LF2
  742  0000172c  54000000	nop; delay slot nop
  743  00001730  0800001c	j	L22_LF2
  744  00001734  54000000	nop; delay slot nop
  745  00001738          	L23_LF2:
  746  00001738  8fc20000	lw	r2,(r30)
  747  0000173c  20410001	addi	r1,r2,#1
  748  00001740  00011020	add	r2,r0,r1
  749  00001744  afc20000	sw	(r30),r2
  750  00001748  0bffffd0	j	L21_LF2
  751  0000174c  54000000	nop; delay slot nop
  752  00001750          	L22_LF2:
  753  00001750  23bdfff8	addi	r29,r29,#-8
  754  00001754  001d0820	add	r1,r0,r29
  755  00001758  8fc20000	lw	r2,(r30)
  756  0000175c  ac220000	sw	(r1),r2
  757  00001760  8fc20004	lw	r2,4(r30)
  758  00001764  ac220004	sw	4(r1),r2
  759  00001768  0ffffe5c	jal	_dstrcpy
  760  0000176c  54000000	nop; delay slot nop
  761  00001770  23bd0008	addi	r29,r29,#8
  762  00001774  8fc1fff4	lw	r1,-12(r30)
  763  00001778  08000004	j	L20_LF2
  764  0000177c  54000000	nop; delay slot nop
  765  00001780          	L20_LF2:
  766  00001780  8fa20000	lw	r2,0(r29)
  767  00001784  8fdffff8	lw	r31,-8(r30)
  768  00001788  001ee820	add	r29,r0,r30
  769  0000178c  8fdefffc	lw	r30,-4(r30)
  770  00001790  4be00000	jr	r31
  771  00001794  54000000	nop
  772  00001798          	.endproc _dstrcat
  773  00001798          	.align 2
  774  00001798          	.proc _dstrncmp
  775  00001798          	.global _dstrncmp
  776  00001798          	_dstrncmp:
  777                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  778  00001798  afbefffc	sw	-4(r29),r30; push fp
  779  0000179c  001df020	add	r30,r0,r29; fp = sp
  780  000017a0  afbffff8	sw	-8(r29),r31; push ret addr
  781  000017a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  782  000017a8  afa20000	sw	0(r29),r2
  783  000017ac  afa30004	sw	4(r29),r3
  784  000017b0  54000000	nop
  785  000017b4  20010000	addi	r1,r0,#0
  786  000017b8  afc1fff4	sw	-12(r30),r1
  787  000017bc          	L25_LF2:
  788  000017bc  8fc1fff4	lw	r1,-12(r30)
  789  000017c0  8fc20008	lw	r2,8(r30)
  790  000017c4  0022082a	slt	r1,r1,r2
  791  000017c8  1420000c	bnez	r1,L28_LF2
  792  000017cc  54000000	nop; delay slot nop
  793  000017d0  08000088	j	L26_LF2
  794  000017d4  54000000	nop; delay slot nop
  795  000017d8          	L28_LF2:
  796  000017d8  8fc10004	lw	r1,4(r30)
  797  000017dc  90220000	lbu	r2,(r1)
  798  000017e0  64410000	snei	r1,r2,#0
  799  000017e4  14200018	bnez	r1,L29_LF2
  800  000017e8  54000000	nop; delay slot nop
  801  000017ec  20010000	addi	r1,r0,#0
  802  000017f0  080000d8	j	L24_LF2
  803  000017f4  54000000	nop; delay slot nop
  804  000017f8  08000028	j	L30_LF2
  805  000017fc  54000000	nop; delay slot nop
  806  00001800          	L29_LF2:
  807  00001800  8fc10000	lw	r1,(r30)
  808  00001804  8fc20004	lw	r2,4(r30)
  809  00001808  90210000	lbu	r1,(r1)
  810  0000180c  90420000	lbu	r2,(r2)
  811  00001810  00220829	sne	r1,r1,r2
  812  00001814  1020000c	beqz	r1,L30_LF2
  813  00001818  54000000	nop; delay slot nop
  814  0000181c  0800003c	j	L26_LF2
  815  00001820  54000000	nop; delay slot nop
  816  00001824          	L31_LF2:
  817  00001824          	L30_LF2:
  818  00001824  8fc20000	lw	r2,(r30)
  819  00001828  20410001	addi	r1,r2,#1
  820  0000182c  00011020	add	r2,r0,r1
  821  00001830  afc20000	sw	(r30),r2
  822  00001834  8fc20004	lw	r2,4(r30)
  823  00001838  20410001	addi	r1,r2,#1
  824  0000183c  00011020	add	r2,r0,r1
  825  00001840  afc20004	sw	4(r30),r2
  826  00001844          	L27_LF2:
  827  00001844  8fc2fff4	lw	r2,-12(r30)
  828  00001848  20410001	addi	r1,r2,#1
  829  0000184c  00011020	add	r2,r0,r1
  830  00001850  afc2fff4	sw	-12(r30),r2
  831  00001854  0bffff64	j	L25_LF2
  832  00001858  54000000	nop; delay slot nop
  833  0000185c          	L26_LF2:
  834  0000185c  8fc1fff4	lw	r1,-12(r30)
  835  00001860  8fc20008	lw	r2,8(r30)
  836  00001864  00220828	seq	r1,r1,r2
  837  00001868  10200018	beqz	r1,L32_LF2
  838  0000186c  54000000	nop; delay slot nop
  839  00001870  20010000	addi	r1,r0,#0
  840  00001874  08000054	j	L24_LF2
  841  00001878  54000000	nop; delay slot nop
  842  0000187c  0800004c	j	L33_LF2
  843  00001880  54000000	nop; delay slot nop
  844  00001884          	L32_LF2:
  845  00001884  8fc20000	lw	r2,(r30)
  846  00001888  90410000	lbu	r1,(r2)
  847  0000188c  8fc20004	lw	r2,4(r30)
  848  00001890  90430000	lbu	r3,(r2)
  849  00001894  00230822	sub	r1,r1,r3
  850  00001898  74220000	sgei	r2,r1,#0
  851  0000189c  10400020	beqz	r2,L34_LF2
  852  000018a0  54000000	nop; delay slot nop
  853  000018a4  8fc10000	lw	r1,(r30)
  854  000018a8  8fc20004	lw	r2,4(r30)
  855  000018ac  90210000	lbu	r1,(r1)
  856  000018b0  90420000	lbu	r2,(r2)
  857  000018b4  00220829	sne	r1,r1,r2
  858  000018b8  08000008	j	L35_LF2
  859  000018bc  54000000	nop; delay slot nop
  860  000018c0          	L34_LF2:
  861  000018c0  2001ffff	addi	r1,r0,#-1
  862  000018c4          	L35_LF2:
  863  000018c4  08000004	j	L24_LF2
  864  000018c8  54000000	nop; delay slot nop
  865  000018cc          	L33_LF2:
  866  000018cc          	L24_LF2:
  867  000018cc  8fa20000	lw	r2,0(r29)
  868  000018d0  8fa30004	lw	r3,4(r29)
  869  000018d4  8fdffff8	lw	r31,-8(r30)
  870  000018d8  001ee820	add	r29,r0,r30
  871  000018dc  8fdefffc	lw	r30,-4(r30)
  872  000018e0  4be00000	jr	r31
  873  000018e4  54000000	nop
  874  000018e8          	.endproc _dstrncmp
  875  000018e8          	.align 2
  876  000018e8          	.proc _dstrlen
  877  000018e8          	.global _dstrlen
  878  000018e8          	_dstrlen:
  879                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  880  000018e8  afbefffc	sw	-4(r29),r30; push fp
  881  000018ec  001df020	add	r30,r0,r29; fp = sp
  882  000018f0  afbffff8	sw	-8(r29),r31; push ret addr
  883  000018f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  884  000018f8  afa20000	sw	0(r29),r2
  885  000018fc  20010000	addi	r1,r0,#0
  886  00001900  afc1fff4	sw	-12(r30),r1
  887  00001904          	L37_LF2:
  888  00001904  8fc10000	lw	r1,(r30)
  889  00001908  20220001	addi	r2,r1,#1
  890  0000190c  afc20000	sw	(r30),r2
  891  00001910  90210000	lbu	r1,(r1)
  892  00001914  64220000	snei	r2,r1,#0
  893  00001918  1440000c	bnez	r2,L39_LF2
  894  0000191c  54000000	nop; delay slot nop
  895  00001920  0800001c	j	L38_LF2
  896  00001924  54000000	nop; delay slot nop
  897  00001928          	L39_LF2:
  898  00001928  8fc2fff4	lw	r2,-12(r30)
  899  0000192c  20410001	addi	r1,r2,#1
  900  00001930  00011020	add	r2,r0,r1
  901  00001934  afc2fff4	sw	-12(r30),r2
  902  00001938  0bffffc8	j	L37_LF2
  903  0000193c  54000000	nop; delay slot nop
  904  00001940          	L38_LF2:
  905  00001940  8fc1fff4	lw	r1,-12(r30)
  906  00001944  08000004	j	L36_LF2
  907  00001948  54000000	nop; delay slot nop
  908  0000194c          	L36_LF2:
  909  0000194c  8fa20000	lw	r2,0(r29)
  910  00001950  8fdffff8	lw	r31,-8(r30)
  911  00001954  001ee820	add	r29,r0,r30
  912  00001958  8fdefffc	lw	r30,-4(r30)
  913  0000195c  4be00000	jr	r31
  914  00001960  54000000	nop
  915  00001964          	.endproc _dstrlen
  916  00001964          	.align 2
  917  00001964          	.proc _dstrstr
  918  00001964          	.global _dstrstr
  919  00001964          	_dstrstr:
  920                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  921  00001964  afbefffc	sw	-4(r29),r30; push fp
  922  00001968  001df020	add	r30,r0,r29; fp = sp
  923  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  924  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  925  00001974  afa20000	sw	0(r29),r2
  926  00001978  23bdfff8	addi	r29,r29,#-8
  927  0000197c  001d0820	add	r1,r0,r29
  928  00001980  8fc20004	lw	r2,4(r30)
  929  00001984  ac220000	sw	(r1),r2
  930  00001988  0fffff5c	jal	_dstrlen
  931  0000198c  54000000	nop; delay slot nop
  932  00001990  23bd0008	addi	r29,r29,#8
  933  00001994  afc1fff4	sw	-12(r30),r1
  934  00001998          	L41_LF2:
  935  00001998  8fc10000	lw	r1,(r30)
  936  0000199c  90220000	lbu	r2,(r1)
  937  000019a0  64410000	snei	r1,r2,#0
  938  000019a4  1420000c	bnez	r1,L43_LF2
  939  000019a8  54000000	nop; delay slot nop
  940  000019ac  08000060	j	L42_LF2
  941  000019b0  54000000	nop; delay slot nop
  942  000019b4          	L43_LF2:
  943  000019b4  23bdfff0	addi	r29,r29,#-16
  944  000019b8  001d0820	add	r1,r0,r29
  945  000019bc  8fc20000	lw	r2,(r30)
  946  000019c0  ac220000	sw	(r1),r2
  947  000019c4  8fc20004	lw	r2,4(r30)
  948  000019c8  ac220004	sw	4(r1),r2
  949  000019cc  8fc2fff4	lw	r2,-12(r30)
  950  000019d0  ac220008	sw	8(r1),r2
  951  000019d4  0ffffdc0	jal	_dstrncmp
  952  000019d8  54000000	nop; delay slot nop
  953  000019dc  23bd0010	addi	r29,r29,#16
  954  000019e0  64220000	snei	r2,r1,#0
  955  000019e4  14400010	bnez	r2,L44_LF2
  956  000019e8  54000000	nop; delay slot nop
  957  000019ec  8fc10000	lw	r1,(r30)
  958  000019f0  08000028	j	L40_LF2
  959  000019f4  54000000	nop; delay slot nop
  960  000019f8          	L44_LF2:
  961  000019f8  8fc20000	lw	r2,(r30)
  962  000019fc  20410001	addi	r1,r2,#1
  963  00001a00  00011020	add	r2,r0,r1
  964  00001a04  afc20000	sw	(r30),r2
  965  00001a08  0bffff8c	j	L41_LF2
  966  00001a0c  54000000	nop; delay slot nop
  967  00001a10          	L42_LF2:
  968  00001a10  20010000	addi	r1,r0,#0
  969  00001a14  08000004	j	L40_LF2
  970  00001a18  54000000	nop; delay slot nop
  971  00001a1c          	L40_LF2:
  972  00001a1c  8fa20000	lw	r2,0(r29)
  973  00001a20  8fdffff8	lw	r31,-8(r30)
  974  00001a24  001ee820	add	r29,r0,r30
  975  00001a28  8fdefffc	lw	r30,-4(r30)
  976  00001a2c  4be00000	jr	r31
  977  00001a30  54000000	nop
  978  00001a34          	.endproc _dstrstr
  979  00001a34          	.align 2
  980  00001a34          	.proc _dmindex
  981  00001a34          	.global _dmindex
  982  00001a34          	_dmindex:
  983                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  984  00001a34  afbefffc	sw	-4(r29),r30; push fp
  985  00001a38  001df020	add	r30,r0,r29; fp = sp
  986  00001a3c  afbffff8	sw	-8(r29),r31; push ret addr
  987  00001a40  2fbd0018	subui	r29,r29,#24; alloc local storage
  988  00001a44  afa20000	sw	0(r29),r2
  989  00001a48  54000000	nop
  990  00001a4c          	L46_LF2:
  991  00001a4c  8fc10000	lw	r1,(r30)
  992  00001a50  90220000	lbu	r2,(r1)
  993  00001a54  64410000	snei	r1,r2,#0
  994  00001a58  1420000c	bnez	r1,L48_LF2
  995  00001a5c  54000000	nop; delay slot nop
  996  00001a60  08000070	j	L47_LF2
  997  00001a64  54000000	nop; delay slot nop
  998  00001a68          	L48_LF2:
  999  00001a68  8fc10004	lw	r1,4(r30)
 1000  00001a6c  afc1fff4	sw	-12(r30),r1
 1001  00001a70          	L49_LF2:
 1002  00001a70  8fc1fff4	lw	r1,-12(r30)
 1003  00001a74  90220000	lbu	r2,(r1)
 1004  00001a78  64410000	snei	r1,r2,#0
 1005  00001a7c  1420000c	bnez	r1,L52_LF2
 1006  00001a80  54000000	nop; delay slot nop
 1007  00001a84  08000044	j	L50_LF2
 1008  00001a88  54000000	nop; delay slot nop
 1009  00001a8c          	L52_LF2:
 1010  00001a8c  8fc10000	lw	r1,(r30)
 1011  00001a90  8fc2fff4	lw	r2,-12(r30)
 1012  00001a94  90210000	lbu	r1,(r1)
 1013  00001a98  90420000	lbu	r2,(r2)
 1014  00001a9c  00220828	seq	r1,r1,r2
 1015  00001aa0  10200010	beqz	r1,L51_LF2
 1016  00001aa4  54000000	nop; delay slot nop
 1017  00001aa8  8fc10000	lw	r1,(r30)
 1018  00001aac  08000030	j	L45_LF2
 1019  00001ab0  54000000	nop; delay slot nop
 1020  00001ab4          	L53_LF2:
 1021  00001ab4          	L51_LF2:
 1022  00001ab4  8fc2fff4	lw	r2,-12(r30)
 1023  00001ab8  20410001	addi	r1,r2,#1
 1024  00001abc  00011020	add	r2,r0,r1
 1025  00001ac0  afc2fff4	sw	-12(r30),r2
 1026  00001ac4  0bffffa8	j	L49_LF2
 1027  00001ac8  54000000	nop; delay slot nop
 1028  00001acc          	L50_LF2:
 1029  00001acc  0bffff7c	j	L46_LF2
 1030  00001ad0  54000000	nop; delay slot nop
 1031  00001ad4          	L47_LF2:
 1032  00001ad4  20010000	addi	r1,r0,#0
 1033  00001ad8  08000004	j	L45_LF2
 1034  00001adc  54000000	nop; delay slot nop
 1035  00001ae0          	L45_LF2:
 1036  00001ae0  8fa20000	lw	r2,0(r29)
 1037  00001ae4  8fdffff8	lw	r31,-8(r30)
 1038  00001ae8  001ee820	add	r29,r0,r30
 1039  00001aec  8fdefffc	lw	r30,-4(r30)
 1040  00001af0  4be00000	jr	r31
 1041  00001af4  54000000	nop
 1042  00001af8          	.endproc _dmindex
 1043  00001af8          	.align 2
 1044  00001af8          	.proc _dindex
 1045  00001af8          	.global _dindex
 1046  00001af8          	_dindex:
 1047                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1048  00001af8  afbefffc	sw	-4(r29),r30; push fp
 1049  00001afc  001df020	add	r30,r0,r29; fp = sp
 1050  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001b04  2fbd0010	subui	r29,r29,#16; alloc local storage
 1052  00001b08  afa20000	sw	0(r29),r2
 1053  00001b0c  54000000	nop
 1054  00001b10          	L55_LF2:
 1055  00001b10  8fc10000	lw	r1,(r30)
 1056  00001b14  90220000	lbu	r2,(r1)
 1057  00001b18  64410000	snei	r1,r2,#0
 1058  00001b1c  1420000c	bnez	r1,L57_LF2
 1059  00001b20  54000000	nop; delay slot nop
 1060  00001b24  08000040	j	L56_LF2
 1061  00001b28  54000000	nop; delay slot nop
 1062  00001b2c          	L57_LF2:
 1063  00001b2c  8fc10000	lw	r1,(r30)
 1064  00001b30  90220000	lbu	r2,(r1)
 1065  00001b34  8fc10004	lw	r1,4(r30)
 1066  00001b38  00411028	seq	r2,r2,r1
 1067  00001b3c  10400010	beqz	r2,L58_LF2
 1068  00001b40  54000000	nop; delay slot nop
 1069  00001b44  8fc10000	lw	r1,(r30)
 1070  00001b48  08000028	j	L54_LF2
 1071  00001b4c  54000000	nop; delay slot nop
 1072  00001b50          	L58_LF2:
 1073  00001b50  8fc20000	lw	r2,(r30)
 1074  00001b54  20410001	addi	r1,r2,#1
 1075  00001b58  00011020	add	r2,r0,r1
 1076  00001b5c  afc20000	sw	(r30),r2
 1077  00001b60  0bffffac	j	L55_LF2
 1078  00001b64  54000000	nop; delay slot nop
 1079  00001b68          	L56_LF2:
 1080  00001b68  20010000	addi	r1,r0,#0
 1081  00001b6c  08000004	j	L54_LF2
 1082  00001b70  54000000	nop; delay slot nop
 1083  00001b74          	L54_LF2:
 1084  00001b74  8fa20000	lw	r2,0(r29)
 1085  00001b78  8fdffff8	lw	r31,-8(r30)
 1086  00001b7c  001ee820	add	r29,r0,r30
 1087  00001b80  8fdefffc	lw	r30,-4(r30)
 1088  00001b84  4be00000	jr	r31
 1089  00001b88  54000000	nop
 1090  00001b8c          	.endproc _dindex
 1091  00001b8c          	.align 2
 1092  00001b8c          	.proc _ditoa
 1093  00001b8c          	.global _ditoa
 1094  00001b8c          	_ditoa:
 1095                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1096  00001b8c  afbefffc	sw	-4(r29),r30; push fp
 1097  00001b90  001df020	add	r30,r0,r29; fp = sp
 1098  00001b94  afbffff8	sw	-8(r29),r31; push ret addr
 1099  00001b98  2fbd0018	subui	r29,r29,#24; alloc local storage
 1100  00001b9c  afa20000	sw	0(r29),r2
 1101  00001ba0  afa30004	sw	4(r29),r3
 1102  00001ba4  8fc10000	lw	r1,(r30)
 1103  00001ba8  68220000	slti	r2,r1,#0
 1104  00001bac  1040002c	beqz	r2,L60_LF2
 1105  00001bb0  54000000	nop; delay slot nop
 1106  00001bb4  8fc10004	lw	r1,4(r30)
 1107  00001bb8  20220001	addi	r2,r1,#1
 1108  00001bbc  afc20004	sw	4(r30),r2
 1109  00001bc0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1110  00001bc4  a0220000	sb	(r1),r2
 1111  00001bc8  8fc10000	lw	r1,(r30)
 1112  00001bcc  00011022	sub	r2,r0,r1
 1113  00001bd0  afc20000	sw	(r30),r2
 1114  00001bd4  08000118	j	L61_LF2
 1115  00001bd8  54000000	nop; delay slot nop
 1116  00001bdc          	L60_LF2:
 1117  00001bdc  8fc10000	lw	r1,(r30)
 1118  00001be0  64220000	snei	r2,r1,#0
 1119  00001be4  14400020	bnez	r2,L62_LF2
 1120  00001be8  54000000	nop; delay slot nop
 1121  00001bec  8fc10004	lw	r1,4(r30)
 1122  00001bf0  20220001	addi	r2,r1,#1
 1123  00001bf4  afc20004	sw	4(r30),r2
 1124  00001bf8  20020030	addi	r2,r0,(#0x30)&0xff
 1125  00001bfc  a0220000	sb	(r1),r2
 1126  00001c00  080000ec	j	L61_LF2
 1127  00001c04  54000000	nop; delay slot nop
 1128  00001c08          	L62_LF2:
 1129  00001c08  20010001	addi	r1,r0,#1
 1130  00001c0c  afc1fff4	sw	-12(r30),r1
 1131  00001c10          	L64_LF2:
 1132  00001c10  8fc1fff4	lw	r1,-12(r30)
 1133  00001c14  8fc20000	lw	r2,(r30)
 1134  00001c18  0022082c	sle	r1,r1,r2
 1135  00001c1c  1420000c	bnez	r1,L66_LF2
 1136  00001c20  54000000	nop; delay slot nop
 1137  00001c24  08000024	j	L65_LF2
 1138  00001c28  54000000	nop; delay slot nop
 1139  00001c2c          	L67_LF2:
 1140  00001c2c          	L66_LF2:
 1141  00001c2c  8fc1fff4	lw	r1,-12(r30)
 1142  00001c30  00011820	add	r3,r0,r1
 1143  00001c34  50620002	slli	r2,r3,#0x2
 1144  00001c38  00411020	add	r2,r2,r1
 1145  00001c3c  50410001	slli	r1,r2,#0x1
 1146  00001c40  afc1fff4	sw	-12(r30),r1
 1147  00001c44  0bffffc8	j	L64_LF2
 1148  00001c48  54000000	nop; delay slot nop
 1149  00001c4c          	L65_LF2:
 1150  00001c4c  54000000	nop
 1151  00001c50          	L68_LF2:
 1152  00001c50  8fc1fff4	lw	r1,-12(r30)
 1153  00001c54  2002000a	addi	r2,r0,#10
 1154  00001c58  00200035	movi2fp	f0,r1
 1155  00001c5c  00400835	movi2fp	f1,r2
 1156  00001c60  0401000f	div	f0,f0,f1
 1157  00001c64  00000834	movfp2i	r1,f0
 1158  00001c68  afc1fff4	sw	-12(r30),r1
 1159  00001c6c  8fc10004	lw	r1,4(r30)
 1160  00001c70  20220001	addi	r2,r1,#1
 1161  00001c74  afc20004	sw	4(r30),r2
 1162  00001c78  8fc20000	lw	r2,(r30)
 1163  00001c7c  8fc3fff4	lw	r3,-12(r30)
 1164  00001c80  00400035	movi2fp	f0,r2
 1165  00001c84  00600835	movi2fp	f1,r3
 1166  00001c88  0401000f	div	f0,f0,f1
 1167  00001c8c  00001034	movfp2i	r2,f0
 1168  00001c90  00021820	add	r3,r0,r2
 1169  00001c94  20620030	addi	r2,r3,#48
 1170  00001c98  a0220000	sb	(r1),r2
 1171  00001c9c  8fc10000	lw	r1,(r30)
 1172  00001ca0  8fc3fff4	lw	r3,-12(r30)
 1173  00001ca4  00200035	movi2fp	f0,r1
 1174  00001ca8  00600835	movi2fp	f1,r3
 1175  00001cac  0401000f	div	f0,f0,f1
 1176  00001cb0  00001034	movfp2i	r2,f0
 1177  00001cb4  8fc3fff4	lw	r3,-12(r30)
 1178  00001cb8  00400035	movi2fp	f0,r2
 1179  00001cbc  00600835	movi2fp	f1,r3
 1180  00001cc0  0401000e	mult	f0,f0,f1
 1181  00001cc4  00001034	movfp2i	r2,f0
 1182  00001cc8  00220822	sub	r1,r1,r2
 1183  00001ccc  afc10000	sw	(r30),r1
 1184  00001cd0          	L70_LF2:
 1185  00001cd0  8fc1fff4	lw	r1,-12(r30)
 1186  00001cd4  6c220001	sgti	r2,r1,#1
 1187  00001cd8  1440000c	bnez	r2,L71_LF2
 1188  00001cdc  54000000	nop; delay slot nop
 1189  00001ce0  0800000c	j	L61_LF2
 1190  00001ce4  54000000	nop; delay slot nop
 1191  00001ce8          	L71_LF2:
 1192  00001ce8  0bffff64	j	L68_LF2
 1193  00001cec  54000000	nop; delay slot nop
 1194  00001cf0          	L69_LF2:
 1195  00001cf0          	L63_LF2:
 1196  00001cf0          	L61_LF2:
 1197  00001cf0  8fc10004	lw	r1,4(r30)
 1198  00001cf4  20020000	addi	r2,r0,(#0x0)&0xff
 1199  00001cf8  a0220000	sb	(r1),r2
 1200  00001cfc          	L59_LF2:
 1201  00001cfc  8fa20000	lw	r2,0(r29)
 1202  00001d00  8fa30004	lw	r3,4(r29)
 1203  00001d04  8fdffff8	lw	r31,-8(r30)
 1204  00001d08  001ee820	add	r29,r0,r30
 1205  00001d0c  8fdefffc	lw	r30,-4(r30)
 1206  00001d10  4be00000	jr	r31
 1207  00001d14  54000000	nop
 1208  00001d18          	.endproc _ditoa
 1209  00001d18          	.align 2
 1210  00001d18          	.proc _dstrtol
 1211  00001d18          	.global _dstrtol
 1212  00001d18          	_dstrtol:
 1213                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1214  00001d18  afbefffc	sw	-4(r29),r30; push fp
 1215  00001d1c  001df020	add	r30,r0,r29; fp = sp
 1216  00001d20  afbffff8	sw	-8(r29),r31; push ret addr
 1217  00001d24  2fbd0020	subui	r29,r29,#32; alloc local storage
 1218  00001d28  afa20000	sw	0(r29),r2
 1219  00001d2c  20010000	addi	r1,r0,#0
 1220  00001d30  afc1fff4	sw	-12(r30),r1
 1221  00001d34          	L73_LF2:
 1222  00001d34  8fc10000	lw	r1,(r30)
 1223  00001d38  90220000	lbu	r2,(r1)
 1224  00001d3c  60410020	seqi	r1,r2,#32
 1225  00001d40  14200034	bnez	r1,L75_LF2
 1226  00001d44  54000000	nop; delay slot nop
 1227  00001d48  8fc10000	lw	r1,(r30)
 1228  00001d4c  90220000	lbu	r2,(r1)
 1229  00001d50  60410009	seqi	r1,r2,#9
 1230  00001d54  14200020	bnez	r1,L75_LF2
 1231  00001d58  54000000	nop; delay slot nop
 1232  00001d5c  8fc10000	lw	r1,(r30)
 1233  00001d60  90220000	lbu	r2,(r1)
 1234  00001d64  6041000a	seqi	r1,r2,#10
 1235  00001d68  1420000c	bnez	r1,L75_LF2
 1236  00001d6c  54000000	nop; delay slot nop
 1237  00001d70  0800001c	j	L74_LF2
 1238  00001d74  54000000	nop; delay slot nop
 1239  00001d78          	L75_LF2:
 1240  00001d78  8fc20000	lw	r2,(r30)
 1241  00001d7c  20410001	addi	r1,r2,#1
 1242  00001d80  00011020	add	r2,r0,r1
 1243  00001d84  afc20000	sw	(r30),r2
 1244  00001d88  0bffffa8	j	L73_LF2
 1245  00001d8c  54000000	nop; delay slot nop
 1246  00001d90          	L74_LF2:
 1247  00001d90  8fc10004	lw	r1,4(r30)
 1248  00001d94  64220000	snei	r2,r1,#0
 1249  00001d98  10400010	beqz	r2,L76_LF2
 1250  00001d9c  54000000	nop; delay slot nop
 1251  00001da0  8fc10004	lw	r1,4(r30)
 1252  00001da4  8fc20000	lw	r2,(r30)
 1253  00001da8  ac220000	sw	(r1),r2
 1254  00001dac          	L76_LF2:
 1255  00001dac  8fc10000	lw	r1,(r30)
 1256  00001db0  90220000	lbu	r2,(r1)
 1257  00001db4  64410000	snei	r1,r2,#0
 1258  00001db8  14200010	bnez	r1,L77_LF2
 1259  00001dbc  54000000	nop; delay slot nop
 1260  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1261  00001dc4  08000294	j	L72_LF2
 1262  00001dc8  54000000	nop; delay slot nop
 1263  00001dcc          	L77_LF2:
 1264  00001dcc  8fc10000	lw	r1,(r30)
 1265  00001dd0  90220000	lbu	r2,(r1)
 1266  00001dd4  6041002d	seqi	r1,r2,#45
 1267  00001dd8  10200024	beqz	r1,L78_LF2
 1268  00001ddc  54000000	nop; delay slot nop
 1269  00001de0  2001ffff	addi	r1,r0,#-1
 1270  00001de4  afc1ffec	sw	-20(r30),r1
 1271  00001de8  8fc20000	lw	r2,(r30)
 1272  00001dec  20410001	addi	r1,r2,#1
 1273  00001df0  00011020	add	r2,r0,r1
 1274  00001df4  afc20000	sw	(r30),r2
 1275  00001df8  0800000c	j	L79_LF2
 1276  00001dfc  54000000	nop; delay slot nop
 1277  00001e00          	L78_LF2:
 1278  00001e00  20010001	addi	r1,r0,#1
 1279  00001e04  afc1ffec	sw	-20(r30),r1
 1280  00001e08          	L79_LF2:
 1281  00001e08  8fc10008	lw	r1,8(r30)
 1282  00001e0c  64220000	snei	r2,r1,#0
 1283  00001e10  14400090	bnez	r2,L80_LF2
 1284  00001e14  54000000	nop; delay slot nop
 1285  00001e18  8fc10000	lw	r1,(r30)
 1286  00001e1c  90220000	lbu	r2,(r1)
 1287  00001e20  60410030	seqi	r1,r2,#48
 1288  00001e24  10200074	beqz	r1,L81_LF2
 1289  00001e28  54000000	nop; delay slot nop
 1290  00001e2c  8fc20000	lw	r2,(r30)
 1291  00001e30  20410001	addi	r1,r2,#1
 1292  00001e34  00011020	add	r2,r0,r1
 1293  00001e38  afc20000	sw	(r30),r2
 1294  00001e3c  8fc10000	lw	r1,(r30)
 1295  00001e40  90220000	lbu	r2,(r1)
 1296  00001e44  60410078	seqi	r1,r2,#120
 1297  00001e48  14200020	bnez	r1,L83_LF2
 1298  00001e4c  54000000	nop; delay slot nop
 1299  00001e50  8fc10000	lw	r1,(r30)
 1300  00001e54  90220000	lbu	r2,(r1)
 1301  00001e58  60410058	seqi	r1,r2,#88
 1302  00001e5c  1420000c	bnez	r1,L83_LF2
 1303  00001e60  54000000	nop; delay slot nop
 1304  00001e64  08000024	j	L82_LF2
 1305  00001e68  54000000	nop; delay slot nop
 1306  00001e6c          	L83_LF2:
 1307  00001e6c  20010010	addi	r1,r0,#16
 1308  00001e70  afc10008	sw	8(r30),r1
 1309  00001e74  8fc20000	lw	r2,(r30)
 1310  00001e78  20410001	addi	r1,r2,#1
 1311  00001e7c  00011020	add	r2,r0,r1
 1312  00001e80  afc20000	sw	(r30),r2
 1313  00001e84  0800000c	j	L84_LF2
 1314  00001e88  54000000	nop; delay slot nop
 1315  00001e8c          	L82_LF2:
 1316  00001e8c  20010008	addi	r1,r0,#8
 1317  00001e90  afc10008	sw	8(r30),r1
 1318  00001e94          	L84_LF2:
 1319  00001e94  0800000c	j	L80_LF2
 1320  00001e98  54000000	nop; delay slot nop
 1321  00001e9c          	L81_LF2:
 1322  00001e9c  2001000a	addi	r1,r0,#10
 1323  00001ea0  afc10008	sw	8(r30),r1
 1324  00001ea4          	L85_LF2:
 1325  00001ea4          	L80_LF2:
 1326  00001ea4  8fc10008	lw	r1,8(r30)
 1327  00001ea8  70220000	slei	r2,r1,#0
 1328  00001eac  1440001c	bnez	r2,L87_LF2
 1329  00001eb0  54000000	nop; delay slot nop
 1330  00001eb4  8fc10008	lw	r1,8(r30)
 1331  00001eb8  6c220010	sgti	r2,r1,#16
 1332  00001ebc  1440000c	bnez	r2,L87_LF2
 1333  00001ec0  54000000	nop; delay slot nop
 1334  00001ec4  08000010	j	L86_LF2
 1335  00001ec8  54000000	nop; delay slot nop
 1336  00001ecc          	L87_LF2:
 1337  00001ecc  8fc1fff4	lw	r1,-12(r30)
 1338  00001ed0  08000188	j	L72_LF2
 1339  00001ed4  54000000	nop; delay slot nop
 1340  00001ed8          	L86_LF2:
 1341  00001ed8  54000000	nop
 1342  00001edc          	L88_LF2:
 1343  00001edc  8fc10000	lw	r1,(r30)
 1344  00001ee0  90220000	lbu	r2,(r1)
 1345  00001ee4  6c41002f	sgtui	r1,r2,#47
 1346  00001ee8  10200030	beqz	r1,L91_LF2
 1347  00001eec  54000000	nop; delay slot nop
 1348  00001ef0  8fc10000	lw	r1,(r30)
 1349  00001ef4  90220000	lbu	r2,(r1)
 1350  00001ef8  70410039	sleui	r1,r2,#57
 1351  00001efc  1020001c	beqz	r1,L91_LF2
 1352  00001f00  54000000	nop; delay slot nop
 1353  00001f04  8fc10000	lw	r1,(r30)
 1354  00001f08  90220000	lbu	r2,(r1)
 1355  00001f0c  2041ffd0	addi	r1,r2,#-48
 1356  00001f10  afc1fff0	sw	-16(r30),r1
 1357  00001f14  0800008c	j	L92_LF2
 1358  00001f18  54000000	nop; delay slot nop
 1359  00001f1c          	L91_LF2:
 1360  00001f1c  8fc10000	lw	r1,(r30)
 1361  00001f20  90220000	lbu	r2,(r1)
 1362  00001f24  6c410060	sgtui	r1,r2,#96
 1363  00001f28  10200030	beqz	r1,L93_LF2
 1364  00001f2c  54000000	nop; delay slot nop
 1365  00001f30  8fc10000	lw	r1,(r30)
 1366  00001f34  90220000	lbu	r2,(r1)
 1367  00001f38  7041007a	sleui	r1,r2,#122
 1368  00001f3c  1020001c	beqz	r1,L93_LF2
 1369  00001f40  54000000	nop; delay slot nop
 1370  00001f44  8fc10000	lw	r1,(r30)
 1371  00001f48  90220000	lbu	r2,(r1)
 1372  00001f4c  2041ffa9	addi	r1,r2,#-87
 1373  00001f50  afc1fff0	sw	-16(r30),r1
 1374  00001f54  0800004c	j	L92_LF2
 1375  00001f58  54000000	nop; delay slot nop
 1376  00001f5c          	L93_LF2:
 1377  00001f5c  8fc10000	lw	r1,(r30)
 1378  00001f60  90220000	lbu	r2,(r1)
 1379  00001f64  6c410040	sgtui	r1,r2,#64
 1380  00001f68  10200030	beqz	r1,L95_LF2
 1381  00001f6c  54000000	nop; delay slot nop
 1382  00001f70  8fc10000	lw	r1,(r30)
 1383  00001f74  90220000	lbu	r2,(r1)
 1384  00001f78  7041005a	sleui	r1,r2,#90
 1385  00001f7c  1020001c	beqz	r1,L95_LF2
 1386  00001f80  54000000	nop; delay slot nop
 1387  00001f84  8fc10000	lw	r1,(r30)
 1388  00001f88  90220000	lbu	r2,(r1)
 1389  00001f8c  2041ffc9	addi	r1,r2,#-55
 1390  00001f90  afc1fff0	sw	-16(r30),r1
 1391  00001f94  0800000c	j	L92_LF2
 1392  00001f98  54000000	nop; delay slot nop
 1393  00001f9c          	L95_LF2:
 1394  00001f9c  200103e8	addi	r1,r0,#1000
 1395  00001fa0  afc1fff0	sw	-16(r30),r1
 1396  00001fa4          	L96_LF2:
 1397  00001fa4          	L94_LF2:
 1398  00001fa4          	L92_LF2:
 1399  00001fa4  8fc1fff0	lw	r1,-16(r30)
 1400  00001fa8  8fc20008	lw	r2,8(r30)
 1401  00001fac  0022082a	slt	r1,r1,r2
 1402  00001fb0  10200040	beqz	r1,L90_LF2
 1403  00001fb4  54000000	nop; delay slot nop
 1404  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1405  00001fbc  8fc20008	lw	r2,8(r30)
 1406  00001fc0  00200035	movi2fp	f0,r1
 1407  00001fc4  00400835	movi2fp	f1,r2
 1408  00001fc8  0401000e	mult	f0,f0,f1
 1409  00001fcc  00000834	movfp2i	r1,f0
 1410  00001fd0  afc1fff4	sw	-12(r30),r1
 1411  00001fd4  8fc1fff4	lw	r1,-12(r30)
 1412  00001fd8  8fc2fff0	lw	r2,-16(r30)
 1413  00001fdc  00220820	add	r1,r1,r2
 1414  00001fe0  afc1fff4	sw	-12(r30),r1
 1415  00001fe4  8fc20000	lw	r2,(r30)
 1416  00001fe8  20410001	addi	r1,r2,#1
 1417  00001fec  00011020	add	r2,r0,r1
 1418  00001ff0  afc20000	sw	(r30),r2
 1419  00001ff4          	L97_LF2:
 1420  00001ff4          	L90_LF2:
 1421  00001ff4  8fc1fff0	lw	r1,-16(r30)
 1422  00001ff8  8fc20008	lw	r2,8(r30)
 1423  00001ffc  0022082a	slt	r1,r1,r2
 1424  00002000  1420000c	bnez	r1,L98_LF2
 1425  00002004  54000000	nop; delay slot nop
 1426  00002008  0800000c	j	L89_LF2
 1427  0000200c  54000000	nop; delay slot nop
 1428  00002010          	L98_LF2:
 1429  00002010  0bfffec8	j	L88_LF2
 1430  00002014  54000000	nop; delay slot nop
 1431  00002018          	L89_LF2:
 1432  00002018  8fc10004	lw	r1,4(r30)
 1433  0000201c  64220000	snei	r2,r1,#0
 1434  00002020  10400010	beqz	r2,L99_LF2
 1435  00002024  54000000	nop; delay slot nop
 1436  00002028  8fc10004	lw	r1,4(r30)
 1437  0000202c  8fc20000	lw	r2,(r30)
 1438  00002030  ac220000	sw	(r1),r2
 1439  00002034          	L99_LF2:
 1440  00002034  8fc1fff4	lw	r1,-12(r30)
 1441  00002038  8fc2ffec	lw	r2,-20(r30)
 1442  0000203c  00200035	movi2fp	f0,r1
 1443  00002040  00400835	movi2fp	f1,r2
 1444  00002044  0401000e	mult	f0,f0,f1
 1445  00002048  00000834	movfp2i	r1,f0
 1446  0000204c  afc1fff4	sw	-12(r30),r1
 1447  00002050  8fc1fff4	lw	r1,-12(r30)
 1448  00002054  08000004	j	L72_LF2
 1449  00002058  54000000	nop; delay slot nop
 1450  0000205c          	L72_LF2:
 1451  0000205c  8fa20000	lw	r2,0(r29)
 1452  00002060  8fdffff8	lw	r31,-8(r30)
 1453  00002064  001ee820	add	r29,r0,r30
 1454  00002068  8fdefffc	lw	r30,-4(r30)
 1455  0000206c  4be00000	jr	r31
 1456  00002070  54000000	nop
 1457  00002074          	.endproc _dstrtol
 1458  00002074          	.align 2
 1459  00002074          	.proc _bcopy
 1460  00002074          	.global _bcopy
 1461  00002074          	_bcopy:
 1462                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1463  00002074  afbefffc	sw	-4(r29),r30; push fp
 1464  00002078  001df020	add	r30,r0,r29; fp = sp
 1465  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1466  00002080  2fbd0010	subui	r29,r29,#16; alloc local storage
 1467  00002084  afa20000	sw	0(r29),r2
 1468  00002088  afa30004	sw	4(r29),r3
 1469  0000208c  54000000	nop
 1470  00002090          	L101_LF2:
 1471  00002090  8fc10008	lw	r1,8(r30)
 1472  00002094  2022ffff	addi	r2,r1,#-1
 1473  00002098  afc20008	sw	8(r30),r2
 1474  0000209c  6c210000	sgti	r1,r1,#0
 1475  000020a0  1420000c	bnez	r1,L103_LF2
 1476  000020a4  54000000	nop; delay slot nop
 1477  000020a8  0800002c	j	L102_LF2
 1478  000020ac  54000000	nop; delay slot nop
 1479  000020b0          	L103_LF2:
 1480  000020b0  8fc10004	lw	r1,4(r30)
 1481  000020b4  20220001	addi	r2,r1,#1
 1482  000020b8  afc20004	sw	4(r30),r2
 1483  000020bc  8fc20000	lw	r2,(r30)
 1484  000020c0  20430001	addi	r3,r2,#1
 1485  000020c4  afc30000	sw	(r30),r3
 1486  000020c8  80420000	lb	r2,(r2)
 1487  000020cc  a0220000	sb	(r1),r2
 1488  000020d0  0bffffbc	j	L101_LF2
 1489  000020d4  54000000	nop; delay slot nop
 1490  000020d8          	L102_LF2:
 1491  000020d8          	L100_LF2:
 1492  000020d8  8fa20000	lw	r2,0(r29)
 1493  000020dc  8fa30004	lw	r3,4(r29)
 1494  000020e0  8fdffff8	lw	r31,-8(r30)
 1495  000020e4  001ee820	add	r29,r0,r30
 1496  000020e8  8fdefffc	lw	r30,-4(r30)
 1497  000020ec  4be00000	jr	r31
 1498  000020f0  54000000	nop
 1499  000020f4          	.endproc _bcopy
 1500  000020f4          	.align 2
 1501  000020f4          	.proc _bzero
 1502  000020f4          	.global _bzero
 1503  000020f4          	_bzero:
 1504                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1505  000020f4  afbefffc	sw	-4(r29),r30; push fp
 1506  000020f8  001df020	add	r30,r0,r29; fp = sp
 1507  000020fc  afbffff8	sw	-8(r29),r31; push ret addr
 1508  00002100  2fbd0010	subui	r29,r29,#16; alloc local storage
 1509  00002104  afa20000	sw	0(r29),r2
 1510  00002108  54000000	nop
 1511  0000210c          	L105_LF2:
 1512  0000210c  8fc10004	lw	r1,4(r30)
 1513  00002110  2022ffff	addi	r2,r1,#-1
 1514  00002114  afc20004	sw	4(r30),r2
 1515  00002118  6c210000	sgti	r1,r1,#0
 1516  0000211c  1420000c	bnez	r1,L107_LF2
 1517  00002120  54000000	nop; delay slot nop
 1518  00002124  08000020	j	L106_LF2
 1519  00002128  54000000	nop; delay slot nop
 1520  0000212c          	L107_LF2:
 1521  0000212c  8fc10000	lw	r1,(r30)
 1522  00002130  20220001	addi	r2,r1,#1
 1523  00002134  afc20000	sw	(r30),r2
 1524  00002138  20020000	addi	r2,r0,(#0x0)&0xff
 1525  0000213c  a0220000	sb	(r1),r2
 1526  00002140  0bffffc8	j	L105_LF2
 1527  00002144  54000000	nop; delay slot nop
 1528  00002148          	L106_LF2:
 1529  00002148          	L104_LF2:
 1530  00002148  8fa20000	lw	r2,0(r29)
 1531  0000214c  8fdffff8	lw	r31,-8(r30)
 1532  00002150  001ee820	add	r29,r0,r30
 1533  00002154  8fdefffc	lw	r30,-4(r30)
 1534  00002158  4be00000	jr	r31
 1535  0000215c  54000000	nop
 1536  00002160          	.endproc _bzero
 1537  00002160          	.align 2
 1538  00002160          	.proc _min
 1539  00002160          	.global _min
 1540  00002160          	_min:
 1541                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1542  00002160  afbefffc	sw	-4(r29),r30; push fp
 1543  00002164  001df020	add	r30,r0,r29; fp = sp
 1544  00002168  afbffff8	sw	-8(r29),r31; push ret addr
 1545  0000216c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1546  00002170  afa20000	sw	0(r29),r2
 1547  00002174  afa30004	sw	4(r29),r3
 1548  00002178  8fc10000	lw	r1,(r30)
 1549  0000217c  8fc20004	lw	r2,4(r30)
 1550  00002180  0022182c	sle	r3,r1,r2
 1551  00002184  14600008	bnez	r3,L109_LF2
 1552  00002188  54000000	nop; delay slot nop
 1553  0000218c  8fc10004	lw	r1,4(r30)
 1554  00002190          	L109_LF2:
 1555  00002190  08000004	j	L108_LF2
 1556  00002194  54000000	nop; delay slot nop
 1557  00002198          	L108_LF2:
 1558  00002198  8fa20000	lw	r2,0(r29)
 1559  0000219c  8fa30004	lw	r3,4(r29)
 1560  000021a0  8fdffff8	lw	r31,-8(r30)
 1561  000021a4  001ee820	add	r29,r0,r30
 1562  000021a8  8fdefffc	lw	r30,-4(r30)
 1563  000021ac  4be00000	jr	r31
 1564  000021b0  54000000	nop
 1565  000021b4          	.endproc _min
 1566  000021b4          	.align 2
 1567  000021b4          	.proc _max
 1568  000021b4          	.global _max
 1569  000021b4          	_max:
 1570                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1571  000021b4  afbefffc	sw	-4(r29),r30; push fp
 1572  000021b8  001df020	add	r30,r0,r29; fp = sp
 1573  000021bc  afbffff8	sw	-8(r29),r31; push ret addr
 1574  000021c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1575  000021c4  afa20000	sw	0(r29),r2
 1576  000021c8  afa30004	sw	4(r29),r3
 1577  000021cc  8fc10000	lw	r1,(r30)
 1578  000021d0  8fc20004	lw	r2,4(r30)
 1579  000021d4  0022182d	sge	r3,r1,r2
 1580  000021d8  14600008	bnez	r3,L111_LF2
 1581  000021dc  54000000	nop; delay slot nop
 1582  000021e0  8fc10004	lw	r1,4(r30)
 1583  000021e4          	L111_LF2:
 1584  000021e4  08000004	j	L110_LF2
 1585  000021e8  54000000	nop; delay slot nop
 1586  000021ec          	L110_LF2:
 1587  000021ec  8fa20000	lw	r2,0(r29)
 1588  000021f0  8fa30004	lw	r3,4(r29)
 1589  000021f4  8fdffff8	lw	r31,-8(r30)
 1590  000021f8  001ee820	add	r29,r0,r30
 1591  000021fc  8fdefffc	lw	r30,-4(r30)
 1592  00002200  4be00000	jr	r31
 1593  00002204  54000000	nop
 1594  00002208          	.endproc _max
 1595                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1596                      ;;;
 1597                      ;;; Most of the traps are called in files from libtraps.
 1600  00002208          	.align 2
 1601  00002208          	.proc _exit
 1602  00002208          	.global _exit
 1603  00002208          	_exit:
 1604  00002208  44000300	trap	#0x300
 1605  0000220c  4be00000	jr	r31
 1606  00002210  54000000	nop
 1607  00002214          	.endproc _exit
 1609                      ; for the benefit of gcc.
 1610  00002214          	.proc ___main
 1611  00002214          	.global ___main
 1612  00002214          	___main:
 1613  00002214  4be00000	jr	r31
 1614  00002218  54000000	nop
 1615  0000221c          	.endproc ___main
 1616  0000221c          	.text
 1617  0000221c          	.global _etext
 1618  0000221c          	_etext:
 1619  0000221c          	.align 3
 1620  00002220          	.data
 1621  000030c1          	.global _edata
 1622  000030c1          	_edata:
