 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 233
    4                      ; Text size: 4824
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test %d: filling the heap to the brim\n\n\000"
   85  00003038  2025643a	
   85  0000303c  2066696c	
   85  00003040  6c696e67	
   85  00003044  20746865	
   85  00003048  20686561	
   85  0000304c  7020746f	
   85  00003050  20746865	
   85  00003054  20627269	
   85  00003058  6d0a0a00	
   86  0000305c          	.align 2
   87  0000305c          	LC2_LF0:
   88  0000305c  54657374	.ascii "Test %d: freeing full heap\n\n\000"
   88  00003060  2025643a	
   88  00003064  20667265	
   88  00003068  65696e67	
   88  0000306c  2066756c	
   88  00003070  6c206865	
   88  00003074  61700a0a	
   88  00003078  00      	
   89  00003079          	.align 2
   90  0000307c          	LC3_LF0:
   91  0000307c  54657374	.ascii "Test %d: making holes\n\n\000"
   91  00003080  2025643a	
   91  00003084  206d616b	
   91  00003088  696e6720	
   91  0000308c  686f6c65	
   91  00003090  730a0a00	
   92  00003094          	.align 2
   93  00003094          	LC4_LF0:
   94  00003094  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   94  00003098  6f5f776f	
   94  0000309c  726c6420	
   94  000030a0  28256429	
   94  000030a4  3a204261	
   94  000030a8  64207365	
   94  000030ac  6d617068	
   94  000030b0  6f726520	
   94  000030b4  735f7072	
   94  000030b8  6f63735f	
   94  000030bc  636f6d70	
   94  000030c0  6c657465	
   94  000030c4  64202825	
   94  000030c8  6429210a	
   94  000030cc  00      	
   95  000030cd          	.align 2
   96  000030d0          	LC5_LF0:
   97  000030d0  74657374	.ascii "test_malloc (%d): Done!\n\000"
   97  000030d4  5f6d616c	
   97  000030d8  6c6f6320	
   97  000030dc  28256429	
   97  000030e0  3a20446f	
   97  000030e4  6e65210a	
   97  000030e8  00      	
   98  000030e9          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 512 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0208	subui	r29,r29,#520; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c0011e0	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410003	snei	r1,r2,#3
  113  000010f8  10200028	beqz	r1,L14_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  117  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  118  0000110c  afa50000	sw	(r29),r5
  119  00001110  0c0002fc	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  0c0003fc	jal	_Exit
  122  0000111c  54000000	nop; not filled.
  123  00001120  23bd0008	addi	r29,r29,#8
  124  00001124          	L14_LF0:
  125  00001124  23bdfff0	addi	r29,r29,#-16
  126  00001128  8c650004	lw	r5,4(r3)
  127  0000112c  afa50000	sw	(r29),r5
  128  00001130  20050000	addi	r5,r0,#0
  129  00001134  afa50004	sw	4(r29),r5
  130  00001138  2005000a	addi	r5,r0,#10
  131  0000113c  afa50008	sw	8(r29),r5
  132  00001140  0c000c90	jal	_dstrtol
  133  00001144  54000000	nop; not filled.
  134  00001148  00012020	add	r4,r0,r1
  135  0000114c  8c630008	lw	r3,8(r3)
  136  00001150  afa30000	sw	(r29),r3
  137  00001154  20050000	addi	r5,r0,#0
  138  00001158  afa50004	sw	4(r29),r5
  139  0000115c  2005000a	addi	r5,r0,#10
  140  00001160  afa50008	sw	8(r29),r5
  141  00001164  0c000c6c	jal	_dstrtol
  142  00001168  54000000	nop; not filled.
  143  0000116c  00011020	add	r2,r0,r1
  144  00001170  23bd0010	addi	r29,r29,#16
  145  00001174  60410002	seqi	r1,r2,#2
  146  00001178  102000ac	beqz	r1,L15_LF0
  147  0000117c  54000000	nop; not filled.
  148  00001180  23bdfff8	addi	r29,r29,#-8
  149  00001184  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  150  00001188  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  151  0000118c  afa50000	sw	(r29),r5
  152  00001190  afa20004	sw	4(r29),r2
  153  00001194  0c000278	jal	_Printf
  154  00001198  54000000	nop; not filled.
  155  0000119c  23bd0008	addi	r29,r29,#8
  156  000011a0  23c2fff8	addi	r2,r30,#-8
  157  000011a4  23c301f4	addi	r3,r30,#500
  158  000011a8          	L19_LF0:
  159  000011a8  23bdfff8	addi	r29,r29,#-8
  160  000011ac  20050020	addi	r5,r0,#32
  161  000011b0  afa50000	sw	(r29),r5
  162  000011b4  0c00036c	jal	_malloc
  163  000011b8  54000000	nop; not filled.
  164  000011bc  ac41fe00	sw	-512(r2),r1
  165  000011c0  23bd0008	addi	r29,r29,#8
  166  000011c4  20420004	addi	r2,r2,#4
  167  000011c8  0043082c	sle	r1,r2,r3
  168  000011cc  1420ffd8	bnez	r1,L19_LF0
  169  000011d0  54000000	nop; not filled.
  170  000011d4  23bdfff8	addi	r29,r29,#-8
  171  000011d8  20050001	addi	r5,r0,#1
  172  000011dc  afa50000	sw	(r29),r5
  173  000011e0  0c000340	jal	_malloc
  174  000011e4  54000000	nop; not filled.
  175  000011e8  20020000	addi	r2,r0,#0
  176  000011ec  23bd0008	addi	r29,r29,#8
  177  000011f0  23c3fff8	addi	r3,r30,#-8
  178  000011f4          	L24_LF0:
  179  000011f4  23bdfff8	addi	r29,r29,#-8
  180  000011f8  8c65fe00	lw	r5,-512(r3)
  181  000011fc  afa50000	sw	(r29),r5
  182  00001200  0c000328	jal	_mfree
  183  00001204  54000000	nop; not filled.
  184  00001208  23bd0008	addi	r29,r29,#8
  185  0000120c  20630004	addi	r3,r3,#4
  186  00001210  20420001	addi	r2,r2,#1
  187  00001214  7041007f	slei	r1,r2,#127
  188  00001218  10200128	beqz	r1,L26_LF0
  189  0000121c  54000000	nop; not filled.
  190  00001220  0bffffd0	j	L24_LF0
  191  00001224  54000000	nop; not filled.
  192  00001228          	L15_LF0:
  193  00001228  60410001	seqi	r1,r2,#1
  194  0000122c  1020005c	beqz	r1,L27_LF0
  195  00001230  54000000	nop; not filled.
  196  00001234  23bdfff8	addi	r29,r29,#-8
  197  00001238  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  198  0000123c  24a5305c	addui	r5,r5,(LC2_LF0)&0xffff
  199  00001240  afa50000	sw	(r29),r5
  200  00001244  afa20004	sw	4(r29),r2
  201  00001248  0c0001c4	jal	_Printf
  202  0000124c  54000000	nop; not filled.
  203  00001250  20051000	addi	r5,r0,#4096
  204  00001254  afa50000	sw	(r29),r5
  205  00001258  0c0002c8	jal	_malloc
  206  0000125c  54000000	nop; not filled.
  207  00001260  afc1fdf8	sw	-520(r30),r1
  208  00001264  afa10000	sw	(r29),r1
  209  00001268  0c0002c0	jal	_mfree
  210  0000126c  54000000	nop; not filled.
  211  00001270  20050002	addi	r5,r0,#2
  212  00001274  afa50000	sw	(r29),r5
  213  00001278  0c0002a8	jal	_malloc
  214  0000127c  54000000	nop; not filled.
  215  00001280  afc1fdfc	sw	-516(r30),r1
  216  00001284  080000b8	j	L31_LF0
  217  00001288  54000000	nop; not filled.
  218  0000128c          	L27_LF0:
  219  0000128c  64410000	snei	r1,r2,#0
  220  00001290  142000b0	bnez	r1,L26_LF0
  221  00001294  54000000	nop; not filled.
  222  00001298  23bdfff8	addi	r29,r29,#-8
  223  0000129c  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  224  000012a0  24a5307c	addui	r5,r5,(LC3_LF0)&0xffff
  225  000012a4  afa50000	sw	(r29),r5
  226  000012a8  afa20004	sw	4(r29),r2
  227  000012ac  0c000160	jal	_Printf
  228  000012b0  54000000	nop; not filled.
  229  000012b4  20050020	addi	r5,r0,#32
  230  000012b8  afa50000	sw	(r29),r5
  231  000012bc  0c000264	jal	_malloc
  232  000012c0  54000000	nop; not filled.
  233  000012c4  afc1fdf8	sw	-520(r30),r1
  234  000012c8  20050040	addi	r5,r0,#64
  235  000012cc  afa50000	sw	(r29),r5
  236  000012d0  0c000250	jal	_malloc
  237  000012d4  54000000	nop; not filled.
  238  000012d8  afc1fdfc	sw	-516(r30),r1
  239  000012dc  afa50000	sw	(r29),r5
  240  000012e0  0c000240	jal	_malloc
  241  000012e4  54000000	nop; not filled.
  242  000012e8  afc1fe00	sw	-512(r30),r1
  243  000012ec  20050080	addi	r5,r0,#128
  244  000012f0  afa50000	sw	(r29),r5
  245  000012f4  0c00022c	jal	_malloc
  246  000012f8  54000000	nop; not filled.
  247  000012fc  afc1fe04	sw	-508(r30),r1
  248  00001300  8fc5fdf8	lw	r5,-520(r30)
  249  00001304  afa50000	sw	(r29),r5
  250  00001308  0c000220	jal	_mfree
  251  0000130c  54000000	nop; not filled.
  252  00001310  8fc5fdfc	lw	r5,-516(r30)
  253  00001314  afa50000	sw	(r29),r5
  254  00001318  0c000210	jal	_mfree
  255  0000131c  54000000	nop; not filled.
  256  00001320  8fc5fe00	lw	r5,-512(r30)
  257  00001324  afa50000	sw	(r29),r5
  258  00001328  0c000200	jal	_mfree
  259  0000132c  54000000	nop; not filled.
  260  00001330  8fc5fe04	lw	r5,-508(r30)
  261  00001334  afa50000	sw	(r29),r5
  262  00001338  0c0001f0	jal	_mfree
  263  0000133c  54000000	nop; not filled.
  264  00001340          	L31_LF0:
  265  00001340  23bd0008	addi	r29,r29,#8
  266  00001344          	L26_LF0:
  267  00001344  23bdfff8	addi	r29,r29,#-8
  268  00001348  afa40000	sw	(r29),r4
  269  0000134c  0c000114	jal	_sem_signal
  270  00001350  54000000	nop; not filled.
  271  00001354  23bd0008	addi	r29,r29,#8
  272  00001358  64210001	snei	r1,r1,#1
  273  0000135c  10200038	beqz	r1,L30_LF0
  274  00001360  54000000	nop; not filled.
  275  00001364  0c0000b4	jal	_getpid
  276  00001368  54000000	nop; not filled.
  277  0000136c  23bdfff0	addi	r29,r29,#-16
  278  00001370  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  279  00001374  24a53094	addui	r5,r5,(LC4_LF0)&0xffff
  280  00001378  afa50000	sw	(r29),r5
  281  0000137c  afa10004	sw	4(r29),r1
  282  00001380  afa40008	sw	8(r29),r4
  283  00001384  0c000088	jal	_Printf
  284  00001388  54000000	nop; not filled.
  285  0000138c  0c000188	jal	_Exit
  286  00001390  54000000	nop; not filled.
  287  00001394  23bd0010	addi	r29,r29,#16
  288  00001398          	L30_LF0:
  289  00001398  0c000080	jal	_getpid
  290  0000139c  54000000	nop; not filled.
  291  000013a0  23bdfff8	addi	r29,r29,#-8
  292  000013a4  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  293  000013a8  24a530d0	addui	r5,r5,(LC5_LF0)&0xffff
  294  000013ac  afa50000	sw	(r29),r5
  295  000013b0  afa10004	sw	4(r29),r1
  296  000013b4  0c000058	jal	_Printf
  297  000013b8  54000000	nop; not filled.
  298  000013bc  23bd0008	addi	r29,r29,#8
  299  000013c0  0c000f00	jal	_exit
  300  000013c4  54000000	nop
  301  000013c8          	.endproc _main
  302                      ;;;
  303                      ;;; Stub functions for DLX traps.
  304                      ;;;
  305                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  306                      ;;;
  307                      ;;; The traps such as Open and Close
  308                      ;;; (note the capital letters) are for use by user programs.  The traps
  309                      ;;; with names such as open and close (lower case) are for use by the OS.
  310                      ;;;
  313  000013c8          	.align 2
  315                      ;;; The following are the traps to be used by user-level programs
  316                      ;;;
  318  000013c8          	.align 2
  319  000013c8          	.proc _Open
  320  000013c8          	.global _Open
  321  000013c8          	_Open:
  322                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  323                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  324                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  325  000013c8  44000213	trap	#0x213
  326  000013cc  4be00000	jr	r31
  327  000013d0  54000000	nop
  328  000013d4          	.endproc _Open
  330  000013d4          	.proc _Close
  331  000013d4          	.global _Close
  332  000013d4          	_Close:
  333  000013d4  44000214	trap	#0x214
  334  000013d8  4be00000	jr	r31
  335  000013dc  54000000	nop
  336  000013e0          	.endproc _Close
  338  000013e0          	.proc _Read
  339  000013e0          	.global _Read
  340  000013e0          	_Read:
  341  000013e0  44000210	trap	#0x210
  342  000013e4  4be00000	jr	r31
  343  000013e8  54000000	nop
  344  000013ec          	.endproc _Read
  346  000013ec          	.proc _Write
  347  000013ec          	.global _Write
  348  000013ec          	_Write:
  349  000013ec  44000211	trap	#0x211
  350  000013f0  4be00000	jr	r31
  351  000013f4  54000000	nop
  352  000013f8          	.endproc _Write
  354  000013f8          	.proc _Lseek
  355  000013f8          	.global _Lseek
  356  000013f8          	_Lseek:
  357  000013f8  44000212	trap	#0x212
  358  000013fc  4be00000	jr	r31
  359  00001400  54000000	nop
  360  00001404          	.endproc _Lseek
  362  00001404          	.proc _Putchar
  363  00001404          	.global _Putchar
  364  00001404          	_Putchar:
  365  00001404  44000280	trap	#0x280
  366  00001408  4be00000	jr	r31
  367  0000140c  54000000	nop
  368  00001410          	.endproc _Putchar
  370  00001410          	.proc _Printf
  371  00001410          	.global _Printf
  372  00001410          	_Printf:
  373  00001410  44000201	trap	#0x201
  374  00001414  4be00000	jr	r31
  375  00001418  54000000	nop
  376  0000141c          	.endproc _Printf
  378  0000141c          	.proc _getpid
  379  0000141c          	.global _getpid
  380  0000141c          	_getpid:
  381  0000141c  44000431	trap	#0x431
  382  00001420  4be00000	jr	r31
  383  00001424  54000000	nop
  384  00001428          	.endproc _getpid
  386  00001428          	.proc _process_create
  387  00001428          	.global _process_create
  388  00001428          	_process_create:
  389  00001428  44000432	trap	#0x432
  390  0000142c  4be00000	jr	r31
  391  00001430  54000000	nop
  392  00001434          	.endproc _process_create
  394  00001434          	.proc _shmget
  395  00001434          	.global _shmget
  396  00001434          	_shmget:
  397  00001434  44000440	trap	#0x440
  398  00001438  4be00000	jr	r31
  399  0000143c  54000000	nop
  400  00001440          	.endproc _shmget
  402  00001440          	.proc _shmat
  403  00001440          	.global _shmat
  404  00001440          	_shmat:
  405  00001440  44000441	trap	#0x441
  406  00001444  4be00000	jr	r31
  407  00001448  54000000	nop
  408  0000144c          	.endproc _shmat
  410  0000144c          	.proc _sem_create
  411  0000144c          	.global _sem_create
  412  0000144c          	_sem_create:
  413  0000144c  44000450	trap	#0x450
  414  00001450  4be00000	jr	r31
  415  00001454  54000000	nop
  416  00001458          	.endproc _sem_create
  418  00001458          	.proc _sem_wait
  419  00001458          	.global _sem_wait
  420  00001458          	_sem_wait:
  421  00001458  44000451	trap	#0x451
  422  0000145c  4be00000	jr	r31
  423  00001460  54000000	nop
  424  00001464          	.endproc _sem_wait
  426  00001464          	.proc _sem_signal
  427  00001464          	.global _sem_signal
  428  00001464          	_sem_signal:
  429  00001464  44000452	trap	#0x452
  430  00001468  4be00000	jr	r31
  431  0000146c  54000000	nop
  432  00001470          	.endproc _sem_signal
  434  00001470          	.proc _lock_create
  435  00001470          	.global _lock_create
  436  00001470          	_lock_create:
  437  00001470  44000453	trap	#0x453
  438  00001474  4be00000	jr	r31
  439  00001478  54000000	nop
  440  0000147c          	.endproc _lock_create
  442  0000147c          	.proc _lock_acquire
  443  0000147c          	.global _lock_acquire
  444  0000147c          	_lock_acquire:
  445  0000147c  44000454	trap	#0x454
  446  00001480  4be00000	jr	r31
  447  00001484  54000000	nop
  448  00001488          	.endproc _lock_acquire
  450  00001488          	.proc _lock_release
  451  00001488          	.global _lock_release
  452  00001488          	_lock_release:
  453  00001488  44000455	trap	#0x455
  454  0000148c  4be00000	jr	r31
  455  00001490  54000000	nop
  456  00001494          	.endproc _lock_release
  458  00001494          	.proc _cond_create
  459  00001494          	.global _cond_create
  460  00001494          	_cond_create:
  461  00001494  44000456	trap	#0x456
  462  00001498  4be00000	jr	r31
  463  0000149c  54000000	nop
  464  000014a0          	.endproc _cond_create
  466  000014a0          	.proc _cond_wait
  467  000014a0          	.global _cond_wait
  468  000014a0          	_cond_wait:
  469  000014a0  44000457	trap	#0x457
  470  000014a4  4be00000	jr	r31
  471  000014a8  54000000	nop
  472  000014ac          	.endproc _cond_wait
  474  000014ac          	.proc _cond_signal
  475  000014ac          	.global _cond_signal
  476  000014ac          	_cond_signal:
  477  000014ac  44000458	trap	#0x458
  478  000014b0  4be00000	jr	r31
  479  000014b4  54000000	nop
  480  000014b8          	.endproc _cond_signal
  482  000014b8          	.proc _cond_broadcast
  483  000014b8          	.global _cond_broadcast
  484  000014b8          	_cond_broadcast:
  485  000014b8  44000459	trap	#0x459
  486  000014bc  4be00000	jr	r31
  487  000014c0  54000000	nop
  488  000014c4          	.endproc _cond_broadcast
  490  000014c4          	.proc _mbox_create
  491  000014c4          	.global _mbox_create
  492  000014c4          	_mbox_create:
  493  000014c4  44000460	trap	#0x460
  494  000014c8  4be00000	jr	r31
  495  000014cc  54000000	nop
  496  000014d0          	.endproc _mbox_create
  498  000014d0          	.proc _mbox_open
  499  000014d0          	.global _mbox_open
  500  000014d0          	_mbox_open:
  501  000014d0  44000461	trap	#0x461
  502  000014d4  4be00000	jr	r31
  503  000014d8  54000000	nop
  504  000014dc          	.endproc _mbox_open
  506  000014dc          	.proc _mbox_close
  507  000014dc          	.global _mbox_close
  508  000014dc          	_mbox_close:
  509  000014dc  44000462	trap	#0x462
  510  000014e0  4be00000	jr	r31
  511  000014e4  54000000	nop
  512  000014e8          	.endproc _mbox_close
  514  000014e8          	.proc _mbox_send
  515  000014e8          	.global _mbox_send
  516  000014e8          	_mbox_send:
  517  000014e8  44000463	trap	#0x463
  518  000014ec  4be00000	jr	r31
  519  000014f0  54000000	nop
  520  000014f4          	.endproc _mbox_send
  522  000014f4          	.proc _mbox_recv
  523  000014f4          	.global _mbox_recv
  524  000014f4          	_mbox_recv:
  525  000014f4  44000464	trap	#0x464
  526  000014f8  4be00000	jr	r31
  527  000014fc  54000000	nop
  528  00001500          	.endproc _mbox_recv
  530  00001500          	.proc _sleep
  531  00001500          	.global _sleep
  532  00001500          	_sleep:
  533  00001500  44000465	trap	#0x465
  534  00001504  4be00000	jr	r31
  535  00001508  54000000	nop
  536  0000150c          	.endproc _sleep
  538  0000150c          	.proc _yield
  539  0000150c          	.global _yield
  540  0000150c          	_yield:
  541  0000150c  44000466	trap	#0x466
  542  00001510  4be00000	jr	r31
  543  00001514  54000000	nop
  544  00001518          	.endproc _yield
  547  00001518          	.proc _Exit
  548  00001518          	.global _Exit
  549  00001518          	_Exit:
  550  00001518  44000500	trap	#0x500
  551  0000151c  4be00000	jr	r31
  552  00001520  54000000	nop
  553  00001524          	.endproc _Exit
  556  00001524          	.proc _malloc
  557  00001524          	.global _malloc
  558  00001524          	_malloc:
  559  00001524  44000467	trap	#0x467
  560  00001528  4be00000	jr	r31
  561  0000152c          	.endproc _malloc
  564  0000152c          	.proc _mfree
  565  0000152c          	.global _mfree
  566  0000152c          	_mfree:
  567  0000152c  44000468	trap	#0x468
  568  00001530  4be00000	jr	r31
  569  00001534          	.endproc _mfree
  570                      ; Compiled by GCC
  572  00001534          	.align 2
  573  00001534          	.proc _isspace
  574  00001534          	.global _isspace
  575  00001534          	_isspace:
  576                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  577  00001534  afbefffc	sw	-4(r29),r30; push fp
  578  00001538  001df020	add	r30,r0,r29; fp = sp
  579  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  580  00001540  2fbd0018	subui	r29,r29,#24; alloc local storage
  581  00001544  afa20000	sw	0(r29),r2
  582  00001548  afa30004	sw	4(r29),r3
  583  0000154c  afa40008	sw	8(r29),r4
  584  00001550  83c20003	lb	r2,3(r30)
  585  00001554  20010000	addi	r1,r0,#0
  586  00001558  304300ff	andi	r3,r2,#0x00ff
  587  0000155c  60640020	seqi	r4,r3,#32
  588  00001560  1480002c	bnez	r4,L3_LF2
  589  00001564  54000000	nop; delay slot nop
  590  00001568  304300ff	andi	r3,r2,#0x00ff
  591  0000156c  60640009	seqi	r4,r3,#9
  592  00001570  1480001c	bnez	r4,L3_LF2
  593  00001574  54000000	nop; delay slot nop
  594  00001578  304300ff	andi	r3,r2,#0x00ff
  595  0000157c  6064000a	seqi	r4,r3,#10
  596  00001580  1480000c	bnez	r4,L3_LF2
  597  00001584  54000000	nop; delay slot nop
  598  00001588  08000008	j	L2_LF2
  599  0000158c  54000000	nop; delay slot nop
  600  00001590          	L3_LF2:
  601  00001590  20010001	addi	r1,r0,#1
  602  00001594          	L2_LF2:
  603  00001594  08000004	j	L1_LF2
  604  00001598  54000000	nop; delay slot nop
  605  0000159c          	L1_LF2:
  606  0000159c  8fa20000	lw	r2,0(r29)
  607  000015a0  8fa30004	lw	r3,4(r29)
  608  000015a4  8fa40008	lw	r4,8(r29)
  609  000015a8  8fdffff8	lw	r31,-8(r30)
  610  000015ac  001ee820	add	r29,r0,r30
  611  000015b0  8fdefffc	lw	r30,-4(r30)
  612  000015b4  4be00000	jr	r31
  613  000015b8  54000000	nop
  614  000015bc          	.endproc _isspace
  615  000015bc          	.align 2
  616  000015bc          	.proc _isxdigit
  617  000015bc          	.global _isxdigit
  618  000015bc          	_isxdigit:
  619                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  620  000015bc  afbefffc	sw	-4(r29),r30; push fp
  621  000015c0  001df020	add	r30,r0,r29; fp = sp
  622  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  623  000015c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  624  000015cc  afa20000	sw	0(r29),r2
  625  000015d0  afa30004	sw	4(r29),r3
  626  000015d4  afa40008	sw	8(r29),r4
  627  000015d8  83c20003	lb	r2,3(r30)
  628  000015dc  20010000	addi	r1,r0,#0
  629  000015e0  304300ff	andi	r3,r2,#0x00ff
  630  000015e4  6c64002f	sgtui	r4,r3,#47
  631  000015e8  1080001c	beqz	r4,L7_LF2
  632  000015ec  54000000	nop; delay slot nop
  633  000015f0  304300ff	andi	r3,r2,#0x00ff
  634  000015f4  70640039	sleui	r4,r3,#57
  635  000015f8  1480005c	bnez	r4,L6_LF2
  636  000015fc  54000000	nop; delay slot nop
  637  00001600  08000004	j	L7_LF2
  638  00001604  54000000	nop; delay slot nop
  639  00001608          	L7_LF2:
  640  00001608  304300ff	andi	r3,r2,#0x00ff
  641  0000160c  6c640060	sgtui	r4,r3,#96
  642  00001610  1080001c	beqz	r4,L8_LF2
  643  00001614  54000000	nop; delay slot nop
  644  00001618  304300ff	andi	r3,r2,#0x00ff
  645  0000161c  70640066	sleui	r4,r3,#102
  646  00001620  14800034	bnez	r4,L6_LF2
  647  00001624  54000000	nop; delay slot nop
  648  00001628  08000004	j	L8_LF2
  649  0000162c  54000000	nop; delay slot nop
  650  00001630          	L8_LF2:
  651  00001630  304300ff	andi	r3,r2,#0x00ff
  652  00001634  6c640040	sgtui	r4,r3,#64
  653  00001638  10800020	beqz	r4,L5_LF2
  654  0000163c  54000000	nop; delay slot nop
  655  00001640  304300ff	andi	r3,r2,#0x00ff
  656  00001644  70640041	sleui	r4,r3,#65
  657  00001648  1480000c	bnez	r4,L6_LF2
  658  0000164c  54000000	nop; delay slot nop
  659  00001650  08000008	j	L5_LF2
  660  00001654  54000000	nop; delay slot nop
  661  00001658          	L6_LF2:
  662  00001658  20010001	addi	r1,r0,#1
  663  0000165c          	L5_LF2:
  664  0000165c  08000004	j	L4_LF2
  665  00001660  54000000	nop; delay slot nop
  666  00001664          	L4_LF2:
  667  00001664  8fa20000	lw	r2,0(r29)
  668  00001668  8fa30004	lw	r3,4(r29)
  669  0000166c  8fa40008	lw	r4,8(r29)
  670  00001670  8fdffff8	lw	r31,-8(r30)
  671  00001674  001ee820	add	r29,r0,r30
  672  00001678  8fdefffc	lw	r30,-4(r30)
  673  0000167c  4be00000	jr	r31
  674  00001680  54000000	nop
  675  00001684          	.endproc _isxdigit
  676  00001684          	.align 2
  677  00001684          	.proc _dstrcpy
  678  00001684          	.global _dstrcpy
  679  00001684          	_dstrcpy:
  680                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  681  00001684  afbefffc	sw	-4(r29),r30; push fp
  682  00001688  001df020	add	r30,r0,r29; fp = sp
  683  0000168c  afbffff8	sw	-8(r29),r31; push ret addr
  684  00001690  2fbd0018	subui	r29,r29,#24; alloc local storage
  685  00001694  afa20000	sw	0(r29),r2
  686  00001698  afa30004	sw	4(r29),r3
  687  0000169c  8fc10000	lw	r1,(r30)
  688  000016a0  afc1fff4	sw	-12(r30),r1
  689  000016a4          	L10_LF2:
  690  000016a4  8fc10000	lw	r1,(r30)
  691  000016a8  20220001	addi	r2,r1,#1
  692  000016ac  afc20000	sw	(r30),r2
  693  000016b0  8fc20004	lw	r2,4(r30)
  694  000016b4  20430001	addi	r3,r2,#1
  695  000016b8  afc30004	sw	4(r30),r3
  696  000016bc  80420000	lb	r2,(r2)
  697  000016c0  a0220000	sb	(r1),r2
  698  000016c4  a3c2fff3	sb	-13(r30),r2
  699  000016c8          	L12_LF2:
  700  000016c8  93c1fff3	lbu	r1,-13(r30)
  701  000016cc  64220000	snei	r2,r1,#0
  702  000016d0  1440000c	bnez	r2,L13_LF2
  703  000016d4  54000000	nop; delay slot nop
  704  000016d8  0800000c	j	L11_LF2
  705  000016dc  54000000	nop; delay slot nop
  706  000016e0          	L13_LF2:
  707  000016e0  0bffffc0	j	L10_LF2
  708  000016e4  54000000	nop; delay slot nop
  709  000016e8          	L11_LF2:
  710  000016e8  8fc1fff4	lw	r1,-12(r30)
  711  000016ec  08000004	j	L9_LF2
  712  000016f0  54000000	nop; delay slot nop
  713  000016f4          	L9_LF2:
  714  000016f4  8fa20000	lw	r2,0(r29)
  715  000016f8  8fa30004	lw	r3,4(r29)
  716  000016fc  8fdffff8	lw	r31,-8(r30)
  717  00001700  001ee820	add	r29,r0,r30
  718  00001704  8fdefffc	lw	r30,-4(r30)
  719  00001708  4be00000	jr	r31
  720  0000170c  54000000	nop
  721  00001710          	.endproc _dstrcpy
  722  00001710          	.align 2
  723  00001710          	.proc _dstrncpy
  724  00001710          	.global _dstrncpy
  725  00001710          	_dstrncpy:
  726                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  727  00001710  afbefffc	sw	-4(r29),r30; push fp
  728  00001714  001df020	add	r30,r0,r29; fp = sp
  729  00001718  afbffff8	sw	-8(r29),r31; push ret addr
  730  0000171c  2fbd0018	subui	r29,r29,#24; alloc local storage
  731  00001720  afa20000	sw	0(r29),r2
  732  00001724  afa30004	sw	4(r29),r3
  733  00001728  8fc10000	lw	r1,(r30)
  734  0000172c  afc1fff4	sw	-12(r30),r1
  735  00001730          	L15_LF2:
  736  00001730  8fc10008	lw	r1,8(r30)
  737  00001734  2022ffff	addi	r2,r1,#-1
  738  00001738  afc20008	sw	8(r30),r2
  739  0000173c  70210000	slei	r1,r1,#0
  740  00001740  1020000c	beqz	r1,L18_LF2
  741  00001744  54000000	nop; delay slot nop
  742  00001748  08000048	j	L16_LF2
  743  0000174c  54000000	nop; delay slot nop
  744  00001750          	L18_LF2:
  745  00001750  8fc10000	lw	r1,(r30)
  746  00001754  20220001	addi	r2,r1,#1
  747  00001758  afc20000	sw	(r30),r2
  748  0000175c  8fc20004	lw	r2,4(r30)
  749  00001760  20430001	addi	r3,r2,#1
  750  00001764  afc30004	sw	4(r30),r3
  751  00001768  80420000	lb	r2,(r2)
  752  0000176c  a0220000	sb	(r1),r2
  753  00001770  a3c2fff3	sb	-13(r30),r2
  754  00001774          	L17_LF2:
  755  00001774  93c1fff3	lbu	r1,-13(r30)
  756  00001778  64220000	snei	r2,r1,#0
  757  0000177c  1440000c	bnez	r2,L19_LF2
  758  00001780  54000000	nop; delay slot nop
  759  00001784  0800000c	j	L16_LF2
  760  00001788  54000000	nop; delay slot nop
  761  0000178c          	L19_LF2:
  762  0000178c  0bffffa0	j	L15_LF2
  763  00001790  54000000	nop; delay slot nop
  764  00001794          	L16_LF2:
  765  00001794  8fc1fff4	lw	r1,-12(r30)
  766  00001798  08000004	j	L14_LF2
  767  0000179c  54000000	nop; delay slot nop
  768  000017a0          	L14_LF2:
  769  000017a0  8fa20000	lw	r2,0(r29)
  770  000017a4  8fa30004	lw	r3,4(r29)
  771  000017a8  8fdffff8	lw	r31,-8(r30)
  772  000017ac  001ee820	add	r29,r0,r30
  773  000017b0  8fdefffc	lw	r30,-4(r30)
  774  000017b4  4be00000	jr	r31
  775  000017b8  54000000	nop
  776  000017bc          	.endproc _dstrncpy
  777  000017bc          	.align 2
  778  000017bc          	.proc _dstrcat
  779  000017bc          	.global _dstrcat
  780  000017bc          	_dstrcat:
  781                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  782  000017bc  afbefffc	sw	-4(r29),r30; push fp
  783  000017c0  001df020	add	r30,r0,r29; fp = sp
  784  000017c4  afbffff8	sw	-8(r29),r31; push ret addr
  785  000017c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  786  000017cc  afa20000	sw	0(r29),r2
  787  000017d0  8fc10000	lw	r1,(r30)
  788  000017d4  afc1fff4	sw	-12(r30),r1
  789  000017d8          	L21_LF2:
  790  000017d8  8fc10000	lw	r1,(r30)
  791  000017dc  90220000	lbu	r2,(r1)
  792  000017e0  64410000	snei	r1,r2,#0
  793  000017e4  1420000c	bnez	r1,L23_LF2
  794  000017e8  54000000	nop; delay slot nop
  795  000017ec  0800001c	j	L22_LF2
  796  000017f0  54000000	nop; delay slot nop
  797  000017f4          	L23_LF2:
  798  000017f4  8fc20000	lw	r2,(r30)
  799  000017f8  20410001	addi	r1,r2,#1
  800  000017fc  00011020	add	r2,r0,r1
  801  00001800  afc20000	sw	(r30),r2
  802  00001804  0bffffd0	j	L21_LF2
  803  00001808  54000000	nop; delay slot nop
  804  0000180c          	L22_LF2:
  805  0000180c  23bdfff8	addi	r29,r29,#-8
  806  00001810  001d0820	add	r1,r0,r29
  807  00001814  8fc20000	lw	r2,(r30)
  808  00001818  ac220000	sw	(r1),r2
  809  0000181c  8fc20004	lw	r2,4(r30)
  810  00001820  ac220004	sw	4(r1),r2
  811  00001824  0ffffe5c	jal	_dstrcpy
  812  00001828  54000000	nop; delay slot nop
  813  0000182c  23bd0008	addi	r29,r29,#8
  814  00001830  8fc1fff4	lw	r1,-12(r30)
  815  00001834  08000004	j	L20_LF2
  816  00001838  54000000	nop; delay slot nop
  817  0000183c          	L20_LF2:
  818  0000183c  8fa20000	lw	r2,0(r29)
  819  00001840  8fdffff8	lw	r31,-8(r30)
  820  00001844  001ee820	add	r29,r0,r30
  821  00001848  8fdefffc	lw	r30,-4(r30)
  822  0000184c  4be00000	jr	r31
  823  00001850  54000000	nop
  824  00001854          	.endproc _dstrcat
  825  00001854          	.align 2
  826  00001854          	.proc _dstrncmp
  827  00001854          	.global _dstrncmp
  828  00001854          	_dstrncmp:
  829                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  830  00001854  afbefffc	sw	-4(r29),r30; push fp
  831  00001858  001df020	add	r30,r0,r29; fp = sp
  832  0000185c  afbffff8	sw	-8(r29),r31; push ret addr
  833  00001860  2fbd0018	subui	r29,r29,#24; alloc local storage
  834  00001864  afa20000	sw	0(r29),r2
  835  00001868  afa30004	sw	4(r29),r3
  836  0000186c  54000000	nop
  837  00001870  20010000	addi	r1,r0,#0
  838  00001874  afc1fff4	sw	-12(r30),r1
  839  00001878          	L25_LF2:
  840  00001878  8fc1fff4	lw	r1,-12(r30)
  841  0000187c  8fc20008	lw	r2,8(r30)
  842  00001880  0022082a	slt	r1,r1,r2
  843  00001884  1420000c	bnez	r1,L28_LF2
  844  00001888  54000000	nop; delay slot nop
  845  0000188c  08000088	j	L26_LF2
  846  00001890  54000000	nop; delay slot nop
  847  00001894          	L28_LF2:
  848  00001894  8fc10004	lw	r1,4(r30)
  849  00001898  90220000	lbu	r2,(r1)
  850  0000189c  64410000	snei	r1,r2,#0
  851  000018a0  14200018	bnez	r1,L29_LF2
  852  000018a4  54000000	nop; delay slot nop
  853  000018a8  20010000	addi	r1,r0,#0
  854  000018ac  080000d8	j	L24_LF2
  855  000018b0  54000000	nop; delay slot nop
  856  000018b4  08000028	j	L30_LF2
  857  000018b8  54000000	nop; delay slot nop
  858  000018bc          	L29_LF2:
  859  000018bc  8fc10000	lw	r1,(r30)
  860  000018c0  8fc20004	lw	r2,4(r30)
  861  000018c4  90210000	lbu	r1,(r1)
  862  000018c8  90420000	lbu	r2,(r2)
  863  000018cc  00220829	sne	r1,r1,r2
  864  000018d0  1020000c	beqz	r1,L30_LF2
  865  000018d4  54000000	nop; delay slot nop
  866  000018d8  0800003c	j	L26_LF2
  867  000018dc  54000000	nop; delay slot nop
  868  000018e0          	L31_LF2:
  869  000018e0          	L30_LF2:
  870  000018e0  8fc20000	lw	r2,(r30)
  871  000018e4  20410001	addi	r1,r2,#1
  872  000018e8  00011020	add	r2,r0,r1
  873  000018ec  afc20000	sw	(r30),r2
  874  000018f0  8fc20004	lw	r2,4(r30)
  875  000018f4  20410001	addi	r1,r2,#1
  876  000018f8  00011020	add	r2,r0,r1
  877  000018fc  afc20004	sw	4(r30),r2
  878  00001900          	L27_LF2:
  879  00001900  8fc2fff4	lw	r2,-12(r30)
  880  00001904  20410001	addi	r1,r2,#1
  881  00001908  00011020	add	r2,r0,r1
  882  0000190c  afc2fff4	sw	-12(r30),r2
  883  00001910  0bffff64	j	L25_LF2
  884  00001914  54000000	nop; delay slot nop
  885  00001918          	L26_LF2:
  886  00001918  8fc1fff4	lw	r1,-12(r30)
  887  0000191c  8fc20008	lw	r2,8(r30)
  888  00001920  00220828	seq	r1,r1,r2
  889  00001924  10200018	beqz	r1,L32_LF2
  890  00001928  54000000	nop; delay slot nop
  891  0000192c  20010000	addi	r1,r0,#0
  892  00001930  08000054	j	L24_LF2
  893  00001934  54000000	nop; delay slot nop
  894  00001938  0800004c	j	L33_LF2
  895  0000193c  54000000	nop; delay slot nop
  896  00001940          	L32_LF2:
  897  00001940  8fc20000	lw	r2,(r30)
  898  00001944  90410000	lbu	r1,(r2)
  899  00001948  8fc20004	lw	r2,4(r30)
  900  0000194c  90430000	lbu	r3,(r2)
  901  00001950  00230822	sub	r1,r1,r3
  902  00001954  74220000	sgei	r2,r1,#0
  903  00001958  10400020	beqz	r2,L34_LF2
  904  0000195c  54000000	nop; delay slot nop
  905  00001960  8fc10000	lw	r1,(r30)
  906  00001964  8fc20004	lw	r2,4(r30)
  907  00001968  90210000	lbu	r1,(r1)
  908  0000196c  90420000	lbu	r2,(r2)
  909  00001970  00220829	sne	r1,r1,r2
  910  00001974  08000008	j	L35_LF2
  911  00001978  54000000	nop; delay slot nop
  912  0000197c          	L34_LF2:
  913  0000197c  2001ffff	addi	r1,r0,#-1
  914  00001980          	L35_LF2:
  915  00001980  08000004	j	L24_LF2
  916  00001984  54000000	nop; delay slot nop
  917  00001988          	L33_LF2:
  918  00001988          	L24_LF2:
  919  00001988  8fa20000	lw	r2,0(r29)
  920  0000198c  8fa30004	lw	r3,4(r29)
  921  00001990  8fdffff8	lw	r31,-8(r30)
  922  00001994  001ee820	add	r29,r0,r30
  923  00001998  8fdefffc	lw	r30,-4(r30)
  924  0000199c  4be00000	jr	r31
  925  000019a0  54000000	nop
  926  000019a4          	.endproc _dstrncmp
  927  000019a4          	.align 2
  928  000019a4          	.proc _dstrlen
  929  000019a4          	.global _dstrlen
  930  000019a4          	_dstrlen:
  931                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  932  000019a4  afbefffc	sw	-4(r29),r30; push fp
  933  000019a8  001df020	add	r30,r0,r29; fp = sp
  934  000019ac  afbffff8	sw	-8(r29),r31; push ret addr
  935  000019b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  936  000019b4  afa20000	sw	0(r29),r2
  937  000019b8  20010000	addi	r1,r0,#0
  938  000019bc  afc1fff4	sw	-12(r30),r1
  939  000019c0          	L37_LF2:
  940  000019c0  8fc10000	lw	r1,(r30)
  941  000019c4  20220001	addi	r2,r1,#1
  942  000019c8  afc20000	sw	(r30),r2
  943  000019cc  90210000	lbu	r1,(r1)
  944  000019d0  64220000	snei	r2,r1,#0
  945  000019d4  1440000c	bnez	r2,L39_LF2
  946  000019d8  54000000	nop; delay slot nop
  947  000019dc  0800001c	j	L38_LF2
  948  000019e0  54000000	nop; delay slot nop
  949  000019e4          	L39_LF2:
  950  000019e4  8fc2fff4	lw	r2,-12(r30)
  951  000019e8  20410001	addi	r1,r2,#1
  952  000019ec  00011020	add	r2,r0,r1
  953  000019f0  afc2fff4	sw	-12(r30),r2
  954  000019f4  0bffffc8	j	L37_LF2
  955  000019f8  54000000	nop; delay slot nop
  956  000019fc          	L38_LF2:
  957  000019fc  8fc1fff4	lw	r1,-12(r30)
  958  00001a00  08000004	j	L36_LF2
  959  00001a04  54000000	nop; delay slot nop
  960  00001a08          	L36_LF2:
  961  00001a08  8fa20000	lw	r2,0(r29)
  962  00001a0c  8fdffff8	lw	r31,-8(r30)
  963  00001a10  001ee820	add	r29,r0,r30
  964  00001a14  8fdefffc	lw	r30,-4(r30)
  965  00001a18  4be00000	jr	r31
  966  00001a1c  54000000	nop
  967  00001a20          	.endproc _dstrlen
  968  00001a20          	.align 2
  969  00001a20          	.proc _dstrstr
  970  00001a20          	.global _dstrstr
  971  00001a20          	_dstrstr:
  972                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  973  00001a20  afbefffc	sw	-4(r29),r30; push fp
  974  00001a24  001df020	add	r30,r0,r29; fp = sp
  975  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
  976  00001a2c  2fbd0018	subui	r29,r29,#24; alloc local storage
  977  00001a30  afa20000	sw	0(r29),r2
  978  00001a34  23bdfff8	addi	r29,r29,#-8
  979  00001a38  001d0820	add	r1,r0,r29
  980  00001a3c  8fc20004	lw	r2,4(r30)
  981  00001a40  ac220000	sw	(r1),r2
  982  00001a44  0fffff5c	jal	_dstrlen
  983  00001a48  54000000	nop; delay slot nop
  984  00001a4c  23bd0008	addi	r29,r29,#8
  985  00001a50  afc1fff4	sw	-12(r30),r1
  986  00001a54          	L41_LF2:
  987  00001a54  8fc10000	lw	r1,(r30)
  988  00001a58  90220000	lbu	r2,(r1)
  989  00001a5c  64410000	snei	r1,r2,#0
  990  00001a60  1420000c	bnez	r1,L43_LF2
  991  00001a64  54000000	nop; delay slot nop
  992  00001a68  08000060	j	L42_LF2
  993  00001a6c  54000000	nop; delay slot nop
  994  00001a70          	L43_LF2:
  995  00001a70  23bdfff0	addi	r29,r29,#-16
  996  00001a74  001d0820	add	r1,r0,r29
  997  00001a78  8fc20000	lw	r2,(r30)
  998  00001a7c  ac220000	sw	(r1),r2
  999  00001a80  8fc20004	lw	r2,4(r30)
 1000  00001a84  ac220004	sw	4(r1),r2
 1001  00001a88  8fc2fff4	lw	r2,-12(r30)
 1002  00001a8c  ac220008	sw	8(r1),r2
 1003  00001a90  0ffffdc0	jal	_dstrncmp
 1004  00001a94  54000000	nop; delay slot nop
 1005  00001a98  23bd0010	addi	r29,r29,#16
 1006  00001a9c  64220000	snei	r2,r1,#0
 1007  00001aa0  14400010	bnez	r2,L44_LF2
 1008  00001aa4  54000000	nop; delay slot nop
 1009  00001aa8  8fc10000	lw	r1,(r30)
 1010  00001aac  08000028	j	L40_LF2
 1011  00001ab0  54000000	nop; delay slot nop
 1012  00001ab4          	L44_LF2:
 1013  00001ab4  8fc20000	lw	r2,(r30)
 1014  00001ab8  20410001	addi	r1,r2,#1
 1015  00001abc  00011020	add	r2,r0,r1
 1016  00001ac0  afc20000	sw	(r30),r2
 1017  00001ac4  0bffff8c	j	L41_LF2
 1018  00001ac8  54000000	nop; delay slot nop
 1019  00001acc          	L42_LF2:
 1020  00001acc  20010000	addi	r1,r0,#0
 1021  00001ad0  08000004	j	L40_LF2
 1022  00001ad4  54000000	nop; delay slot nop
 1023  00001ad8          	L40_LF2:
 1024  00001ad8  8fa20000	lw	r2,0(r29)
 1025  00001adc  8fdffff8	lw	r31,-8(r30)
 1026  00001ae0  001ee820	add	r29,r0,r30
 1027  00001ae4  8fdefffc	lw	r30,-4(r30)
 1028  00001ae8  4be00000	jr	r31
 1029  00001aec  54000000	nop
 1030  00001af0          	.endproc _dstrstr
 1031  00001af0          	.align 2
 1032  00001af0          	.proc _dmindex
 1033  00001af0          	.global _dmindex
 1034  00001af0          	_dmindex:
 1035                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1036  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1037  00001af4  001df020	add	r30,r0,r29; fp = sp
 1038  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1039  00001afc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1040  00001b00  afa20000	sw	0(r29),r2
 1041  00001b04  54000000	nop
 1042  00001b08          	L46_LF2:
 1043  00001b08  8fc10000	lw	r1,(r30)
 1044  00001b0c  90220000	lbu	r2,(r1)
 1045  00001b10  64410000	snei	r1,r2,#0
 1046  00001b14  1420000c	bnez	r1,L48_LF2
 1047  00001b18  54000000	nop; delay slot nop
 1048  00001b1c  08000070	j	L47_LF2
 1049  00001b20  54000000	nop; delay slot nop
 1050  00001b24          	L48_LF2:
 1051  00001b24  8fc10004	lw	r1,4(r30)
 1052  00001b28  afc1fff4	sw	-12(r30),r1
 1053  00001b2c          	L49_LF2:
 1054  00001b2c  8fc1fff4	lw	r1,-12(r30)
 1055  00001b30  90220000	lbu	r2,(r1)
 1056  00001b34  64410000	snei	r1,r2,#0
 1057  00001b38  1420000c	bnez	r1,L52_LF2
 1058  00001b3c  54000000	nop; delay slot nop
 1059  00001b40  08000044	j	L50_LF2
 1060  00001b44  54000000	nop; delay slot nop
 1061  00001b48          	L52_LF2:
 1062  00001b48  8fc10000	lw	r1,(r30)
 1063  00001b4c  8fc2fff4	lw	r2,-12(r30)
 1064  00001b50  90210000	lbu	r1,(r1)
 1065  00001b54  90420000	lbu	r2,(r2)
 1066  00001b58  00220828	seq	r1,r1,r2
 1067  00001b5c  10200010	beqz	r1,L51_LF2
 1068  00001b60  54000000	nop; delay slot nop
 1069  00001b64  8fc10000	lw	r1,(r30)
 1070  00001b68  08000030	j	L45_LF2
 1071  00001b6c  54000000	nop; delay slot nop
 1072  00001b70          	L53_LF2:
 1073  00001b70          	L51_LF2:
 1074  00001b70  8fc2fff4	lw	r2,-12(r30)
 1075  00001b74  20410001	addi	r1,r2,#1
 1076  00001b78  00011020	add	r2,r0,r1
 1077  00001b7c  afc2fff4	sw	-12(r30),r2
 1078  00001b80  0bffffa8	j	L49_LF2
 1079  00001b84  54000000	nop; delay slot nop
 1080  00001b88          	L50_LF2:
 1081  00001b88  0bffff7c	j	L46_LF2
 1082  00001b8c  54000000	nop; delay slot nop
 1083  00001b90          	L47_LF2:
 1084  00001b90  20010000	addi	r1,r0,#0
 1085  00001b94  08000004	j	L45_LF2
 1086  00001b98  54000000	nop; delay slot nop
 1087  00001b9c          	L45_LF2:
 1088  00001b9c  8fa20000	lw	r2,0(r29)
 1089  00001ba0  8fdffff8	lw	r31,-8(r30)
 1090  00001ba4  001ee820	add	r29,r0,r30
 1091  00001ba8  8fdefffc	lw	r30,-4(r30)
 1092  00001bac  4be00000	jr	r31
 1093  00001bb0  54000000	nop
 1094  00001bb4          	.endproc _dmindex
 1095  00001bb4          	.align 2
 1096  00001bb4          	.proc _dindex
 1097  00001bb4          	.global _dindex
 1098  00001bb4          	_dindex:
 1099                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1100  00001bb4  afbefffc	sw	-4(r29),r30; push fp
 1101  00001bb8  001df020	add	r30,r0,r29; fp = sp
 1102  00001bbc  afbffff8	sw	-8(r29),r31; push ret addr
 1103  00001bc0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1104  00001bc4  afa20000	sw	0(r29),r2
 1105  00001bc8  54000000	nop
 1106  00001bcc          	L55_LF2:
 1107  00001bcc  8fc10000	lw	r1,(r30)
 1108  00001bd0  90220000	lbu	r2,(r1)
 1109  00001bd4  64410000	snei	r1,r2,#0
 1110  00001bd8  1420000c	bnez	r1,L57_LF2
 1111  00001bdc  54000000	nop; delay slot nop
 1112  00001be0  08000040	j	L56_LF2
 1113  00001be4  54000000	nop; delay slot nop
 1114  00001be8          	L57_LF2:
 1115  00001be8  8fc10000	lw	r1,(r30)
 1116  00001bec  90220000	lbu	r2,(r1)
 1117  00001bf0  8fc10004	lw	r1,4(r30)
 1118  00001bf4  00411028	seq	r2,r2,r1
 1119  00001bf8  10400010	beqz	r2,L58_LF2
 1120  00001bfc  54000000	nop; delay slot nop
 1121  00001c00  8fc10000	lw	r1,(r30)
 1122  00001c04  08000028	j	L54_LF2
 1123  00001c08  54000000	nop; delay slot nop
 1124  00001c0c          	L58_LF2:
 1125  00001c0c  8fc20000	lw	r2,(r30)
 1126  00001c10  20410001	addi	r1,r2,#1
 1127  00001c14  00011020	add	r2,r0,r1
 1128  00001c18  afc20000	sw	(r30),r2
 1129  00001c1c  0bffffac	j	L55_LF2
 1130  00001c20  54000000	nop; delay slot nop
 1131  00001c24          	L56_LF2:
 1132  00001c24  20010000	addi	r1,r0,#0
 1133  00001c28  08000004	j	L54_LF2
 1134  00001c2c  54000000	nop; delay slot nop
 1135  00001c30          	L54_LF2:
 1136  00001c30  8fa20000	lw	r2,0(r29)
 1137  00001c34  8fdffff8	lw	r31,-8(r30)
 1138  00001c38  001ee820	add	r29,r0,r30
 1139  00001c3c  8fdefffc	lw	r30,-4(r30)
 1140  00001c40  4be00000	jr	r31
 1141  00001c44  54000000	nop
 1142  00001c48          	.endproc _dindex
 1143  00001c48          	.align 2
 1144  00001c48          	.proc _ditoa
 1145  00001c48          	.global _ditoa
 1146  00001c48          	_ditoa:
 1147                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1148  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1149  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1150  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1151  00001c54  2fbd0018	subui	r29,r29,#24; alloc local storage
 1152  00001c58  afa20000	sw	0(r29),r2
 1153  00001c5c  afa30004	sw	4(r29),r3
 1154  00001c60  8fc10000	lw	r1,(r30)
 1155  00001c64  68220000	slti	r2,r1,#0
 1156  00001c68  1040002c	beqz	r2,L60_LF2
 1157  00001c6c  54000000	nop; delay slot nop
 1158  00001c70  8fc10004	lw	r1,4(r30)
 1159  00001c74  20220001	addi	r2,r1,#1
 1160  00001c78  afc20004	sw	4(r30),r2
 1161  00001c7c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1162  00001c80  a0220000	sb	(r1),r2
 1163  00001c84  8fc10000	lw	r1,(r30)
 1164  00001c88  00011022	sub	r2,r0,r1
 1165  00001c8c  afc20000	sw	(r30),r2
 1166  00001c90  08000118	j	L61_LF2
 1167  00001c94  54000000	nop; delay slot nop
 1168  00001c98          	L60_LF2:
 1169  00001c98  8fc10000	lw	r1,(r30)
 1170  00001c9c  64220000	snei	r2,r1,#0
 1171  00001ca0  14400020	bnez	r2,L62_LF2
 1172  00001ca4  54000000	nop; delay slot nop
 1173  00001ca8  8fc10004	lw	r1,4(r30)
 1174  00001cac  20220001	addi	r2,r1,#1
 1175  00001cb0  afc20004	sw	4(r30),r2
 1176  00001cb4  20020030	addi	r2,r0,(#0x30)&0xff
 1177  00001cb8  a0220000	sb	(r1),r2
 1178  00001cbc  080000ec	j	L61_LF2
 1179  00001cc0  54000000	nop; delay slot nop
 1180  00001cc4          	L62_LF2:
 1181  00001cc4  20010001	addi	r1,r0,#1
 1182  00001cc8  afc1fff4	sw	-12(r30),r1
 1183  00001ccc          	L64_LF2:
 1184  00001ccc  8fc1fff4	lw	r1,-12(r30)
 1185  00001cd0  8fc20000	lw	r2,(r30)
 1186  00001cd4  0022082c	sle	r1,r1,r2
 1187  00001cd8  1420000c	bnez	r1,L66_LF2
 1188  00001cdc  54000000	nop; delay slot nop
 1189  00001ce0  08000024	j	L65_LF2
 1190  00001ce4  54000000	nop; delay slot nop
 1191  00001ce8          	L67_LF2:
 1192  00001ce8          	L66_LF2:
 1193  00001ce8  8fc1fff4	lw	r1,-12(r30)
 1194  00001cec  00011820	add	r3,r0,r1
 1195  00001cf0  50620002	slli	r2,r3,#0x2
 1196  00001cf4  00411020	add	r2,r2,r1
 1197  00001cf8  50410001	slli	r1,r2,#0x1
 1198  00001cfc  afc1fff4	sw	-12(r30),r1
 1199  00001d00  0bffffc8	j	L64_LF2
 1200  00001d04  54000000	nop; delay slot nop
 1201  00001d08          	L65_LF2:
 1202  00001d08  54000000	nop
 1203  00001d0c          	L68_LF2:
 1204  00001d0c  8fc1fff4	lw	r1,-12(r30)
 1205  00001d10  2002000a	addi	r2,r0,#10
 1206  00001d14  00200035	movi2fp	f0,r1
 1207  00001d18  00400835	movi2fp	f1,r2
 1208  00001d1c  0401000f	div	f0,f0,f1
 1209  00001d20  00000834	movfp2i	r1,f0
 1210  00001d24  afc1fff4	sw	-12(r30),r1
 1211  00001d28  8fc10004	lw	r1,4(r30)
 1212  00001d2c  20220001	addi	r2,r1,#1
 1213  00001d30  afc20004	sw	4(r30),r2
 1214  00001d34  8fc20000	lw	r2,(r30)
 1215  00001d38  8fc3fff4	lw	r3,-12(r30)
 1216  00001d3c  00400035	movi2fp	f0,r2
 1217  00001d40  00600835	movi2fp	f1,r3
 1218  00001d44  0401000f	div	f0,f0,f1
 1219  00001d48  00001034	movfp2i	r2,f0
 1220  00001d4c  00021820	add	r3,r0,r2
 1221  00001d50  20620030	addi	r2,r3,#48
 1222  00001d54  a0220000	sb	(r1),r2
 1223  00001d58  8fc10000	lw	r1,(r30)
 1224  00001d5c  8fc3fff4	lw	r3,-12(r30)
 1225  00001d60  00200035	movi2fp	f0,r1
 1226  00001d64  00600835	movi2fp	f1,r3
 1227  00001d68  0401000f	div	f0,f0,f1
 1228  00001d6c  00001034	movfp2i	r2,f0
 1229  00001d70  8fc3fff4	lw	r3,-12(r30)
 1230  00001d74  00400035	movi2fp	f0,r2
 1231  00001d78  00600835	movi2fp	f1,r3
 1232  00001d7c  0401000e	mult	f0,f0,f1
 1233  00001d80  00001034	movfp2i	r2,f0
 1234  00001d84  00220822	sub	r1,r1,r2
 1235  00001d88  afc10000	sw	(r30),r1
 1236  00001d8c          	L70_LF2:
 1237  00001d8c  8fc1fff4	lw	r1,-12(r30)
 1238  00001d90  6c220001	sgti	r2,r1,#1
 1239  00001d94  1440000c	bnez	r2,L71_LF2
 1240  00001d98  54000000	nop; delay slot nop
 1241  00001d9c  0800000c	j	L61_LF2
 1242  00001da0  54000000	nop; delay slot nop
 1243  00001da4          	L71_LF2:
 1244  00001da4  0bffff64	j	L68_LF2
 1245  00001da8  54000000	nop; delay slot nop
 1246  00001dac          	L69_LF2:
 1247  00001dac          	L63_LF2:
 1248  00001dac          	L61_LF2:
 1249  00001dac  8fc10004	lw	r1,4(r30)
 1250  00001db0  20020000	addi	r2,r0,(#0x0)&0xff
 1251  00001db4  a0220000	sb	(r1),r2
 1252  00001db8          	L59_LF2:
 1253  00001db8  8fa20000	lw	r2,0(r29)
 1254  00001dbc  8fa30004	lw	r3,4(r29)
 1255  00001dc0  8fdffff8	lw	r31,-8(r30)
 1256  00001dc4  001ee820	add	r29,r0,r30
 1257  00001dc8  8fdefffc	lw	r30,-4(r30)
 1258  00001dcc  4be00000	jr	r31
 1259  00001dd0  54000000	nop
 1260  00001dd4          	.endproc _ditoa
 1261  00001dd4          	.align 2
 1262  00001dd4          	.proc _dstrtol
 1263  00001dd4          	.global _dstrtol
 1264  00001dd4          	_dstrtol:
 1265                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1266  00001dd4  afbefffc	sw	-4(r29),r30; push fp
 1267  00001dd8  001df020	add	r30,r0,r29; fp = sp
 1268  00001ddc  afbffff8	sw	-8(r29),r31; push ret addr
 1269  00001de0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1270  00001de4  afa20000	sw	0(r29),r2
 1271  00001de8  20010000	addi	r1,r0,#0
 1272  00001dec  afc1fff4	sw	-12(r30),r1
 1273  00001df0          	L73_LF2:
 1274  00001df0  8fc10000	lw	r1,(r30)
 1275  00001df4  90220000	lbu	r2,(r1)
 1276  00001df8  60410020	seqi	r1,r2,#32
 1277  00001dfc  14200034	bnez	r1,L75_LF2
 1278  00001e00  54000000	nop; delay slot nop
 1279  00001e04  8fc10000	lw	r1,(r30)
 1280  00001e08  90220000	lbu	r2,(r1)
 1281  00001e0c  60410009	seqi	r1,r2,#9
 1282  00001e10  14200020	bnez	r1,L75_LF2
 1283  00001e14  54000000	nop; delay slot nop
 1284  00001e18  8fc10000	lw	r1,(r30)
 1285  00001e1c  90220000	lbu	r2,(r1)
 1286  00001e20  6041000a	seqi	r1,r2,#10
 1287  00001e24  1420000c	bnez	r1,L75_LF2
 1288  00001e28  54000000	nop; delay slot nop
 1289  00001e2c  0800001c	j	L74_LF2
 1290  00001e30  54000000	nop; delay slot nop
 1291  00001e34          	L75_LF2:
 1292  00001e34  8fc20000	lw	r2,(r30)
 1293  00001e38  20410001	addi	r1,r2,#1
 1294  00001e3c  00011020	add	r2,r0,r1
 1295  00001e40  afc20000	sw	(r30),r2
 1296  00001e44  0bffffa8	j	L73_LF2
 1297  00001e48  54000000	nop; delay slot nop
 1298  00001e4c          	L74_LF2:
 1299  00001e4c  8fc10004	lw	r1,4(r30)
 1300  00001e50  64220000	snei	r2,r1,#0
 1301  00001e54  10400010	beqz	r2,L76_LF2
 1302  00001e58  54000000	nop; delay slot nop
 1303  00001e5c  8fc10004	lw	r1,4(r30)
 1304  00001e60  8fc20000	lw	r2,(r30)
 1305  00001e64  ac220000	sw	(r1),r2
 1306  00001e68          	L76_LF2:
 1307  00001e68  8fc10000	lw	r1,(r30)
 1308  00001e6c  90220000	lbu	r2,(r1)
 1309  00001e70  64410000	snei	r1,r2,#0
 1310  00001e74  14200010	bnez	r1,L77_LF2
 1311  00001e78  54000000	nop; delay slot nop
 1312  00001e7c  8fc1fff4	lw	r1,-12(r30)
 1313  00001e80  08000294	j	L72_LF2
 1314  00001e84  54000000	nop; delay slot nop
 1315  00001e88          	L77_LF2:
 1316  00001e88  8fc10000	lw	r1,(r30)
 1317  00001e8c  90220000	lbu	r2,(r1)
 1318  00001e90  6041002d	seqi	r1,r2,#45
 1319  00001e94  10200024	beqz	r1,L78_LF2
 1320  00001e98  54000000	nop; delay slot nop
 1321  00001e9c  2001ffff	addi	r1,r0,#-1
 1322  00001ea0  afc1ffec	sw	-20(r30),r1
 1323  00001ea4  8fc20000	lw	r2,(r30)
 1324  00001ea8  20410001	addi	r1,r2,#1
 1325  00001eac  00011020	add	r2,r0,r1
 1326  00001eb0  afc20000	sw	(r30),r2
 1327  00001eb4  0800000c	j	L79_LF2
 1328  00001eb8  54000000	nop; delay slot nop
 1329  00001ebc          	L78_LF2:
 1330  00001ebc  20010001	addi	r1,r0,#1
 1331  00001ec0  afc1ffec	sw	-20(r30),r1
 1332  00001ec4          	L79_LF2:
 1333  00001ec4  8fc10008	lw	r1,8(r30)
 1334  00001ec8  64220000	snei	r2,r1,#0
 1335  00001ecc  14400090	bnez	r2,L80_LF2
 1336  00001ed0  54000000	nop; delay slot nop
 1337  00001ed4  8fc10000	lw	r1,(r30)
 1338  00001ed8  90220000	lbu	r2,(r1)
 1339  00001edc  60410030	seqi	r1,r2,#48
 1340  00001ee0  10200074	beqz	r1,L81_LF2
 1341  00001ee4  54000000	nop; delay slot nop
 1342  00001ee8  8fc20000	lw	r2,(r30)
 1343  00001eec  20410001	addi	r1,r2,#1
 1344  00001ef0  00011020	add	r2,r0,r1
 1345  00001ef4  afc20000	sw	(r30),r2
 1346  00001ef8  8fc10000	lw	r1,(r30)
 1347  00001efc  90220000	lbu	r2,(r1)
 1348  00001f00  60410078	seqi	r1,r2,#120
 1349  00001f04  14200020	bnez	r1,L83_LF2
 1350  00001f08  54000000	nop; delay slot nop
 1351  00001f0c  8fc10000	lw	r1,(r30)
 1352  00001f10  90220000	lbu	r2,(r1)
 1353  00001f14  60410058	seqi	r1,r2,#88
 1354  00001f18  1420000c	bnez	r1,L83_LF2
 1355  00001f1c  54000000	nop; delay slot nop
 1356  00001f20  08000024	j	L82_LF2
 1357  00001f24  54000000	nop; delay slot nop
 1358  00001f28          	L83_LF2:
 1359  00001f28  20010010	addi	r1,r0,#16
 1360  00001f2c  afc10008	sw	8(r30),r1
 1361  00001f30  8fc20000	lw	r2,(r30)
 1362  00001f34  20410001	addi	r1,r2,#1
 1363  00001f38  00011020	add	r2,r0,r1
 1364  00001f3c  afc20000	sw	(r30),r2
 1365  00001f40  0800000c	j	L84_LF2
 1366  00001f44  54000000	nop; delay slot nop
 1367  00001f48          	L82_LF2:
 1368  00001f48  20010008	addi	r1,r0,#8
 1369  00001f4c  afc10008	sw	8(r30),r1
 1370  00001f50          	L84_LF2:
 1371  00001f50  0800000c	j	L80_LF2
 1372  00001f54  54000000	nop; delay slot nop
 1373  00001f58          	L81_LF2:
 1374  00001f58  2001000a	addi	r1,r0,#10
 1375  00001f5c  afc10008	sw	8(r30),r1
 1376  00001f60          	L85_LF2:
 1377  00001f60          	L80_LF2:
 1378  00001f60  8fc10008	lw	r1,8(r30)
 1379  00001f64  70220000	slei	r2,r1,#0
 1380  00001f68  1440001c	bnez	r2,L87_LF2
 1381  00001f6c  54000000	nop; delay slot nop
 1382  00001f70  8fc10008	lw	r1,8(r30)
 1383  00001f74  6c220010	sgti	r2,r1,#16
 1384  00001f78  1440000c	bnez	r2,L87_LF2
 1385  00001f7c  54000000	nop; delay slot nop
 1386  00001f80  08000010	j	L86_LF2
 1387  00001f84  54000000	nop; delay slot nop
 1388  00001f88          	L87_LF2:
 1389  00001f88  8fc1fff4	lw	r1,-12(r30)
 1390  00001f8c  08000188	j	L72_LF2
 1391  00001f90  54000000	nop; delay slot nop
 1392  00001f94          	L86_LF2:
 1393  00001f94  54000000	nop
 1394  00001f98          	L88_LF2:
 1395  00001f98  8fc10000	lw	r1,(r30)
 1396  00001f9c  90220000	lbu	r2,(r1)
 1397  00001fa0  6c41002f	sgtui	r1,r2,#47
 1398  00001fa4  10200030	beqz	r1,L91_LF2
 1399  00001fa8  54000000	nop; delay slot nop
 1400  00001fac  8fc10000	lw	r1,(r30)
 1401  00001fb0  90220000	lbu	r2,(r1)
 1402  00001fb4  70410039	sleui	r1,r2,#57
 1403  00001fb8  1020001c	beqz	r1,L91_LF2
 1404  00001fbc  54000000	nop; delay slot nop
 1405  00001fc0  8fc10000	lw	r1,(r30)
 1406  00001fc4  90220000	lbu	r2,(r1)
 1407  00001fc8  2041ffd0	addi	r1,r2,#-48
 1408  00001fcc  afc1fff0	sw	-16(r30),r1
 1409  00001fd0  0800008c	j	L92_LF2
 1410  00001fd4  54000000	nop; delay slot nop
 1411  00001fd8          	L91_LF2:
 1412  00001fd8  8fc10000	lw	r1,(r30)
 1413  00001fdc  90220000	lbu	r2,(r1)
 1414  00001fe0  6c410060	sgtui	r1,r2,#96
 1415  00001fe4  10200030	beqz	r1,L93_LF2
 1416  00001fe8  54000000	nop; delay slot nop
 1417  00001fec  8fc10000	lw	r1,(r30)
 1418  00001ff0  90220000	lbu	r2,(r1)
 1419  00001ff4  7041007a	sleui	r1,r2,#122
 1420  00001ff8  1020001c	beqz	r1,L93_LF2
 1421  00001ffc  54000000	nop; delay slot nop
 1422  00002000  8fc10000	lw	r1,(r30)
 1423  00002004  90220000	lbu	r2,(r1)
 1424  00002008  2041ffa9	addi	r1,r2,#-87
 1425  0000200c  afc1fff0	sw	-16(r30),r1
 1426  00002010  0800004c	j	L92_LF2
 1427  00002014  54000000	nop; delay slot nop
 1428  00002018          	L93_LF2:
 1429  00002018  8fc10000	lw	r1,(r30)
 1430  0000201c  90220000	lbu	r2,(r1)
 1431  00002020  6c410040	sgtui	r1,r2,#64
 1432  00002024  10200030	beqz	r1,L95_LF2
 1433  00002028  54000000	nop; delay slot nop
 1434  0000202c  8fc10000	lw	r1,(r30)
 1435  00002030  90220000	lbu	r2,(r1)
 1436  00002034  7041005a	sleui	r1,r2,#90
 1437  00002038  1020001c	beqz	r1,L95_LF2
 1438  0000203c  54000000	nop; delay slot nop
 1439  00002040  8fc10000	lw	r1,(r30)
 1440  00002044  90220000	lbu	r2,(r1)
 1441  00002048  2041ffc9	addi	r1,r2,#-55
 1442  0000204c  afc1fff0	sw	-16(r30),r1
 1443  00002050  0800000c	j	L92_LF2
 1444  00002054  54000000	nop; delay slot nop
 1445  00002058          	L95_LF2:
 1446  00002058  200103e8	addi	r1,r0,#1000
 1447  0000205c  afc1fff0	sw	-16(r30),r1
 1448  00002060          	L96_LF2:
 1449  00002060          	L94_LF2:
 1450  00002060          	L92_LF2:
 1451  00002060  8fc1fff0	lw	r1,-16(r30)
 1452  00002064  8fc20008	lw	r2,8(r30)
 1453  00002068  0022082a	slt	r1,r1,r2
 1454  0000206c  10200040	beqz	r1,L90_LF2
 1455  00002070  54000000	nop; delay slot nop
 1456  00002074  8fc1fff4	lw	r1,-12(r30)
 1457  00002078  8fc20008	lw	r2,8(r30)
 1458  0000207c  00200035	movi2fp	f0,r1
 1459  00002080  00400835	movi2fp	f1,r2
 1460  00002084  0401000e	mult	f0,f0,f1
 1461  00002088  00000834	movfp2i	r1,f0
 1462  0000208c  afc1fff4	sw	-12(r30),r1
 1463  00002090  8fc1fff4	lw	r1,-12(r30)
 1464  00002094  8fc2fff0	lw	r2,-16(r30)
 1465  00002098  00220820	add	r1,r1,r2
 1466  0000209c  afc1fff4	sw	-12(r30),r1
 1467  000020a0  8fc20000	lw	r2,(r30)
 1468  000020a4  20410001	addi	r1,r2,#1
 1469  000020a8  00011020	add	r2,r0,r1
 1470  000020ac  afc20000	sw	(r30),r2
 1471  000020b0          	L97_LF2:
 1472  000020b0          	L90_LF2:
 1473  000020b0  8fc1fff0	lw	r1,-16(r30)
 1474  000020b4  8fc20008	lw	r2,8(r30)
 1475  000020b8  0022082a	slt	r1,r1,r2
 1476  000020bc  1420000c	bnez	r1,L98_LF2
 1477  000020c0  54000000	nop; delay slot nop
 1478  000020c4  0800000c	j	L89_LF2
 1479  000020c8  54000000	nop; delay slot nop
 1480  000020cc          	L98_LF2:
 1481  000020cc  0bfffec8	j	L88_LF2
 1482  000020d0  54000000	nop; delay slot nop
 1483  000020d4          	L89_LF2:
 1484  000020d4  8fc10004	lw	r1,4(r30)
 1485  000020d8  64220000	snei	r2,r1,#0
 1486  000020dc  10400010	beqz	r2,L99_LF2
 1487  000020e0  54000000	nop; delay slot nop
 1488  000020e4  8fc10004	lw	r1,4(r30)
 1489  000020e8  8fc20000	lw	r2,(r30)
 1490  000020ec  ac220000	sw	(r1),r2
 1491  000020f0          	L99_LF2:
 1492  000020f0  8fc1fff4	lw	r1,-12(r30)
 1493  000020f4  8fc2ffec	lw	r2,-20(r30)
 1494  000020f8  00200035	movi2fp	f0,r1
 1495  000020fc  00400835	movi2fp	f1,r2
 1496  00002100  0401000e	mult	f0,f0,f1
 1497  00002104  00000834	movfp2i	r1,f0
 1498  00002108  afc1fff4	sw	-12(r30),r1
 1499  0000210c  8fc1fff4	lw	r1,-12(r30)
 1500  00002110  08000004	j	L72_LF2
 1501  00002114  54000000	nop; delay slot nop
 1502  00002118          	L72_LF2:
 1503  00002118  8fa20000	lw	r2,0(r29)
 1504  0000211c  8fdffff8	lw	r31,-8(r30)
 1505  00002120  001ee820	add	r29,r0,r30
 1506  00002124  8fdefffc	lw	r30,-4(r30)
 1507  00002128  4be00000	jr	r31
 1508  0000212c  54000000	nop
 1509  00002130          	.endproc _dstrtol
 1510  00002130          	.align 2
 1511  00002130          	.proc _bcopy
 1512  00002130          	.global _bcopy
 1513  00002130          	_bcopy:
 1514                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1515  00002130  afbefffc	sw	-4(r29),r30; push fp
 1516  00002134  001df020	add	r30,r0,r29; fp = sp
 1517  00002138  afbffff8	sw	-8(r29),r31; push ret addr
 1518  0000213c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1519  00002140  afa20000	sw	0(r29),r2
 1520  00002144  afa30004	sw	4(r29),r3
 1521  00002148  54000000	nop
 1522  0000214c          	L101_LF2:
 1523  0000214c  8fc10008	lw	r1,8(r30)
 1524  00002150  2022ffff	addi	r2,r1,#-1
 1525  00002154  afc20008	sw	8(r30),r2
 1526  00002158  6c210000	sgti	r1,r1,#0
 1527  0000215c  1420000c	bnez	r1,L103_LF2
 1528  00002160  54000000	nop; delay slot nop
 1529  00002164  0800002c	j	L102_LF2
 1530  00002168  54000000	nop; delay slot nop
 1531  0000216c          	L103_LF2:
 1532  0000216c  8fc10004	lw	r1,4(r30)
 1533  00002170  20220001	addi	r2,r1,#1
 1534  00002174  afc20004	sw	4(r30),r2
 1535  00002178  8fc20000	lw	r2,(r30)
 1536  0000217c  20430001	addi	r3,r2,#1
 1537  00002180  afc30000	sw	(r30),r3
 1538  00002184  80420000	lb	r2,(r2)
 1539  00002188  a0220000	sb	(r1),r2
 1540  0000218c  0bffffbc	j	L101_LF2
 1541  00002190  54000000	nop; delay slot nop
 1542  00002194          	L102_LF2:
 1543  00002194          	L100_LF2:
 1544  00002194  8fa20000	lw	r2,0(r29)
 1545  00002198  8fa30004	lw	r3,4(r29)
 1546  0000219c  8fdffff8	lw	r31,-8(r30)
 1547  000021a0  001ee820	add	r29,r0,r30
 1548  000021a4  8fdefffc	lw	r30,-4(r30)
 1549  000021a8  4be00000	jr	r31
 1550  000021ac  54000000	nop
 1551  000021b0          	.endproc _bcopy
 1552  000021b0          	.align 2
 1553  000021b0          	.proc _bzero
 1554  000021b0          	.global _bzero
 1555  000021b0          	_bzero:
 1556                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1557  000021b0  afbefffc	sw	-4(r29),r30; push fp
 1558  000021b4  001df020	add	r30,r0,r29; fp = sp
 1559  000021b8  afbffff8	sw	-8(r29),r31; push ret addr
 1560  000021bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1561  000021c0  afa20000	sw	0(r29),r2
 1562  000021c4  54000000	nop
 1563  000021c8          	L105_LF2:
 1564  000021c8  8fc10004	lw	r1,4(r30)
 1565  000021cc  2022ffff	addi	r2,r1,#-1
 1566  000021d0  afc20004	sw	4(r30),r2
 1567  000021d4  6c210000	sgti	r1,r1,#0
 1568  000021d8  1420000c	bnez	r1,L107_LF2
 1569  000021dc  54000000	nop; delay slot nop
 1570  000021e0  08000020	j	L106_LF2
 1571  000021e4  54000000	nop; delay slot nop
 1572  000021e8          	L107_LF2:
 1573  000021e8  8fc10000	lw	r1,(r30)
 1574  000021ec  20220001	addi	r2,r1,#1
 1575  000021f0  afc20000	sw	(r30),r2
 1576  000021f4  20020000	addi	r2,r0,(#0x0)&0xff
 1577  000021f8  a0220000	sb	(r1),r2
 1578  000021fc  0bffffc8	j	L105_LF2
 1579  00002200  54000000	nop; delay slot nop
 1580  00002204          	L106_LF2:
 1581  00002204          	L104_LF2:
 1582  00002204  8fa20000	lw	r2,0(r29)
 1583  00002208  8fdffff8	lw	r31,-8(r30)
 1584  0000220c  001ee820	add	r29,r0,r30
 1585  00002210  8fdefffc	lw	r30,-4(r30)
 1586  00002214  4be00000	jr	r31
 1587  00002218  54000000	nop
 1588  0000221c          	.endproc _bzero
 1589  0000221c          	.align 2
 1590  0000221c          	.proc _min
 1591  0000221c          	.global _min
 1592  0000221c          	_min:
 1593                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1594  0000221c  afbefffc	sw	-4(r29),r30; push fp
 1595  00002220  001df020	add	r30,r0,r29; fp = sp
 1596  00002224  afbffff8	sw	-8(r29),r31; push ret addr
 1597  00002228  2fbd0010	subui	r29,r29,#16; alloc local storage
 1598  0000222c  afa20000	sw	0(r29),r2
 1599  00002230  afa30004	sw	4(r29),r3
 1600  00002234  8fc10000	lw	r1,(r30)
 1601  00002238  8fc20004	lw	r2,4(r30)
 1602  0000223c  0022182c	sle	r3,r1,r2
 1603  00002240  14600008	bnez	r3,L109_LF2
 1604  00002244  54000000	nop; delay slot nop
 1605  00002248  8fc10004	lw	r1,4(r30)
 1606  0000224c          	L109_LF2:
 1607  0000224c  08000004	j	L108_LF2
 1608  00002250  54000000	nop; delay slot nop
 1609  00002254          	L108_LF2:
 1610  00002254  8fa20000	lw	r2,0(r29)
 1611  00002258  8fa30004	lw	r3,4(r29)
 1612  0000225c  8fdffff8	lw	r31,-8(r30)
 1613  00002260  001ee820	add	r29,r0,r30
 1614  00002264  8fdefffc	lw	r30,-4(r30)
 1615  00002268  4be00000	jr	r31
 1616  0000226c  54000000	nop
 1617  00002270          	.endproc _min
 1618  00002270          	.align 2
 1619  00002270          	.proc _max
 1620  00002270          	.global _max
 1621  00002270          	_max:
 1622                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1623  00002270  afbefffc	sw	-4(r29),r30; push fp
 1624  00002274  001df020	add	r30,r0,r29; fp = sp
 1625  00002278  afbffff8	sw	-8(r29),r31; push ret addr
 1626  0000227c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1627  00002280  afa20000	sw	0(r29),r2
 1628  00002284  afa30004	sw	4(r29),r3
 1629  00002288  8fc10000	lw	r1,(r30)
 1630  0000228c  8fc20004	lw	r2,4(r30)
 1631  00002290  0022182d	sge	r3,r1,r2
 1632  00002294  14600008	bnez	r3,L111_LF2
 1633  00002298  54000000	nop; delay slot nop
 1634  0000229c  8fc10004	lw	r1,4(r30)
 1635  000022a0          	L111_LF2:
 1636  000022a0  08000004	j	L110_LF2
 1637  000022a4  54000000	nop; delay slot nop
 1638  000022a8          	L110_LF2:
 1639  000022a8  8fa20000	lw	r2,0(r29)
 1640  000022ac  8fa30004	lw	r3,4(r29)
 1641  000022b0  8fdffff8	lw	r31,-8(r30)
 1642  000022b4  001ee820	add	r29,r0,r30
 1643  000022b8  8fdefffc	lw	r30,-4(r30)
 1644  000022bc  4be00000	jr	r31
 1645  000022c0  54000000	nop
 1646  000022c4          	.endproc _max
 1647                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1648                      ;;;
 1649                      ;;; Most of the traps are called in files from libtraps.
 1652  000022c4          	.align 2
 1653  000022c4          	.proc _exit
 1654  000022c4          	.global _exit
 1655  000022c4          	_exit:
 1656  000022c4  44000300	trap	#0x300
 1657  000022c8  4be00000	jr	r31
 1658  000022cc  54000000	nop
 1659  000022d0          	.endproc _exit
 1661                      ; for the benefit of gcc.
 1662  000022d0          	.proc ___main
 1663  000022d0          	.global ___main
 1664  000022d0          	___main:
 1665  000022d0  4be00000	jr	r31
 1666  000022d4  54000000	nop
 1667  000022d8          	.endproc ___main
 1668  000022d8          	.text
 1669  000022d8          	.global _etext
 1670  000022d8          	_etext:
 1671  000022d8          	.align 3
 1672  000022d8          	.data
 1673  000030e9          	.global _edata
 1674  000030e9          	_edata:
