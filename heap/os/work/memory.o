; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
_negativeone:
	.word -1
.text
	.align 2
.proc _MemoryGetSize
.global _MemoryGetSize
_MemoryGetSize:
;  Function 'MemoryGetSize'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lhi	r2,#-1
	addui	r2,r2,#0
	lw	r1,(r2)
	j	L14
	nop	; delay slot nop
L14:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetSize
.data
	.align 2
LC0:
	.ascii "Freemap size = %d\nLastosaddress = %d\n\000"
	.align 2
LC1:
	.ascii "%d, \000"
	.align 2
LC2:
	.ascii "\n\000"
.text
	.align 2
.proc _MemoryModuleInit
.global _MemoryModuleInit
_MemoryModuleInit:
;  Function 'MemoryModuleInit'; 24 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r1,r0,#0
	sw	-12(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r2,(r1)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L16
	nop	; delay slot nop
	addi	r1,r1,#4095
L16:
	srai	r1,r1,#0xc
	sw	-20(r30),r1
	lw	r2,-20(r30)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L17
	nop	; delay slot nop
	addi	r1,r1,#31
L17:
	srai	r1,r1,#0x5
	sw	-24(r30),r1
	lw	r1,-20(r30)
	add	r2,r0,r1
	sgei	r3,r2,#0
	bnez	r3,L18
	nop	; delay slot nop
	addi	r2,r2,#31
L18:
	srai	r2,r2,#0x5
	addi	r3,r0,#32
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	sub	r1,r1,r2
	addi	r2,r1,#1
	sw	-28(r30),r2
	addi	r1,r0,#16
	sw	-32(r30),r1
	addi	r1,r0,#0
	sw	-12(r30),r1
L19:
	lw	r1,-12(r30)
	lw	r2,-32(r30)
	slt	r1,r1,r2
	bnez	r1,L22
	nop	; delay slot nop
	j	L20
	nop	; delay slot nop
L22:
	lw	r1,-12(r30)
	lw	r2,-24(r30)
	slt	r1,r1,r2
	beqz	r1,L23
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r1,r2,r5
	lhi	r2,((_negativeone)>>16)&0xffff
	addui	r2,r2,(_negativeone)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	j	L21
	nop	; delay slot nop
L23:
	lw	r1,-12(r30)
	lw	r2,-24(r30)
	sgt	r1,r1,r2
	beqz	r1,L25
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r1,r5
	addi	r1,r0,#0
	sw	(r2),r1
	j	L21
	nop	; delay slot nop
L25:
	addi	r1,r0,#0
	sw	-16(r30),r1
L27:
	lw	r1,-16(r30)
	lw	r2,-28(r30)
	slt	r1,r1,r2
	bnez	r1,L30
	nop	; delay slot nop
	j	L21
	nop	; delay slot nop
L30:
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r1,r2,r5
	lw	r2,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r3,r5
	addi	r3,r0,#1
	lw	r4,-16(r30)
	sll	r3,r3,r4
	lw	r2,(r2)
	or	r3,r2,r3
	sw	(r1),r3
L29:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L27
	nop	; delay slot nop
L28:
L26:
L24:
L21:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L19
	nop	; delay slot nop
L20:
	lhi	r1,((_pagestart)>>16)&0xffff
	addui	r1,r1,(_pagestart)&0xffff
	lw	r2,-20(r30)
	addi	r3,r2,#1
	sw	(r1),r3
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	lw	r2,-32(r30)
	sw	4(r1),r2
	lhi	r2,((_lastosaddress)>>16)&0xffff
	addui	r2,r2,(_lastosaddress)&0xffff
	lw	r3,(r2)
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#0
	sw	-12(r30),r1
L31:
	lw	r1,-12(r30)
	lw	r2,-32(r30)
	slt	r1,r1,r2
	bnez	r1,L34
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L34:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r3,r2,r5
	lw	r2,(r3)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L33:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L31
	nop	; delay slot nop
L32:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L15:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryModuleInit
.data
	.align 2
LC3:
	.ascii "System address 0x%x found\n\000"
.text
	.align 2
.proc _MemoryTranslateUserToSystem
.global _MemoryTranslateUserToSystem
_MemoryTranslateUserToSystem:
;  Function 'MemoryTranslateUserToSystem'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,4(r30)
	andi	r2,r1,#4095
	sw	-12(r30),r2
	lw	r2,4(r30)
	srli	r1,r2,#0xc
	andi	r2,r1,#255
	sw	-16(r30),r2
	lw	r1,(r30)
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r1,(r2)
	addi	r4,r0,#-8
	and	r2,r1,r4
	sw	-20(r30),r2
	lw	r1,(r30)
	lw	r2,12(r1)
	andi	r1,r2,#256
	snei	r2,r1,#0
	beqz	r2,L36
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,4(r30)
	j	L35
	nop	; delay slot nop
L36:
	lw	r1,-20(r30)
	lw	r3,-12(r30)
	or	r2,r1,r3
	add	r1,r0,r2
	j	L35
	nop	; delay slot nop
L35:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryTranslateUserToSystem
	.align 2
.proc _MemoryMoveBetweenSpaces
.global _MemoryMoveBetweenSpaces
_MemoryMoveBetweenSpaces:
;  Function 'MemoryMoveBetweenSpaces'; 16 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L38:
	lw	r1,12(r30)
	sgti	r2,r1,#0
	bnez	r2,L40
	nop	; delay slot nop
	j	L39
	nop	; delay slot nop
L40:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L41
	nop	; delay slot nop
	j	L39
	nop	; delay slot nop
L41:
	lw	r2,-12(r30)
	andi	r1,r2,#4095
	addi	r2,r0,#4096
	sub	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-20(r30)
	lw	r2,12(r30)
	sgt	r1,r1,r2
	beqz	r1,L42
	nop	; delay slot nop
	lw	r1,12(r30)
	sw	-20(r30),r1
L42:
	lw	r1,16(r30)
	sgei	r2,r1,#0
	beqz	r2,L43
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	j	L44
	nop	; delay slot nop
L43:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
L44:
	lw	r1,12(r30)
	lw	r2,-20(r30)
	sub	r1,r1,r2
	sw	12(r30),r1
	lw	r1,-16(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	-16(r30),r1
	lw	r1,4(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	4(r30),r1
	lw	r1,8(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	8(r30),r1
	j	L38
	nop	; delay slot nop
L39:
	lw	r1,-16(r30)
	j	L37
	nop	; delay slot nop
L37:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryMoveBetweenSpaces
	.align 2
.proc _MemoryCopySystemToUser
.global _MemoryCopySystemToUser
_MemoryCopySystemToUser:
;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,8(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L45
	nop	; delay slot nop
L45:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopySystemToUser
	.align 2
.proc _MemoryCopyUserToSystem
.global _MemoryCopyUserToSystem
_MemoryCopyUserToSystem:
;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#-1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L46
	nop	; delay slot nop
L46:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopyUserToSystem
.data
	.align 2
LC4:
	.ascii "m\000"
	.align 2
LC5:
	.ascii "Page table %d allocated\n\000"
.text
	.align 2
.proc _MemoryPageFaultHandler
.global _MemoryPageFaultHandler
_MemoryPageFaultHandler:
;  Function 'MemoryPageFaultHandler'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#308
	lw	r2,(r1)
	sw	-12(r30),r2
	addi	r1,r0,#254
	sw	-16(r30),r1
	lw	r1,(r30)
	lw	r2,-12(r30)
	lw	r1,4(r1)
	sltu	r2,r2,r1
	beqz	r2,L48
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
L48:
	nop
L49:
	lw	r1,(r30)
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r1,(r2)
	snei	r2,r1,#0
	beqz	r2,L52
	nop	; delay slot nop
	lw	r1,-16(r30)
	sgti	r2,r1,#0
	bnez	r2,L51
	nop	; delay slot nop
	j	L52
	nop	; delay slot nop
L52:
	j	L50
	nop	; delay slot nop
L51:
	lw	r2,-16(r30)
	addi	r1,r2,#-1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L49
	nop	; delay slot nop
L50:
	lw	r1,-16(r30)
	snei	r2,r1,#0
	bnez	r2,L53
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
L53:
	add	r2,r0,r29
	jal	_MemoryAllocUserPage
	nop	; delay slot nop
	lw	r2,(r30)
	lw	r3,-16(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	sw	(r3),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L54
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,-16(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	lw	r2,(r3)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L54:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L55
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,-16(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	lw	r2,(r3)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L55:
	addi	r1,r0,#1
	j	L47
	nop	; delay slot nop
L47:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryPageFaultHandler
.data
	.align 2
LC6:
	.ascii "No free page found!\n\000"
.text
	.align 2
.proc _findFreePage
.global _findFreePage
_findFreePage:
;  Function 'findFreePage'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L57:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L60
	nop	; delay slot nop
	j	L58
	nop	; delay slot nop
L60:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r1,r5
	lhi	r1,((_negativeone)>>16)&0xffff
	addui	r1,r1,(_negativeone)&0xffff
	lw	r2,(r2)
	lw	r1,(r1)
	sne	r2,r2,r1
	beqz	r2,L59
	nop	; delay slot nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L62:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L65
	nop	; delay slot nop
	j	L59
	nop	; delay slot nop
L65:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r1,r5
	lw	r1,(r2)
	lw	r2,-16(r30)
	srl	r1,r1,r2
	andi	r2,r1,#1
	snei	r1,r2,#0
	bnez	r1,L64
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r1,r2,r5
	lw	r2,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r3,r5
	addi	r3,r0,#1
	lw	r4,-16(r30)
	sll	r3,r3,r4
	lw	r2,(r2)
	or	r3,r2,r3
	sw	(r1),r3
	lw	r1,-12(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x5
	lw	r3,-16(r30)
	add	r2,r1,r3
	add	r1,r0,r2
	j	L56
	nop	; delay slot nop
L66:
L64:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L62
	nop	; delay slot nop
L63:
L61:
L59:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L57
	nop	; delay slot nop
L58:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L56:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _findFreePage
	.align 2
.proc _MemoryAllocUserPage
.global _MemoryAllocUserPage
_MemoryAllocUserPage:
;  Function 'MemoryAllocUserPage'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	add	r2,r0,r29
	jal	_findFreePage
	nop	; delay slot nop
	addi	r2,r0,#4096
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	sw	-12(r30),r1
	lw	r1,-12(r30)
	addi	r3,r0,#-256
	and	r2,r1,r3
	sw	-12(r30),r2
	lw	r1,-12(r30)
	ori	r2,r1,#1
	add	r1,r0,r2
	j	L67
	nop	; delay slot nop
L67:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocUserPage
	.align 2
.proc _MemoryAllocSysPage
.global _MemoryAllocSysPage
_MemoryAllocSysPage:
;  Function 'MemoryAllocSysPage'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	add	r2,r0,r29
	jal	_findFreePage
	nop	; delay slot nop
	sw	-12(r30),r1
	lw	r1,-12(r30)
	add	r2,r0,r1
	slli	r1,r2,#0xc
	sw	-16(r30),r1
	lw	r1,-16(r30)
	j	L68
	nop	; delay slot nop
L68:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocSysPage
	.align 2
.proc _MemorySetupPte
.global _MemorySetupPte
_MemorySetupPte:
;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L69
	nop	; delay slot nop
L69:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetupPte
	.align 2
.proc _MemoryFreePage
.global _MemoryFreePage
_MemoryFreePage:
;  Function 'MemoryFreePage'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	srli	r1,r2,#0xc
	sw	(r30),r1
	lw	r2,(r30)
	srli	r1,r2,#0x5
	sw	-12(r30),r1
	lw	r1,(r30)
	andi	r2,r1,#31
	sw	-16(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#1
	lw	r3,-16(r30)
	sll	r2,r2,r3
	sw	(r1),r2
	jal	_invert
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r3,r5
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r4,r3,r5
	lw	r3,(r4)
	and	r1,r3,r1
	sw	(r2),r1
L70:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePage
	.align 2
.proc _pow2
.global _pow2
_pow2:
;  Function 'pow2'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#1
	sw	-16(r30),r1
	lw	r1,(r30)
	andi	r2,r1,#15
	sw	(r30),r2
	addi	r1,r0,#0
	sw	-12(r30),r1
L72:
	lw	r1,-12(r30)
	lw	r2,(r30)
	slt	r1,r1,r2
	bnez	r1,L75
	nop	; delay slot nop
	j	L73
	nop	; delay slot nop
L75:
	lw	r1,-16(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x1
	sw	-16(r30),r1
L74:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L72
	nop	; delay slot nop
L73:
	lw	r1,-16(r30)
	j	L71
	nop	; delay slot nop
L71:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _pow2
.data
	.align 2
LC7:
	.word 0x3f800000	
;;              1.0000000e+00
.text
	.align 2
.proc _log2
.global _log2
_log2:
;  Function 'log2'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sf	4(r29),f2
	addi	r1,r0,#0
	sw	-12(r30),r1
	lhi	r1,((LC7)>>16)&0xffff
	addui	r1,r1,(LC7)&0xffff
	lf	f1,(r1)
	sf	-16(r30),f1
L77:
	lf	f1,(r30)
	lf	f2,-16(r30)
	gtf	f1,f2
	bfpt	L79
	nop	; delay slot nop
	j	L78
	nop	; delay slot nop
L79:
	lf	f0,-16(r30)
	addf	f1,f0,f0
	sf	-16(r30),f1
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L77
	nop	; delay slot nop
L78:
	lw	r1,-12(r30)
	j	L76
	nop	; delay slot nop
L76:
	lw	r2,0(r29)
	lf	f2,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _log2
	.align 2
.proc _is_used
.global _is_used
_is_used:
;  Function 'is_used'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r2,(r30)
	srai	r1,r2,#0x4
	andi	r2,r1,#1
	add	r1,r0,r2
	j	L80
	nop	; delay slot nop
L80:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _is_used
.data
	.align 2
LC8:
	.ascii "Created a right child node (order = %d, addr = %d, size = %d) \000"
	.align 2
LC9:
	.ascii "of parent (order = %d, addr = %d, size = %d)\n\000"
	.align 2
LC10:
	.ascii "Created a left child node (order = %d, addr = %d, size = %d) \000"
.text
	.align 2
.proc _makeIndex
.global _makeIndex
_makeIndex:
;  Function 'makeIndex'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r1,r0,#0
	sw	-12(r30),r1
	addi	r1,r0,#128
	sw	-16(r30),r1
	lw	r1,-16(r30)
	sw	-20(r30),r1
L82:
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	slt	r1,r1,r2
	bnez	r1,L84
	nop	; delay slot nop
	j	L83
	nop	; delay slot nop
L84:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	lw	r1,(r30)
	seq	r2,r2,r1
	beqz	r2,L85
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L85
	nop	; delay slot nop
	lw	r1,-12(r30)
	j	L81
	nop	; delay slot nop
L85:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	lw	r1,(r30)
	sgt	r2,r2,r1
	beqz	r2,L86
	nop	; delay slot nop
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	slt	r1,r1,r2
	beqz	r1,L86
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L86
	nop	; delay slot nop
	lw	r1,-12(r30)
	sw	-20(r30),r1
L86:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-12(r30)
	add	r1,r2,r1
	sw	-12(r30),r1
	j	L82
	nop	; delay slot nop
L83:
	lw	r1,-20(r30)
	lw	r2,-16(r30)
	slt	r1,r1,r2
	beqz	r1,L87
	nop	; delay slot nop
	lw	r1,-20(r30)
	j	L88
	nop	; delay slot nop
L87:
	addi	r1,r0,#0
L88:
	sw	-12(r30),r1
L89:
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	slt	r1,r1,r2
	beqz	r1,L92
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	lw	r1,(r30)
	sne	r2,r2,r1
	bnez	r2,L91
	nop	; delay slot nop
	j	L92
	nop	; delay slot nop
L92:
	j	L90
	nop	; delay slot nop
L91:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L93
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	lw	r1,(r30)
	sgt	r2,r2,r1
	beqz	r2,L93
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	addi	r2,r3,#-1
	sw	(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-12(r30)
	add	r1,r1,r2
	sw	-24(r30),r1
	lw	r1,-24(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC8)>>16)&0xffff
	addui	r3,r3,(LC8)&0xffff
	sw	(r2),r3
	lw	r3,-24(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,4(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	sw	4(r2),r4
	lw	r3,-24(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	addi	r2,r3,#1
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC9)>>16)&0xffff
	addui	r3,r3,(LC9)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,4(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	addi	r3,r4,#1
	sw	4(r2),r3
	lw	r3,-12(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC10)>>16)&0xffff
	addui	r3,r3,(LC10)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,4(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	sw	4(r2),r4
	lw	r3,-12(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	addi	r2,r3,#1
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC9)>>16)&0xffff
	addui	r3,r3,(LC9)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,4(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	addi	r3,r4,#1
	sw	4(r2),r3
	lw	r3,-12(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	j	L94
	nop	; delay slot nop
L93:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,4(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-12(r30)
	add	r1,r2,r1
	sw	-12(r30),r1
L94:
	j	L89
	nop	; delay slot nop
L90:
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	seq	r1,r1,r2
	beqz	r1,L95
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L81
	nop	; delay slot nop
L95:
	lw	r1,-12(r30)
	j	L81
	nop	; delay slot nop
L81:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _makeIndex
.data
	.align 2
LC11:
	.ascii "%d\t\000"
.text
	.align 2
.proc _printHeap
.global _printHeap
_printHeap:
;  Function 'printHeap'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	addi	r1,r0,#128
	sw	-12(r30),r1
	addi	r1,r0,#8
	sw	-24(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
L97:
	lw	r1,-16(r30)
	lw	r2,-24(r30)
	slt	r1,r1,r2
	bnez	r1,L100
	nop	; delay slot nop
	j	L98
	nop	; delay slot nop
L100:
	addi	r1,r0,#0
	sw	-20(r30),r1
L101:
	lw	r1,-12(r30)
	lw	r2,-24(r30)
	movi2fp	f0,r1
	movi2fp	f1,r2
	div	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,-20(r30)
	slt	r1,r2,r1
	bnez	r1,L104
	nop	; delay slot nop
	j	L102
	nop	; delay slot nop
L104:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	lw	r3,-24(r30)
	movi2fp	f0,r2
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,-16(r30)
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,-20(r30)
	add	r2,r2,r3
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	andi	r2,r3,#15
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L103:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L101
	nop	; delay slot nop
L102:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L99:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L97
	nop	; delay slot nop
L98:
L96:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _printHeap
.data
	.align 2
LC12:
	.ascii "%d |\t\000"
	.align 2
LC13:
	.ascii "%d  \000"
	.align 2
LC14:
	.ascii "\n\t\000"
.text
	.align 2
.proc _fancyPrint
.global _fancyPrint
_fancyPrint:
;  Function 'fancyPrint'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r1,r0,#128
	sw	-12(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
	addi	r1,r0,#0
	sw	-24(r30),r1
L106:
	lw	r1,-16(r30)
	lw	r2,-12(r30)
	slt	r1,r1,r2
	bnez	r1,L108
	nop	; delay slot nop
	j	L107
	nop	; delay slot nop
L108:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-24(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	andi	r2,r3,#15
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-20(r30),r1
L109:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-20(r30)
	slt	r1,r2,r1
	bnez	r1,L112
	nop	; delay slot nop
	j	L110
	nop	; delay slot nop
L112:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	lw	r2,-24(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-20(r30)
	snei	r2,r1,#0
	beqz	r2,L111
	nop	; delay slot nop
	lw	r1,-20(r30)
	addi	r3,r0,#12
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r2,r3,#0x2
	sub	r1,r1,r2
	snei	r2,r1,#0
	bnez	r2,L111
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC14)>>16)&0xffff
	addui	r2,r2,(LC14)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L113:
L111:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L109
	nop	; delay slot nop
L110:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-16(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	-16(r30),r1
	j	L106
	nop	; delay slot nop
L107:
L105:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _fancyPrint
.data
	.align 2
LC16:
	.ascii "Process (%d) Heap full\n\000"
	.align 2
LC17:
	.ascii "Allocated the block: \000"
	.align 2
LC18:
	.ascii "order = %d, \000"
	.align 2
LC19:
	.ascii "addr = %d, \000"
	.align 2
LC20:
	.ascii "requested mem size = %d, \000"
	.align 2
LC21:
	.ascii "block size = %d\n\000"
	.align 2
LC15:
	.word 0x42000000	
;;              3.2000000e+01
.text
	.align 2
.proc _malloc
.global _malloc
_malloc:
;  Function 'malloc'; 8 bytes of locals, 6 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sd	16(r29),f2
	lw	r1,4(r30)
	sgti	r2,r1,#4096
	bnez	r2,L116
	nop	; delay slot nop
	lw	r1,4(r30)
	slti	r2,r1,#0
	bnez	r2,L116
	nop	; delay slot nop
	j	L115
	nop	; delay slot nop
L116:
	addi	r1,r0,#0
	j	L114
	nop	; delay slot nop
L115:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	movi2fp	f0,r2
	cvti2f	f0,f0
	lhi	r2,((LC15)>>16)&0xffff
	addui	r2,r2,(LC15)&0xffff
	lf	f1,(r2)
	divf	f0,f0,f1
	sf	(r1),f0
	jal	_log2
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,(r30)
	addi	r3,r2,#1132
	sw	4(r1),r3
	jal	_makeIndex
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-16(r30),r1
	lw	r1,-16(r30)
	seqi	r2,r1,#-1
	beqz	r2,L117
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC16)>>16)&0xffff
	addui	r2,r2,(LC16)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L114
	nop	; delay slot nop
L117:
	lw	r1,(r30)
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f2,r2
	movi2fp	f3,r3
	mult	f2,f2,f3
	movfp2i	r2,f2
	add	r3,r2,r1
	addi	r1,r3,#1132
	lw	r2,(r30)
	lw	r3,-16(r30)
	addi	r4,r0,#4
	movi2fp	f2,r3
	movi2fp	f3,r4
	mult	f2,f2,f3
	movfp2i	r3,f2
	add	r2,r3,r2
	addi	r3,r2,#1132
	lw	r2,(r3)
	ori	r3,r2,#16
	sw	(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC17)>>16)&0xffff
	addui	r2,r2,(LC17)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC18)>>16)&0xffff
	addui	r2,r2,(LC18)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC19)>>16)&0xffff
	addui	r2,r2,(LC19)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	add	r3,r0,r2
	slli	r2,r3,#0x5
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC20)>>16)&0xffff
	addui	r2,r2,(LC20)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f2,r1
	movi2fp	f3,r2
	mult	f2,f2,f3
	movfp2i	r1,f2
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC21)>>16)&0xffff
	addui	r3,r3,(LC21)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#1132
	sw	(r1),r3
	jal	_fancyPrint
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,1128(r2)
	addi	r4,r0,#4
	movi2fp	f2,r3
	movi2fp	f3,r4
	mult	f2,f2,f3
	movfp2i	r2,f2
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r3,(r2)
	addi	r5,r0,#-8
	and	r1,r3,r5
	lw	r2,-16(r30)
	add	r3,r0,r2
	slli	r2,r3,#0x5
	or	r3,r1,r2
	add	r1,r0,r3
	j	L114
	nop	; delay slot nop
L114:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	ld	f2,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _malloc
.data
	.align 2
LC22:
	.ascii "Coalesced buddy nodes \000"
	.align 2
LC23:
	.ascii "(order = %d, addr = %d, size = %d) & \000"
	.align 2
LC24:
	.ascii "(order = %d, addr = %d, size = %d)\n\000"
	.align 2
LC25:
	.ascii "into the parent node \000"
.text
	.align 2
.proc _shrink
.global _shrink
_shrink:
;  Function 'shrink'; 24 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,4(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	sw	-12(r30),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
	addi	r1,r0,#0
	sw	-28(r30),r1
L119:
	lw	r1,-28(r30)
	lw	r2,4(r30)
	slt	r1,r1,r2
	bnez	r1,L121
	nop	; delay slot nop
	j	L120
	nop	; delay slot nop
L121:
	lw	r1,-28(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	andi	r1,r2,#15
	lw	r2,-12(r30)
	seq	r1,r1,r2
	beqz	r1,L122
	nop	; delay slot nop
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L123
	nop	; delay slot nop
L122:
	addi	r1,r0,#0
	sw	-16(r30),r1
L123:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-28(r30)
	add	r1,r2,r1
	sw	-28(r30),r1
	j	L119
	nop	; delay slot nop
L120:
	lw	r1,-16(r30)
	andi	r2,r1,#1
	snei	r1,r2,#0
	beqz	r1,L124
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,4(r30)
	sub	r1,r2,r1
	sw	-24(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L125
	nop	; delay slot nop
	j	L118
	nop	; delay slot nop
L125:
	lw	r1,4(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	(r1),r2
	lw	r1,-24(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	addi	r3,r2,#1
	sw	(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC22)>>16)&0xffff
	addui	r2,r2,(LC22)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC23)>>16)&0xffff
	addui	r3,r3,(LC23)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	sw	4(r2),r3
	lw	r3,4(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC24)>>16)&0xffff
	addui	r3,r3,(LC24)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	sw	4(r2),r3
	lw	r3,-24(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC25)>>16)&0xffff
	addui	r2,r2,(LC25)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC24)>>16)&0xffff
	addui	r3,r3,(LC24)&0xffff
	sw	(r2),r3
	lw	r3,-24(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	sw	4(r2),r4
	lw	r3,-24(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-24(r30)
	sw	4(r1),r2
	jal	_shrink
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L118
	nop	; delay slot nop
L124:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,4(r30)
	add	r1,r2,r1
	sw	-24(r30),r1
	lw	r1,-24(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	lw	r1,-12(r30)
	seq	r2,r2,r1
	beqz	r2,L126
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L126
	nop	; delay slot nop
	lw	r1,-24(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	(r1),r2
	lw	r1,4(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	addi	r3,r2,#1
	sw	(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC22)>>16)&0xffff
	addui	r2,r2,(LC22)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC23)>>16)&0xffff
	addui	r3,r3,(LC23)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	sw	4(r2),r3
	lw	r3,-24(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC24)>>16)&0xffff
	addui	r3,r3,(LC24)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	sw	4(r2),r3
	lw	r3,4(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC25)>>16)&0xffff
	addui	r2,r2,(LC25)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,(r2)
	sw	(r1),r3
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC24)>>16)&0xffff
	addui	r3,r3,(LC24)&0xffff
	sw	(r2),r3
	lw	r3,4(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lw	r4,(r30)
	add	r3,r3,r4
	lw	r4,(r3)
	sw	4(r2),r4
	lw	r3,4(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x5
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	jal	_shrink
	nop	; delay slot nop
	addi	r29,r29,#8
L126:
	j	L118
	nop	; delay slot nop
L118:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _shrink
.data
	.align 2
LC26:
	.ascii "Not a valid heap address\n\000"
	.align 2
LC27:
	.ascii "Freed the block: order = %d, addr = %d, size = %d\n\000"
.text
	.align 2
.proc _mfree
.global _mfree
_mfree:
;  Function 'mfree'; 24 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,4(r30)
	srai	r1,r2,#0xc
	andi	r2,r1,#255
	sw	-12(r30),r2
	lw	r1,4(r30)
	andi	r2,r1,#4095
	sw	-16(r30),r2
	lw	r2,-16(r30)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L128
	nop	; delay slot nop
	addi	r1,r1,#31
L128:
	srai	r1,r1,#0x5
	sw	-20(r30),r1
	lw	r1,(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#1132
	lw	r1,(r2)
	andi	r2,r1,#15
	sw	-24(r30),r2
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,1128(r2)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r3,(r2)
	srli	r1,r3,#0xc
	andi	r2,r1,#255
	sw	-28(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	lw	r3,-20(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#1132
	lw	r2,(r3)
	sw	(r1),r2
	jal	_is_used
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L130
	nop	; delay slot nop
	lw	r1,-12(r30)
	lw	r2,-28(r30)
	sne	r1,r1,r2
	bnez	r1,L130
	nop	; delay slot nop
	j	L129
	nop	; delay slot nop
L130:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC26)>>16)&0xffff
	addui	r2,r2,(LC26)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L127
	nop	; delay slot nop
L129:
	lw	r1,(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r3,r2,r1
	addi	r1,r3,#1132
	lw	r2,(r30)
	lw	r3,-20(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#1132
	lw	r2,(r3)
	addi	r5,r0,#-17
	and	r3,r2,r5
	sw	(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#1132
	sw	(r1),r3
	lw	r2,-20(r30)
	sw	4(r1),r2
	jal	_shrink
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#1132
	sw	(r1),r3
	jal	_fancyPrint
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	sw	(r1),r2
	jal	_pow2
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC27)>>16)&0xffff
	addui	r3,r3,(LC27)&0xffff
	sw	(r2),r3
	lw	r3,-24(r30)
	sw	4(r2),r3
	lw	r3,-16(r30)
	sw	8(r2),r3
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#0
	j	L127
	nop	; delay slot nop
L127:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _mfree
.data
	.align 2
_freemap:
	.space 64
	.align 2
_pagestart:
	.space 4
	.align 2
_nfreepages:
	.space 4
	.align 2
_freemapmax:
	.space 4
.text
	.align 2
.proc _invert
_invert:
;  Function 'invert'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	lhi	r1,((_negativeone)>>16)&0xffff
	addui	r1,r1,(_negativeone)&0xffff
	lw	r4,(r1)
	xor	r3,r2,r4
	add	r1,r0,r3
	j	L12
	nop	; delay slot nop
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _invert
